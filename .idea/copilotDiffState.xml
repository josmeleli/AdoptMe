<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.adoptmev5&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.adoptmev5&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(libs.lifecycle.livedata.ktx)&#10;    implementation(libs.lifecycle.viewmodel.ktx)&#10;    implementation(libs.navigation.fragment)&#10;    implementation(libs.navigation.ui)&#10;    implementation(libs.legacy.support.v4)&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.adoptmev5&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.adoptmev5&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(libs.lifecycle.livedata.ktx)&#10;    implementation(libs.lifecycle.viewmodel.ktx)&#10;    implementation(libs.navigation.fragment)&#10;    implementation(libs.navigation.ui)&#10;    implementation(libs.legacy.support.v4)&#10;    &#10;    // Glide para cargar imágenes desde URL&#10;    implementation(&quot;com.github.bumptech.glide:glide:4.16.0&quot;)&#10;    annotationProcessor(&quot;com.github.bumptech.glide:compiler:4.16.0&quot;)&#10;    &#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;    android:allowBackup=&quot;true&quot;&#10;    android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;    android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;    android:icon=&quot;@mipmap/ic_launcher&quot;&#10;    android:label=&quot;@string/app_name&quot;&#10;    android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;    android:supportsRtl=&quot;true&quot;&#10;    android:theme=&quot;@style/Theme.AdoptMeV5&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;!-- Permiso necesario para peticiones de red --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AdoptMeV5&quot;&#10;        android:networkSecurityConfig=&quot;@xml/network_security_config&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.EditProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Verify Activity --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.VerifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;&#10;    private Button buttonLogin;&#10;    private TextView textViewRegister;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Referencia al botón de login&#10;        buttonLogin = findViewById(R.id.button_login);&#10;        // Referencia al texto &quot;Regístrate&quot;&#10;        textViewRegister = findViewById(R.id.textView_register);&#10;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#10;        buttonLogin.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;            startActivity(intent);&#10;            finish(); // Opcional: cierra la actividad de login&#10;        });&#10;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;; // Cambia a la URL de tu API si no usas emulador&#10;&#10;    private Button buttonLogin;&#10;    private TextView textViewRegister;&#10;    private EditText editTextEmail;&#10;    private EditText editTextPassword;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Referencia al botón de login&#10;        buttonLogin = findViewById(R.id.button_login);&#10;        // Referencia al texto &quot;Regístrate&quot;&#10;        textViewRegister = findViewById(R.id.textView_register);&#10;&#10;        // Referencias a inputs&#10;        editTextEmail = findViewById(R.id.editText_email);&#10;        editTextPassword = findViewById(R.id.editText_password);&#10;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#10;        buttonLogin.setOnClickListener(v -&gt; attemptLogin());&#10;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void attemptLogin() {&#10;        final String email = editTextEmail.getText().toString().trim();&#10;        final String password = editTextPassword.getText().toString().trim();&#10;&#10;        if (email.isEmpty() || password.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa email y contraseña&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Petición en background&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;email&quot;, email);&#10;                body.put(&quot;password&quot;, password);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/login.php&quot;, body);&#10;                if (resp == null) {&#10;                    showToast(&quot;Error en la conexión&quot;);&#10;                    return;&#10;                }&#10;&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    String token = resp.optString(&quot;token&quot;, &quot;&quot;);&#10;                    JSONObject user = resp.optJSONObject(&quot;user&quot;);&#10;                    int userId = user != null ? user.optInt(&quot;id&quot;, -1) : -1;&#10;&#10;                    // Guardar token y user_id&#10;                    SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;                    prefs.edit().putString(&quot;token&quot;, token).putInt(&quot;user_id&quot;, userId).apply();&#10;&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(LoginActivity.this, &quot;Login exitoso&quot;, Toast.LENGTH_SHORT).show();&#10;                        Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;                        startActivity(intent);&#10;                        finish();&#10;                    });&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Credenciales inválidas&quot;);&#10;                    showToast(msg);&#10;                }&#10;&#10;            } catch (java.net.UnknownHostException e) {&#10;                e.printStackTrace();&#10;                showToast(&quot;Error: No se puede conectar al servidor. Verifica que tu API esté corriendo.&quot;);&#10;            } catch (java.io.IOException e) {&#10;                e.printStackTrace();&#10;                String errorMsg = e.getMessage();&#10;                if (errorMsg != null &amp;&amp; errorMsg.contains(&quot;Cleartext HTTP&quot;)) {&#10;                    showToast(&quot;Error: HTTP no permitido. Desinstala la app del emulador e instala de nuevo.&quot;);&#10;                } else {&#10;                    showToast(&quot;Error de conexión: &quot; + errorMsg);&#10;                }&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                showToast(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject postJson(String urlString, JSONObject payload) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;&#10;    private void showToast(String msg) {&#10;        runOnUiThread(() -&gt; Toast.makeText(LoginActivity.this, msg, Toast.LENGTH_LONG).show());&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class VerifyActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextCode;&#10;    private Button buttonVerify, buttonSkip;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_verify);&#10;&#10;        editTextCode = findViewById(R.id.editText_code);&#10;        buttonVerify = findViewById(R.id.button_verify);&#10;        buttonSkip = findViewById(R.id.button_skip);&#10;&#10;        buttonVerify.setOnClickListener(v -&gt; attemptVerify());&#10;        buttonSkip.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void attemptVerify() {&#10;        final String code = editTextCode.getText().toString().trim();&#10;        if (code.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa el código&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        int userId = prefs.getInt(&quot;pending_user_id&quot;, -1);&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;No hay usuario pendiente&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                body.put(&quot;code&quot;, code);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/verify.php&quot;, body);&#10;                if (resp == null) {&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error en la conexión&quot;, Toast.LENGTH_SHORT).show());&#10;                    return;&#10;                }&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    // Verified&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(VerifyActivity.this, &quot;Cuenta verificada&quot;, Toast.LENGTH_LONG).show();&#10;                        startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;                        finish();&#10;                    });&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Código inválido&quot;);&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, msg, Toast.LENGTH_LONG).show());&#10;                }&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject postJson(String urlString, org.json.JSONObject payload) throws IOException, org.json.JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/PetsApiService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/PetsApiService.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.api;&#10;&#10;import com.example.adoptmev5.models.Pet;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;import java.net.URLEncoder;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;public class PetsApiService {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    public interface PetsCallback {&#10;        void onSuccess(List&lt;Pet&gt; pets, JSONObject pagination);&#10;        void onError(String error);&#10;    }&#10;&#10;    public interface PetDetailCallback {&#10;        void onSuccess(Pet pet);&#10;        void onError(String error);&#10;    }&#10;&#10;    /**&#10;     * Obtener lista de mascotas con filtros&#10;     */&#10;    public static void getPets(Map&lt;String, String&gt; filters, PetsCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                // Construir URL con parámetros&#10;                StringBuilder urlBuilder = new StringBuilder(BASE_URL + &quot;/pets/getPets.php?&quot;);&#10;&#10;                if (filters != null &amp;&amp; !filters.isEmpty()) {&#10;                    boolean first = true;&#10;                    for (Map.Entry&lt;String, String&gt; entry : filters.entrySet()) {&#10;                        if (!first) urlBuilder.append(&quot;&amp;&quot;);&#10;                        urlBuilder.append(URLEncoder.encode(entry.getKey(), &quot;UTF-8&quot;));&#10;                        urlBuilder.append(&quot;=&quot;);&#10;                        urlBuilder.append(URLEncoder.encode(entry.getValue(), &quot;UTF-8&quot;));&#10;                        first = false;&#10;                    }&#10;                }&#10;&#10;                String finalUrl = urlBuilder.toString();&#10;                android.util.Log.d(&quot;PetsApiService&quot;, &quot;GET: &quot; + finalUrl);&#10;&#10;                URL url = new URL(finalUrl);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                BufferedReader br = new BufferedReader(new InputStreamReader(&#10;                        code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;));&#10;                StringBuilder sb = new StringBuilder();&#10;                String line;&#10;                while ((line = br.readLine()) != null) {&#10;                    sb.append(line);&#10;                }&#10;                br.close();&#10;                conn.disconnect();&#10;&#10;                String responseBody = sb.toString();&#10;                android.util.Log.d(&quot;PetsApiService&quot;, &quot;Response: &quot; + responseBody);&#10;&#10;                JSONObject response = new JSONObject(responseBody);&#10;&#10;                if (response.optBoolean(&quot;success&quot;, false)) {&#10;                    JSONArray dataArray = response.optJSONArray(&quot;data&quot;);&#10;                    JSONObject pagination = response.optJSONObject(&quot;pagination&quot;);&#10;&#10;                    List&lt;Pet&gt; pets = new ArrayList&lt;&gt;();&#10;                    if (dataArray != null) {&#10;                        for (int i = 0; i &lt; dataArray.length(); i++) {&#10;                            pets.add(parsePet(dataArray.getJSONObject(i)));&#10;                        }&#10;                    }&#10;&#10;                    callback.onSuccess(pets, pagination);&#10;                } else {&#10;                    callback.onError(response.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#10;                }&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                callback.onError(&quot;Error de conexión: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Obtener detalles de una mascota&#10;     */&#10;    public static void getPetDetails(int petId, PetDetailCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/pets/getPetDetails.php?pet_id=&quot; + petId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                BufferedReader br = new BufferedReader(new InputStreamReader(&#10;                        code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;));&#10;                StringBuilder sb = new StringBuilder();&#10;                String line;&#10;                while ((line = br.readLine()) != null) {&#10;                    sb.append(line);&#10;                }&#10;                br.close();&#10;                conn.disconnect();&#10;&#10;                JSONObject response = new JSONObject(sb.toString());&#10;&#10;                if (response.optBoolean(&quot;success&quot;, false)) {&#10;                    JSONObject data = response.optJSONObject(&quot;data&quot;);&#10;                    if (data != null) {&#10;                        callback.onSuccess(parsePet(data));&#10;                    } else {&#10;                        callback.onError(&quot;No se encontraron datos&quot;);&#10;                    }&#10;                } else {&#10;                    callback.onError(response.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#10;                }&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                callback.onError(&quot;Error de conexión: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Parsear JSONObject a Pet&#10;     */&#10;    private static Pet parsePet(JSONObject json) {&#10;        Pet pet = new Pet();&#10;        pet.setId(json.optInt(&quot;id&quot;));&#10;        pet.setName(json.optString(&quot;name&quot;));&#10;        pet.setEspecie(json.optString(&quot;especie&quot;));&#10;        pet.setRaza(json.optString(&quot;raza&quot;));&#10;        pet.setEdad(json.optInt(&quot;edad&quot;));&#10;        pet.setTamano(json.optString(&quot;tamano&quot;));&#10;        pet.setSexo(json.optString(&quot;sexo&quot;));&#10;        pet.setDescripcion(json.optString(&quot;descripcion&quot;));&#10;        pet.setFotoUrl(json.optString(&quot;foto_url&quot;));&#10;        pet.setDistrito(json.optString(&quot;distrito&quot;));&#10;        pet.setUrgent(json.optBoolean(&quot;is_urgent&quot;));&#10;        pet.setPriority(json.optInt(&quot;priority&quot;));&#10;        pet.setEstado(json.optString(&quot;estado&quot;));&#10;        pet.setCreatedAt(json.optString(&quot;created_at&quot;));&#10;        pet.setEtiquetaUrgencia(json.optString(&quot;etiqueta_urgencia&quot;));&#10;        pet.setCategoriaEdad(json.optString(&quot;categoria_edad&quot;));&#10;        return pet;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Pet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Pet.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class Pet {&#10;    private int id;&#10;    private String name;&#10;    private String especie;&#10;    private String raza;&#10;    private int edad;&#10;    private String tamano;&#10;    private String sexo;&#10;    private String descripcion;&#10;    private String foto_url;&#10;    private String distrito;&#10;    private boolean is_urgent;&#10;    private int priority;&#10;    private String estado;&#10;    private String created_at;&#10;    private String etiqueta_urgencia;&#10;    private String categoria_edad;&#10;&#10;    // Constructor vacío&#10;    public Pet() {&#10;    }&#10;&#10;    // Getters&#10;    public int getId() { return id; }&#10;    public String getName() { return name; }&#10;    public String getEspecie() { return especie; }&#10;    public String getRaza() { return raza; }&#10;    public int getEdad() { return edad; }&#10;    public String getTamano() { return tamano; }&#10;    public String getSexo() { return sexo; }&#10;    public String getDescripcion() { return descripcion; }&#10;    public String getFotoUrl() { return foto_url; }&#10;    public String getDistrito() { return distrito; }&#10;    public boolean isUrgent() { return is_urgent; }&#10;    public int getPriority() { return priority; }&#10;    public String getEstado() { return estado; }&#10;    public String getCreatedAt() { return created_at; }&#10;    public String getEtiquetaUrgencia() { return etiqueta_urgencia; }&#10;    public String getCategoriaEdad() { return categoria_edad; }&#10;&#10;    // Setters&#10;    public void setId(int id) { this.id = id; }&#10;    public void setName(String name) { this.name = name; }&#10;    public void setEspecie(String especie) { this.especie = especie; }&#10;    public void setRaza(String raza) { this.raza = raza; }&#10;    public void setEdad(int edad) { this.edad = edad; }&#10;    public void setTamano(String tamano) { this.tamano = tamano; }&#10;    public void setSexo(String sexo) { this.sexo = sexo; }&#10;    public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;    public void setFotoUrl(String foto_url) { this.foto_url = foto_url; }&#10;    public void setDistrito(String distrito) { this.distrito = distrito; }&#10;    public void setUrgent(boolean is_urgent) { this.is_urgent = is_urgent; }&#10;    public void setPriority(int priority) { this.priority = priority; }&#10;    public void setEstado(String estado) { this.estado = estado; }&#10;    public void setCreatedAt(String created_at) { this.created_at = created_at; }&#10;    public void setEtiquetaUrgencia(String etiqueta_urgencia) { this.etiqueta_urgencia = etiqueta_urgencia; }&#10;    public void setCategoriaEdad(String categoria_edad) { this.categoria_edad = categoria_edad; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/EditProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/EditProfileActivity.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Spinner;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class EditProfileActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextNombres, editTextApellidos, editTextTelefono, editTextDistrito;&#10;    private Spinner spinnerEspecie, spinnerTamano, spinnerEdad;&#10;    private Button buttonSave, buttonCancel;&#10;&#10;    private int userId = -1;&#10;    &#10;    // Variables para almacenar datos originales&#10;    private String originalNombres = &quot;&quot;;&#10;    private String originalApellidos = &quot;&quot;;&#10;    private String originalTelefono = &quot;&quot;;&#10;    private String originalDistrito = &quot;&quot;;&#10;    private String originalEspecie = &quot;&quot;;&#10;    private String originalTamano = &quot;&quot;;&#10;    private String originalEdad = &quot;&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_profile);&#10;&#10;        // Obtener user_id de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;Error: No hay sesión activa&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Inicializar vistas&#10;        editTextNombres = findViewById(R.id.editText_nombres);&#10;        editTextApellidos = findViewById(R.id.editText_apellidos);&#10;        editTextTelefono = findViewById(R.id.editText_telefono);&#10;        editTextDistrito = findViewById(R.id.editText_distrito);&#10;&#10;        spinnerEspecie = findViewById(R.id.spinner_especie);&#10;        spinnerTamano = findViewById(R.id.spinner_tamano);&#10;        spinnerEdad = findViewById(R.id.spinner_edad);&#10;&#10;        buttonSave = findViewById(R.id.button_save);&#10;        buttonCancel = findViewById(R.id.button_cancel);&#10;&#10;        // Configurar spinners&#10;        setupSpinners();&#10;&#10;        // Cargar datos del usuario&#10;        loadUserData();&#10;&#10;        // Listeners&#10;        buttonSave.setOnClickListener(v -&gt; saveProfile());&#10;        buttonCancel.setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        // Especie&#10;        String[] especies = {&quot;Seleccionar&quot;, &quot;Perro&quot;, &quot;Gato&quot;, &quot;Ambos&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterEspecie = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, especies);&#10;        adapterEspecie.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerEspecie.setAdapter(adapterEspecie);&#10;&#10;        // Tamaño&#10;        String[] tamanos = {&quot;Seleccionar&quot;, &quot;Pequeño&quot;, &quot;Mediano&quot;, &quot;Grande&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterTamano = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, tamanos);&#10;        adapterTamano.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerTamano.setAdapter(adapterTamano);&#10;&#10;        // Edad&#10;        String[] edades = {&quot;Seleccionar&quot;, &quot;Cachorro&quot;, &quot;Adulto&quot;, &quot;Senior&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterEdad = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, edades);&#10;        adapterEdad.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerEdad.setAdapter(adapterEdad);&#10;    }&#10;&#10;    private void loadUserData() {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/users/getUser.php?user_id=&quot; + userId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                if (code == 200) {&#10;                    BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), &quot;UTF-8&quot;));&#10;                    StringBuilder sb = new StringBuilder();&#10;                    String line;&#10;                    while ((line = br.readLine()) != null) {&#10;                        sb.append(line);&#10;                    }&#10;                    br.close();&#10;&#10;                    JSONObject response = new JSONObject(sb.toString());&#10;&#10;                    // Actualizar UI en el hilo principal&#10;                    runOnUiThread(() -&gt; populateFields(response));&#10;                } else {&#10;                    runOnUiThread(() -&gt; Toast.makeText(EditProfileActivity.this,&#10;                            &quot;Error al cargar datos&quot;, Toast.LENGTH_SHORT).show());&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(EditProfileActivity.this,&#10;                        &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void populateFields(JSONObject data) {&#10;        try {&#10;            // Datos básicos&#10;            String nombres = data.optString(&quot;nombres&quot;, &quot;&quot;);&#10;            String apellidos = data.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;            String telefono = data.optString(&quot;telefono&quot;, &quot;&quot;);&#10;            String distrito = data.optString(&quot;distrito&quot;, &quot;&quot;);&#10;&#10;            // Guardar valores originales&#10;            originalNombres = nombres;&#10;            originalApellidos = apellidos;&#10;            originalTelefono = telefono;&#10;            originalDistrito = distrito;&#10;&#10;            editTextNombres.setText(nombres);&#10;            editTextApellidos.setText(apellidos);&#10;            editTextTelefono.setText(telefono);&#10;            editTextDistrito.setText(distrito);&#10;&#10;            // Preferencias (pueden estar en un objeto anidado &quot;preferencias&quot; o directamente)&#10;            JSONObject prefs = data.optJSONObject(&quot;preferencias&quot;);&#10;            String especie = &quot;&quot;;&#10;            String tamano = &quot;&quot;;&#10;            String edad = &quot;&quot;;&#10;&#10;            if (prefs != null) {&#10;                especie = prefs.optString(&quot;especie&quot;, &quot;&quot;);&#10;                tamano = prefs.optString(&quot;tamano&quot;, &quot;&quot;);&#10;                edad = prefs.optString(&quot;edad&quot;, &quot;&quot;);&#10;            } else {&#10;                especie = data.optString(&quot;especie_preferida&quot;, &quot;&quot;);&#10;                tamano = data.optString(&quot;tamano_preferido&quot;, &quot;&quot;);&#10;                edad = data.optString(&quot;edad_preferida&quot;, &quot;&quot;);&#10;            }&#10;&#10;            // Guardar preferencias originales&#10;            originalEspecie = especie;&#10;            originalTamano = tamano;&#10;            originalEdad = edad;&#10;&#10;            // Seleccionar en spinners&#10;            setSpinnerSelection(spinnerEspecie, especie);&#10;            setSpinnerSelection(spinnerTamano, tamano);&#10;            setSpinnerSelection(spinnerEdad, edad);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            Toast.makeText(this, &quot;Error al cargar datos&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void setSpinnerSelection(Spinner spinner, String value) {&#10;        if (value == null || value.isEmpty()) return;&#10;&#10;        ArrayAdapter adapter = (ArrayAdapter) spinner.getAdapter();&#10;        for (int i = 0; i &lt; adapter.getCount(); i++) {&#10;            if (adapter.getItem(i).toString().equalsIgnoreCase(value)) {&#10;                spinner.setSelection(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    private void saveProfile() {&#10;        final String nombres = editTextNombres.getText().toString().trim();&#10;        final String apellidos = editTextApellidos.getText().toString().trim();&#10;        final String telefono = editTextTelefono.getText().toString().trim();&#10;        final String distrito = editTextDistrito.getText().toString().trim();&#10;&#10;        final String especie = spinnerEspecie.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerEspecie.getSelectedItem().toString() : &quot;&quot;;&#10;        final String tamano = spinnerTamano.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerTamano.getSelectedItem().toString() : &quot;&quot;;&#10;        final String edad = spinnerEdad.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerEdad.getSelectedItem().toString() : &quot;&quot;;&#10;&#10;        // Verificar si hubo cambios&#10;        boolean hayCambios = false;&#10;        &#10;        if (!nombres.equals(originalNombres)) hayCambios = true;&#10;        if (!apellidos.equals(originalApellidos)) hayCambios = true;&#10;        if (!telefono.equals(originalTelefono)) hayCambios = true;&#10;        if (!distrito.equals(originalDistrito)) hayCambios = true;&#10;        if (!especie.equals(originalEspecie)) hayCambios = true;&#10;        if (!tamano.equals(originalTamano)) hayCambios = true;&#10;        if (!edad.equals(originalEdad)) hayCambios = true;&#10;&#10;        if (!hayCambios) {&#10;            Toast.makeText(this, &quot;No hay cambios para guardar&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Validar solo los campos que fueron modificados&#10;        if (!nombres.equals(originalNombres) &amp;&amp; nombres.isEmpty()) {&#10;            Toast.makeText(this, &quot;Los nombres no pueden estar vacíos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (!apellidos.equals(originalApellidos) &amp;&amp; apellidos.isEmpty()) {&#10;            Toast.makeText(this, &quot;Los apellidos no pueden estar vacíos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (!telefono.equals(originalTelefono) &amp;&amp; !telefono.isEmpty() &amp;&amp; telefono.length() != 9) {&#10;            Toast.makeText(this, &quot;El teléfono debe tener 9 dígitos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Mostrar progress&#10;        buttonSave.setEnabled(false);&#10;        buttonSave.setText(&quot;GUARDANDO...&quot;);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                &#10;                // Solo enviar los campos que fueron modificados&#10;                if (!nombres.equals(originalNombres)) {&#10;                    body.put(&quot;nombres&quot;, nombres);&#10;                }&#10;                if (!apellidos.equals(originalApellidos)) {&#10;                    body.put(&quot;apellidos&quot;, apellidos);&#10;                }&#10;                if (!telefono.equals(originalTelefono)) {&#10;                    body.put(&quot;telefono&quot;, telefono);&#10;                }&#10;                if (!distrito.equals(originalDistrito)) {&#10;                    body.put(&quot;distrito&quot;, distrito);&#10;                }&#10;                if (!especie.equals(originalEspecie)) {&#10;                    body.put(&quot;especie_preferida&quot;, especie);&#10;                }&#10;                if (!tamano.equals(originalTamano)) {&#10;                    body.put(&quot;tamano_preferido&quot;, tamano);&#10;                }&#10;                if (!edad.equals(originalEdad)) {&#10;                    body.put(&quot;edad_preferida&quot;, edad);&#10;                }&#10;&#10;                JSONObject response = putJson(BASE_URL + &quot;/users/updateUser.php&quot;, body);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    buttonSave.setEnabled(true);&#10;                    buttonSave.setText(&quot;GUARDAR CAMBIOS&quot;);&#10;&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        String message = response.optString(&quot;message&quot;, &quot;Perfil actualizado&quot;);&#10;                        Toast.makeText(EditProfileActivity.this, message, Toast.LENGTH_LONG).show();&#10;                        finish(); // Volver a ProfileActivity&#10;                    } else {&#10;                        String errorMsg = response != null ?&#10;                                response.optString(&quot;error&quot;, response.optString(&quot;message&quot;, &quot;Error al actualizar&quot;)) :&#10;                                &quot;Error de conexión&quot;;&#10;                        Toast.makeText(EditProfileActivity.this, errorMsg, Toast.LENGTH_LONG).show();&#10;                    }&#10;                });&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    buttonSave.setEnabled(true);&#10;                    buttonSave.setText(&quot;GUARDAR CAMBIOS&quot;);&#10;                    Toast.makeText(EditProfileActivity.this,&#10;                            &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject putJson(String urlString, JSONObject payload) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;PUT&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(&#10;                    code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/ProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/ProfileActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.os.Bundle;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.adoptmev5.R;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_profile);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.adoptmev5.LoginActivity;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private TextView textViewUserName, textViewProfileStatus;&#10;    private ImageView imageViewEditProfile;&#10;    private LinearLayout optionCompatibility, optionPreferences, optionMyProfile,&#10;            optionSettings, optionHelp, optionAbout, optionLogout;&#10;&#10;    private int userId = -1;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_profile);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Obtener user_id&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        // Inicializar vistas&#10;        textViewUserName = findViewById(R.id.textView_user_name);&#10;        textViewProfileStatus = findViewById(R.id.textView_profile_status);&#10;        imageViewEditProfile = findViewById(R.id.imageView_edit_profile);&#10;&#10;        optionCompatibility = findViewById(R.id.option_compatibility);&#10;        optionPreferences = findViewById(R.id.option_preferences);&#10;        optionMyProfile = findViewById(R.id.option_my_profile);&#10;        optionSettings = findViewById(R.id.option_settings);&#10;        optionHelp = findViewById(R.id.option_help);&#10;        optionAbout = findViewById(R.id.option_about);&#10;        optionLogout = findViewById(R.id.option_logout);&#10;&#10;        // Cargar datos del usuario&#10;        loadUserData();&#10;&#10;        // Click en el lápiz de editar&#10;        imageViewEditProfile.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, EditProfileActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        // Listeners de las opciones&#10;        optionCompatibility.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, CompatibilityActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionPreferences.setOnClickListener(v -&gt; {&#10;            // Abrir pantalla de preferencias (FilterActivity)&#10;            Intent intent = new Intent(ProfileActivity.this, FilterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionMyProfile.setOnClickListener(v -&gt; {&#10;            // Abrir edición de perfil&#10;            Intent intent = new Intent(ProfileActivity.this, EditProfileActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionSettings.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, SettingsActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionHelp.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, HelpActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionAbout.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, AboutActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionLogout.setOnClickListener(v -&gt; logout());&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Recargar datos cuando vuelva de EditProfileActivity&#10;        loadUserData();&#10;    }&#10;&#10;    private void loadUserData() {&#10;        if (userId == -1) {&#10;            textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;            textViewProfileStatus.setText(&quot;Inicia sesión para ver tu perfil&quot;);&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/users/getUser.php?user_id=&quot; + userId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                if (code == 200) {&#10;                    BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), &quot;UTF-8&quot;));&#10;                    StringBuilder sb = new StringBuilder();&#10;                    String line;&#10;                    while ((line = br.readLine()) != null) {&#10;                        sb.append(line);&#10;                    }&#10;                    br.close();&#10;&#10;                    JSONObject response = new JSONObject(sb.toString());&#10;&#10;                    // Actualizar UI&#10;                    runOnUiThread(() -&gt; {&#10;                        String nombres = response.optString(&quot;nombres&quot;, &quot;&quot;);&#10;                        String apellidos = response.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String fullName = (nombres + &quot; &quot; + apellidos).trim();&#10;&#10;                        if (fullName.isEmpty()) {&#10;                            fullName = response.optString(&quot;email&quot;, &quot;Usuario AdoptMe&quot;);&#10;                        }&#10;&#10;                        textViewUserName.setText(fullName);&#10;                        textViewProfileStatus.setText(&quot;Ver perfil completo&quot;);&#10;                    });&#10;                } else {&#10;                    runOnUiThread(() -&gt; {&#10;                        textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                        textViewProfileStatus.setText(&quot;Error al cargar perfil&quot;);&#10;                    });&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                    textViewProfileStatus.setText(&quot;Error de conexión&quot;);&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void logout() {&#10;        // Limpiar SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        prefs.edit().clear().apply();&#10;&#10;        // Ir a LoginActivity&#10;        Intent intent = new Intent(ProfileActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetsAdapter.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.Pet;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class PetsAdapter extends RecyclerView.Adapter&lt;PetsAdapter.PetViewHolder&gt; {&#10;&#10;    private List&lt;Pet&gt; pets = new ArrayList&lt;&gt;();&#10;    private OnPetClickListener listener;&#10;&#10;    public interface OnPetClickListener {&#10;        void onPetClick(Pet pet);&#10;    }&#10;&#10;    public PetsAdapter(OnPetClickListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void setPets(List&lt;Pet&gt; pets) {&#10;        this.pets = pets != null ? pets : new ArrayList&lt;&gt;();&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public PetViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_pet_card, parent, false);&#10;        return new PetViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull PetViewHolder holder, int position) {&#10;        Pet pet = pets.get(position);&#10;        holder.bind(pet, listener);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return pets.size();&#10;    }&#10;&#10;    static class PetViewHolder extends RecyclerView.ViewHolder {&#10;        private ImageView petImage;&#10;        private TextView petName;&#10;        private TextView petInfo;&#10;        private TextView petAge;&#10;        private TextView petDistrito;&#10;        private Button btnAdopt;&#10;        private View urgentBadge;&#10;&#10;        public PetViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            petImage = itemView.findViewById(R.id.pet_image);&#10;            petName = itemView.findViewById(R.id.pet_name);&#10;            petInfo = itemView.findViewById(R.id.pet_info);&#10;            petAge = itemView.findViewById(R.id.pet_age);&#10;            petDistrito = itemView.findViewById(R.id.pet_distrito);&#10;            btnAdopt = itemView.findViewById(R.id.btn_adopt);&#10;            urgentBadge = itemView.findViewById(R.id.urgent_badge);&#10;        }&#10;&#10;        public void bind(Pet pet, OnPetClickListener listener) {&#10;            petName.setText(pet.getName());&#10;            petInfo.setText(pet.getEspecie() + &quot; • &quot; + pet.getRaza());&#10;            petAge.setText(pet.getEdad() + &quot; años&quot;);&#10;            petDistrito.setText(pet.getDistrito());&#10;&#10;            // Mostrar badge urgente&#10;            urgentBadge.setVisibility(pet.isUrgent() ? View.VISIBLE : View.GONE);&#10;&#10;            // Cargar imagen desde URL usando Glide&#10;            String fotoUrl = pet.getFotoUrl();&#10;            if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;                Glide.with(itemView.getContext())&#10;                        .load(fotoUrl)&#10;                        .placeholder(getPlaceholderByEspecie(pet.getEspecie()))&#10;                        .error(getPlaceholderByEspecie(pet.getEspecie()))&#10;                        .centerCrop()&#10;                        .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                        .into(petImage);&#10;            } else {&#10;                // Usar placeholder si no hay URL&#10;                petImage.setImageResource(getPlaceholderByEspecie(pet.getEspecie()));&#10;            }&#10;&#10;            // Click listeners&#10;            btnAdopt.setOnClickListener(v -&gt; {&#10;                if (listener != null) listener.onPetClick(pet);&#10;            });&#10;&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) listener.onPetClick(pet);&#10;            });&#10;        }&#10;&#10;        /**&#10;         * Obtener placeholder según la especie&#10;         */&#10;        private int getPlaceholderByEspecie(String especie) {&#10;            if (especie == null) return R.drawable.search1;&#10;            &#10;            if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;                return R.drawable.search1;&#10;            } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;                return R.drawable.search2;&#10;            } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;                return R.drawable.search5;&#10;            } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;                return R.drawable.search3;&#10;            } else {&#10;                return R.drawable.search1;&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/SearchFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/SearchFragment.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.databinding.FragmentSearchBinding;&#10;&#10;public class SearchFragment extends Fragment {&#10;&#10;    private FragmentSearchBinding binding;&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;&#10;        binding = FragmentSearchBinding.inflate(inflater, container, false);&#10;        View root = binding.getRoot();&#10;&#10;        // Configurar listeners de los botones&#10;        setupListeners();&#10;&#10;        return root;&#10;    }&#10;&#10;    private void setupListeners() {&#10;        binding.btnAdoptCanela.setOnClickListener(v -&gt; openPetDetail(&#10;                &quot;Canela&quot;,&#10;                &quot;Canela es una perrita juguetona de 2 años, muy cariñosa y sociable con niños y otras mascotas.&quot;,&#10;                R.drawable.search1,&#10;                &quot;2 años&quot;, &quot;12 kg&quot;, &quot;45 cm&quot;&#10;        ));&#10;&#10;        binding.btnAdoptSebas.setOnClickListener(v -&gt; openPetDetail(&#10;                &quot;Sebas&quot;,&#10;                &quot;Sebas es un gato tranquilo y amoroso de 3 años, ideal para departamentos y personas que buscan compañía calmada.&quot;,&#10;                R.drawable.search2,&#10;                &quot;3 años&quot;, &quot;4.5 kg&quot;, &quot;28 cm&quot;&#10;        ));&#10;&#10;        binding.btnAdoptCaramelo.setOnClickListener(v -&gt; openPetDetail(&#10;                &quot;Caramelo&quot;,&#10;                &quot;Caramelo es un conejo curioso y tierno, perfecto para hogares tranquilos. Tiene 1 año.&quot;,&#10;                R.drawable.search3,&#10;                &quot;1 año&quot;, &quot;1.2 kg&quot;, &quot;20 cm&quot;&#10;        ));&#10;&#10;        binding.btnAdoptTigrillo.setOnClickListener(v -&gt; openPetDetail(&#10;                &quot;Tigrillo&quot;,&#10;                &quot;Tigrillo es un gato activo y explorador, necesita espacio para jugar y mucho cariño.&quot;,&#10;                R.drawable.search4,&#10;                &quot;2 años&quot;, &quot;5 kg&quot;, &quot;30 cm&quot;&#10;        ));&#10;&#10;        binding.btnAdoptPablo.setOnClickListener(v -&gt; openPetDetail(&#10;                &quot;Pablo&quot;,&#10;                &quot;Pablo es un perro leal y protector de 4 años, ideal para familias. Le encanta pasear.&quot;,&#10;                R.drawable.search5,&#10;                &quot;4 años&quot;, &quot;20 kg&quot;, &quot;55 cm&quot;&#10;        ));&#10;&#10;        binding.btnAdoptMascota.setOnClickListener(v -&gt; openPetDetail(&#10;                &quot;Mascota&quot;,&#10;                &quot;Una mascota especial en busca de un hogar lleno de amor. Ven a conocerla y sorpréndete.&quot;,&#10;                R.drawable.search6,&#10;                &quot;Edad desconocida&quot;, &quot;Peso desconocido&quot;, &quot;Altura desconocida&quot;&#10;        ));&#10;    }&#10;&#10;&#10;    private void openPetDetail(String name, String description, int imageRes,&#10;                               String age, String weight, String height) {&#10;        Intent intent = new Intent(getContext(), com.example.adoptmev5.ui.search.PetDetailActivity.class);&#10;        intent.putExtra(&quot;pet_name&quot;, name);&#10;        intent.putExtra(&quot;pet_description&quot;, description);&#10;        intent.putExtra(&quot;pet_image&quot;, imageRes);&#10;&#10;        // Nuevos extras&#10;        intent.putExtra(&quot;pet_age&quot;, age);&#10;        intent.putExtra(&quot;pet_weight&quot;, weight);&#10;        intent.putExtra(&quot;pet_height&quot;, height);&#10;&#10;        startActivity(intent);&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onDestroyView() {&#10;        super.onDestroyView();&#10;        binding = null;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.EditText;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.databinding.FragmentSearchBinding;&#10;&#10;public class SearchFragment extends Fragment {&#10;&#10;    private FragmentSearchBinding binding;&#10;&#10;    // Variables para el RecyclerView y la API&#10;    private RecyclerView recyclerPets;&#10;    private PetsAdapter petsAdapter;&#10;    private ProgressBar progressLoading;&#10;    private View emptyState;&#10;    private TextView tvResultsCount;&#10;    private EditText searchInput;&#10;&#10;    private String currentEspecieFilter = null; // null = todas&#10;    private String currentSearchQuery = null; // Para búsqueda por texto&#10;    private int currentPage = 1;&#10;    private final int ITEMS_PER_PAGE = 6;&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;&#10;        // Usar el nuevo layout dinámico&#10;        View root = inflater.inflate(R.layout.fragment_search_dynamic, container, false);&#10;&#10;        // Inicializar vistas&#10;        recyclerPets = root.findViewById(R.id.recycler_pets);&#10;        progressLoading = root.findViewById(R.id.progress_loading);&#10;        emptyState = root.findViewById(R.id.empty_state);&#10;        tvResultsCount = root.findViewById(R.id.tv_results_count);&#10;        searchInput = root.findViewById(R.id.search_input);&#10;&#10;        // Configurar RecyclerView con Grid de 2 columnas&#10;        androidx.recyclerview.widget.GridLayoutManager layoutManager =&#10;            new androidx.recyclerview.widget.GridLayoutManager(getContext(), 2);&#10;        recyclerPets.setLayoutManager(layoutManager);&#10;&#10;        // Inicializar adapter&#10;        petsAdapter = new PetsAdapter(this::onPetClick);&#10;        recyclerPets.setAdapter(petsAdapter);&#10;&#10;        // Configurar campo de búsqueda&#10;        setupSearchInput();&#10;&#10;        // Configurar botones de categorías&#10;        setupCategoryButtons(root);&#10;&#10;        // Cargar mascotas desde la API&#10;        loadPetsFromApi();&#10;&#10;        return root;&#10;    }&#10;&#10;    /**&#10;     * Configurar campo de búsqueda con filtrado al presionar Enter&#10;     */&#10;    private void setupSearchInput() {&#10;        // Filtrar al presionar Enter/Search&#10;        searchInput.setOnEditorActionListener((v, actionId, event) -&gt; {&#10;            if (actionId == android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH) {&#10;                String query = searchInput.getText().toString().trim().toLowerCase();&#10;&#10;                if (query.isEmpty()) {&#10;                    // Si está vacío, limpiar búsqueda&#10;                    currentSearchQuery = null;&#10;                    currentEspecieFilter = null;&#10;                    currentPage = 1;&#10;                    loadPetsFromApi();&#10;                } else {&#10;                    // Filtrar por query&#10;                    currentSearchQuery = query;&#10;                    currentPage = 1;&#10;                    filterBySearchQuery(query);&#10;                }&#10;&#10;                // Ocultar teclado&#10;                android.view.inputmethod.InputMethodManager imm =&#10;                    (android.view.inputmethod.InputMethodManager) requireContext().getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#10;                if (imm != null) {&#10;                    imm.hideSoftInputFromWindow(searchInput.getWindowToken(), 0);&#10;                }&#10;&#10;                return true;&#10;            }&#10;            return false;&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Filtrar mascotas según la búsqueda BÁSICA (solo un campo)&#10;     * Estrategia: Detectar el tipo de búsqueda e intentar con el filtro más apropiado&#10;     */&#10;    private void filterBySearchQuery(String query) {&#10;        // Limpiar filtros previos&#10;        currentEspecieFilter = null;&#10;        String edadFilter = null;&#10;        String sexoFilter = null;&#10;&#10;        // 1. DETECTAR SI ES UN NÚMERO (EDAD)&#10;        if (query.matches(&quot;\\d+&quot;)) {&#10;            // Es un número puro, buscar por edad exacta&#10;            edadFilter = query;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por edad: &quot; + edadFilter);&#10;        }&#10;        // 2. DETECTAR SEXO (usando contains para ser más flexible)&#10;        else if (query.contains(&quot;macho&quot;)) {&#10;            sexoFilter = &quot;Macho&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por sexo: Macho&quot;);&#10;        } else if (query.contains(&quot;hembra&quot;)) {&#10;            sexoFilter = &quot;Hembra&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por sexo: Hembra&quot;);&#10;        }&#10;        // 3. DETECTAR ESPECIE (usando contains para ser más flexible)&#10;        else if (query.contains(&quot;perro&quot;)) {&#10;            currentEspecieFilter = &quot;Perro&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por especie: Perro&quot;);&#10;        } else if (query.contains(&quot;gato&quot;)) {&#10;            currentEspecieFilter = &quot;Gato&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por especie: Gato&quot;);&#10;        } else if (query.contains(&quot;ave&quot;)) {&#10;            currentEspecieFilter = &quot;Ave&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por especie: Ave&quot;);&#10;        } else if (query.contains(&quot;conejo&quot;)) {&#10;            currentEspecieFilter = &quot;Conejo&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot;Buscando por especie: Conejo&quot;);&#10;        }&#10;        // 4. Si no coincide con nada conocido, mostrar mensaje&#10;        else {&#10;            Toast.makeText(getContext(),&#10;                &quot;Búsqueda: '&quot; + query + &quot;'. Intenta: perro, gato, 2, macho, hembra&quot;,&#10;                Toast.LENGTH_SHORT).show();&#10;            // Aún así intentar cargar todas las mascotas&#10;            currentEspecieFilter = null;&#10;        }&#10;&#10;        // Cargar con el filtro detectado&#10;        loadPetsFromApiWithFilters(edadFilter, sexoFilter);&#10;    }&#10;&#10;    /**&#10;     * Configurar botones de categorías (Perro, Gato, Ave, Conejo)&#10;     */&#10;    private void setupCategoryButtons(View root) {&#10;        root.findViewById(R.id.btn_categoria_perro).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Perro&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;&#10;        root.findViewById(R.id.btn_categoria_gato).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Gato&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;&#10;        root.findViewById(R.id.btn_categoria_ave).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Ave&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;&#10;        root.findViewById(R.id.btn_categoria_conejo).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Conejo&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Cargar mascotas desde la API&#10;     */&#10;    private void loadPetsFromApi() {&#10;        loadPetsFromApiWithFilters(null, null);&#10;    }&#10;&#10;    /**&#10;     * Cargar mascotas desde la API con filtros básicos&#10;     * @param edad Edad exacta (número como String: &quot;2&quot;, &quot;5&quot;, etc.)&#10;     * @param sexo Sexo (&quot;Macho&quot; o &quot;Hembra&quot;)&#10;     */&#10;    private void loadPetsFromApiWithFilters(String edad, String sexo) {&#10;        // Mostrar loading&#10;        progressLoading.setVisibility(View.VISIBLE);&#10;        recyclerPets.setVisibility(View.GONE);&#10;        emptyState.setVisibility(View.GONE);&#10;&#10;        // Construir filtros&#10;        java.util.Map&lt;String, String&gt; filters = new java.util.HashMap&lt;&gt;();&#10;&#10;        // Filtro de especie (de los botones de categoría)&#10;        if (currentEspecieFilter != null) {&#10;            filters.put(&quot;especie&quot;, currentEspecieFilter);&#10;        }&#10;&#10;        // Filtro de edad exacta (número)&#10;        if (edad != null) {&#10;            filters.put(&quot;edad&quot;, edad);&#10;        }&#10;&#10;        // Filtro de sexo&#10;        if (sexo != null) {&#10;            filters.put(&quot;sexo&quot;, sexo);&#10;        }&#10;&#10;        // Paginación&#10;        filters.put(&quot;page&quot;, String.valueOf(currentPage));&#10;        filters.put(&quot;limit&quot;, String.valueOf(ITEMS_PER_PAGE));&#10;&#10;        android.util.Log.d(&quot;SearchFragment&quot;, &quot;Cargando mascotas - Filtros: &quot; + filters);&#10;&#10;        // Llamar a la API&#10;        com.example.adoptmev5.api.PetsApiService.getPets(filters, new com.example.adoptmev5.api.PetsApiService.PetsCallback() {&#10;            @Override&#10;            public void onSuccess(java.util.List&lt;com.example.adoptmev5.models.Pet&gt; pets, org.json.JSONObject pagination) {&#10;                if (getActivity() == null) return;&#10;&#10;                getActivity().runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;&#10;                    if (pets == null || pets.isEmpty()) {&#10;                        // Mostrar estado vacío&#10;                        recyclerPets.setVisibility(View.GONE);&#10;                        emptyState.setVisibility(View.VISIBLE);&#10;                        tvResultsCount.setText(&quot;0 resultados&quot;);&#10;                    } else {&#10;                        // Mostrar mascotas&#10;                        recyclerPets.setVisibility(View.VISIBLE);&#10;                        emptyState.setVisibility(View.GONE);&#10;                        petsAdapter.setPets(pets);&#10;                        tvResultsCount.setText(pets.size() + &quot; resultados&quot;);&#10;&#10;                        android.util.Log.d(&quot;SearchFragment&quot;, &quot;✅ Cargadas &quot; + pets.size() + &quot; mascotas&quot;);&#10;                    }&#10;                });&#10;            }&#10;&#10;            @Override&#10;            public void onError(String error) {&#10;                if (getActivity() == null) return;&#10;&#10;                getActivity().runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;                    recyclerPets.setVisibility(View.GONE);&#10;                    emptyState.setVisibility(View.VISIBLE);&#10;&#10;                    Toast.makeText(getContext(),&#10;                        &quot;Error: &quot; + error,&#10;                        Toast.LENGTH_LONG).show();&#10;&#10;                    android.util.Log.e(&quot;SearchFragment&quot;, &quot;❌ Error API: &quot; + error);&#10;                });&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Manejar click en una mascota&#10;     */&#10;    private void onPetClick(com.example.adoptmev5.models.Pet pet) {&#10;        Intent intent = new Intent(getContext(), PetDetailActivity.class);&#10;        intent.putExtra(&quot;pet_id&quot;, pet.getId());&#10;        intent.putExtra(&quot;pet_name&quot;, pet.getName());&#10;        intent.putExtra(&quot;pet_description&quot;, pet.getDescripcion());&#10;        intent.putExtra(&quot;pet_age&quot;, pet.getEdad() + &quot; años&quot;);&#10;        intent.putExtra(&quot;pet_especie&quot;, pet.getEspecie());&#10;        intent.putExtra(&quot;pet_raza&quot;, pet.getRaza());&#10;        intent.putExtra(&quot;pet_tamano&quot;, pet.getTamano());&#10;        intent.putExtra(&quot;pet_sexo&quot;, pet.getSexo());&#10;        intent.putExtra(&quot;pet_distrito&quot;, pet.getDistrito());&#10;        intent.putExtra(&quot;pet_foto_url&quot;, pet.getFotoUrl());&#10;        intent.putExtra(&quot;pet_is_urgent&quot;, pet.isUrgent());&#10;        intent.putExtra(&quot;pet_weight&quot;, &quot;N/A&quot;);&#10;        intent.putExtra(&quot;pet_height&quot;, &quot;N/A&quot;);&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onResume() {&#10;        super.onResume();&#10;        // Recargar mascotas al volver (por si cambiaron filtros)&#10;        if (petsAdapter != null) {&#10;            loadPetsFromApi();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onDestroyView() {&#10;        super.onDestroyView();&#10;        binding = null;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;!-- Título --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Editar Perfil&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textColor=&quot;#3A538D&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_gravity=&quot;center_horizontal&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Sección: Datos Personales --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;DATOS PERSONALES&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Nombres --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Nombres&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_nombres&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;textPersonName&quot;&#10;                android:hint=&quot;Ingresa tus nombres&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Apellidos --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Apellidos&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_apellidos&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;textPersonName&quot;&#10;                android:hint=&quot;Ingresa tus apellidos&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Teléfono --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Teléfono&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_telefono&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;phone&quot;&#10;                android:hint=&quot;987654321&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot;&#10;                android:maxLength=&quot;9&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Distrito --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;20dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Distrito&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_distrito&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;text&quot;&#10;                android:hint=&quot;Ej: San Isidro, Miraflores&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Sección: Preferencias --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;PREFERENCIAS DE MASCOTAS&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Especie Preferida --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Especie Preferida&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_especie&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Tamaño Preferido --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tamaño Preferido&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_tamano&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Edad Preferida --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Edad Preferida&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_edad&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Botón Guardar --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/button_save&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;52dp&quot;&#10;            android:text=&quot;GUARDAR CAMBIOS&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:backgroundTint=&quot;#3A538D&quot;&#10;            android:elevation=&quot;6dp&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Cancelar --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/button_cancel&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;CANCELAR&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:backgroundTint=&quot;#EEEEEE&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_profile.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.ui.menu.ProfileActivity&quot;&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F7FA&quot;&#10;    tools:context=&quot;.ui.menu.ProfileActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Header con foto de perfil --&gt;&#10;        &lt;RelativeLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;20dp&quot;&#10;            android:elevation=&quot;4dp&quot;&gt;&#10;&#10;            &lt;!-- Foto de perfil circular --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageView_profile_photo&quot;&#10;                android:layout_width=&quot;60dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_alignParentStart=&quot;true&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:src=&quot;@drawable/user1&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:contentDescription=&quot;Foto de perfil&quot; /&gt;&#10;&#10;            &lt;!-- Información del usuario --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/layout_user_info&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_toEndOf=&quot;@id/imageView_profile_photo&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textView_user_name&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Usuario AdoptMe&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textColor=&quot;#333333&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textView_profile_status&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Ver perfil completo&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;#999999&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Botón de editar (lápiz) --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageView_edit_profile&quot;&#10;                android:layout_width=&quot;40dp&quot;&#10;                android:layout_height=&quot;40dp&quot;&#10;                android:layout_alignParentEnd=&quot;true&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_edit&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Editar perfil&quot;&#10;                android:tint=&quot;#3A538D&quot; /&gt;&#10;&#10;        &lt;/RelativeLayout&gt;&#10;&#10;        &lt;!-- Lista de opciones del menú --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;!-- Test de Compatibilidad --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_compatibility&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_compass&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Test de compatibilidad&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Test de Compatibilidad&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Encuentra tu mascota ideal&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Preferencias --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_preferences&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_preferences&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Preferencias&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Preferencias&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Tipo de mascotas, ubicación y más&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Mi Perfil --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_my_profile&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_myplaces&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Mi perfil&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Mi Perfil&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Información personal y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:background=&quot;#F5F7FA&quot; /&gt;&#10;&#10;            &lt;!-- Configuración --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_settings&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_manage&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Configuración&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Configuración&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Notificaciones, privacidad y cuenta&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Ayuda y Soporte --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_help&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_help&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Ayuda&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Ayuda y Soporte&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Centro de ayuda y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Acerca de AdoptMe --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_about&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_info_details&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Acerca de&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Acerca de AdoptMe&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Versión 1.0 • Términos y privacidad&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:background=&quot;#F5F7FA&quot; /&gt;&#10;&#10;            &lt;!-- Cerrar Sesión --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_logout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_lock_power_off&quot;&#10;                    android:tint=&quot;#FF5252&quot;&#10;                    android:contentDescription=&quot;Cerrar sesión&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Cerrar Sesión&quot;&#10;                    android:textSize=&quot;15sp&quot;&#10;                    android:textColor=&quot;#FF5252&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&#10;                    android:layout_gravity=&quot;center_vertical&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;28dp&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Verificar cuenta&quot;&#10;        android:textSize=&quot;22sp&quot;&#10;        android:textColor=&quot;#3A538D&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_gravity=&quot;center_horizontal&quot;&#10;        android:layout_marginTop=&quot;20dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Ingresa el código de verificación enviado a tu correo&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textColor=&quot;#666666&quot;&#10;        android:layout_marginTop=&quot;12dp&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/editText_code&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:inputType=&quot;number&quot;&#10;        android:hint=&quot;Código (6 dígitos)&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;#FFFFFF&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_verify&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VERIFICAR&quot;&#10;        android:textColor=&quot;@android:color/white&quot;&#10;        android:backgroundTint=&quot;#3A538D&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_skip&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VOLVER AL LOGIN&quot;&#10;        android:layout_marginTop=&quot;12dp&quot;&#10;        android:backgroundTint=&quot;#CCCCCC&quot;&#10;        android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_search_dynamic.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_search_dynamic.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&#10;    tools:context=&quot;.ui.search.SearchFragment&quot;&gt;&#10;&#10;    &lt;!-- Header con buscador y categorías --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:background=&quot;@android:color/white&quot;&#10;        android:elevation=&quot;4dp&quot;&gt;&#10;&#10;        &lt;!-- Barra de búsqueda --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/search_bar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:background=&quot;@drawable/search_background&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:paddingStart=&quot;16dp&quot;&#10;            android:paddingEnd=&quot;16dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;20dp&quot;&#10;                android:layout_height=&quot;20dp&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_search&quot;&#10;                android:tint=&quot;#666666&quot;&#10;                android:contentDescription=&quot;Buscar&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/search_input&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:hint=&quot;Buscar: perro, gato, 2, macho...&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:background=&quot;@android:color/transparent&quot;&#10;                android:layout_marginStart=&quot;12dp&quot;&#10;                android:inputType=&quot;text&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:imeOptions=&quot;actionSearch&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Título Categorías --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Categorías&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;!-- Botones de categorías en grid --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_categoria_perro&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_margin=&quot;4dp&quot;&#10;                android:text=&quot;\nPerro&quot;&#10;                android:textSize=&quot;11sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:backgroundTint=&quot;#4A6FA5&quot;&#10;                style=&quot;@style/Widget.Material3.Button&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_categoria_gato&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_margin=&quot;4dp&quot;&#10;                android:text=&quot;\nGato&quot;&#10;                android:textSize=&quot;11sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:backgroundTint=&quot;#4A6FA5&quot;&#10;                style=&quot;@style/Widget.Material3.Button&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_categoria_ave&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_margin=&quot;4dp&quot;&#10;                android:text=&quot;\nAve&quot;&#10;                android:textSize=&quot;11sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:backgroundTint=&quot;#4A6FA5&quot;&#10;                style=&quot;@style/Widget.Material3.Button&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_categoria_conejo&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_margin=&quot;4dp&quot;&#10;                android:text=&quot;\nConejo&quot;&#10;                android:textSize=&quot;11sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:backgroundTint=&quot;#4A6FA5&quot;&#10;                style=&quot;@style/Widget.Material3.Button&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Título y contador de resultados --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Mascotas destacadas&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_results_count&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;0 resultados&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:textSize=&quot;12sp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Contenedor para RecyclerView, Loading y Empty State --&gt;&#10;    &lt;FrameLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_weight=&quot;1&quot;&gt;&#10;&#10;        &lt;!-- RecyclerView con Grid de 2 columnas --&gt;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/recycler_pets&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:paddingStart=&quot;8dp&quot;&#10;            android:paddingEnd=&quot;8dp&quot;&#10;            android:paddingBottom=&quot;8dp&quot;&#10;            android:clipToPadding=&quot;false&quot;&#10;            tools:listitem=&quot;@layout/item_pet_card&quot; /&gt;&#10;&#10;        &lt;!-- Loading Progress Bar --&gt;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progress_loading&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;!-- Vista vacía (sin resultados) --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/empty_state&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:padding=&quot;32dp&quot;&#10;            android:visibility=&quot;gone&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;120dp&quot;&#10;                android:layout_height=&quot;120dp&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_search&quot;&#10;                android:tint=&quot;#CCCCCC&quot;&#10;                android:contentDescription=&quot;Sin resultados&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;No se encontraron mascotas&quot;&#10;                android:textColor=&quot;#999999&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Intenta ajustar los filtros de búsqueda&quot;&#10;                android:textColor=&quot;#CCCCCC&quot;&#10;                android:textSize=&quot;13sp&quot;&#10;                android:textAlignment=&quot;center&quot;&#10;                android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_pet_card.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_pet_card.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;com.google.android.material.card.MaterialCardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;6dp&quot;&#10;    app:cardCornerRadius=&quot;12dp&quot;&#10;    app:cardElevation=&quot;3dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Imagen con badge urgente --&gt;&#10;        &lt;FrameLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;160dp&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/pet_image&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:contentDescription=&quot;Foto mascota&quot; /&gt;&#10;&#10;            &lt;!-- Badge URGENTE --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/urgent_badge&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;top|end&quot;&#10;                android:layout_margin=&quot;8dp&quot;&#10;                android:background=&quot;#FF5252&quot;&#10;                android:paddingStart=&quot;10dp&quot;&#10;                android:paddingEnd=&quot;10dp&quot;&#10;                android:paddingTop=&quot;4dp&quot;&#10;                android:paddingBottom=&quot;4dp&quot;&#10;                android:text=&quot;URGENTE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;9sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;        &lt;!-- Información --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;10dp&quot;&gt;&#10;&#10;            &lt;!-- Nombre --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/pet_name&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Nombre&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textSize=&quot;15sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;            &lt;!-- Especie y Raza --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/pet_info&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Perro • Mestizo&quot;&#10;                android:textColor=&quot;#666666&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:layout_marginTop=&quot;2dp&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;            &lt;!-- Edad --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/pet_age&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;2 años&quot;&#10;                android:textColor=&quot;#999999&quot;&#10;                android:textSize=&quot;11sp&quot;&#10;                android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;            &lt;!-- Distrito --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/pet_distrito&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot; San Miguel&quot;&#10;                android:textColor=&quot;#999999&quot;&#10;                android:textSize=&quot;10sp&quot;&#10;                android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;            &lt;!-- Botón Adoptar --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_adopt&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;36dp&quot;&#10;                android:text=&quot;Adoptar&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;13sp&quot;&#10;                android:backgroundTint=&quot;#4A6FA5&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                style=&quot;@style/Widget.Material3.Button&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/com.google.android.material.card.MaterialCardView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;network-security-config&gt;&#10;    &lt;!-- Permitir todo el tráfico HTTP para desarrollo --&gt;&#10;    &lt;base-config cleartextTrafficPermitted=&quot;true&quot;&gt;&#10;        &lt;trust-anchors&gt;&#10;            &lt;certificates src=&quot;system&quot; /&gt;&#10;        &lt;/trust-anchors&gt;&#10;    &lt;/base-config&gt;&#10;&lt;/network-security-config&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/rebuild_clean.bat">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/rebuild_clean.bat" />
              <option name="updatedContent" value="@echo off&#10;echo ========================================&#10;echo LIMPIEZA Y RECONSTRUCCION DE ADOPTME&#10;echo ========================================&#10;echo.&#10;&#10;echo [1/5] Eliminando carpetas build...&#10;if exist &quot;build&quot; rd /s /q &quot;build&quot;&#10;if exist &quot;app\build&quot; rd /s /q &quot;app\build&quot;&#10;if exist &quot;.gradle&quot; rd /s /q &quot;.gradle&quot;&#10;echo Carpetas build eliminadas.&#10;echo.&#10;&#10;echo [2/5] Ejecutando gradlew clean...&#10;call gradlew.bat clean&#10;echo.&#10;&#10;echo [3/5] Invalidando cache de Gradle...&#10;call gradlew.bat --stop&#10;echo.&#10;&#10;echo [4/5] Reconstruyendo proyecto...&#10;call gradlew.bat assembleDebug&#10;echo.&#10;&#10;echo [5/5] COMPLETADO!&#10;echo.&#10;echo ========================================&#10;echo Ahora ejecuta la app desde Android Studio&#10;echo o usa: gradlew.bat installDebug&#10;echo ========================================&#10;pause&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>