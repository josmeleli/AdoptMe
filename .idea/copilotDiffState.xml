<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.adoptmev5&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.adoptmev5&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(libs.lifecycle.livedata.ktx)&#10;    implementation(libs.lifecycle.viewmodel.ktx)&#10;    implementation(libs.navigation.fragment)&#10;    implementation(libs.navigation.ui)&#10;    implementation(libs.legacy.support.v4)&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.adoptmev5&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.adoptmev5&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(libs.lifecycle.livedata.ktx)&#10;    implementation(libs.lifecycle.viewmodel.ktx)&#10;    implementation(libs.navigation.fragment)&#10;    implementation(libs.navigation.ui)&#10;    implementation(libs.legacy.support.v4)&#10;    &#10;    // Glide para cargar imágenes desde URL&#10;    implementation(&quot;com.github.bumptech.glide:glide:4.16.0&quot;)&#10;    annotationProcessor(&quot;com.github.bumptech.glide:compiler:4.16.0&quot;)&#10;    &#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;!-- Permiso necesario para peticiones de red --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AdoptMeV5&quot;&#10;        android:networkSecurityConfig=&quot;@xml/network_security_config&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.EditProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Verify Activity --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.VerifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#13;&#10;&#13;&#10;    &lt;!-- Permiso necesario para peticiones de red --&gt;&#13;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;application&#13;&#10;        android:name=&quot;.MyApp&quot;&#13;&#10;        android:allowBackup=&quot;true&quot;&#13;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#13;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#13;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#13;&#10;        android:label=&quot;@string/app_name&quot;&#13;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#13;&#10;        android:supportsRtl=&quot;true&quot;&#13;&#10;        android:theme=&quot;@style/Theme.AdoptMeV5&quot;&#13;&#10;        android:networkSecurityConfig=&quot;@xml/network_security_config&quot;&#13;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;&#13;&#10;&#13;&#10;    &lt;!-- Pantalla inicial --&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.SplashScreen&quot;&#13;&#10;        android:exported=&quot;true&quot;&gt;&#13;&#10;        &lt;intent-filter&gt;&#13;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#13;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#13;&#10;        &lt;/intent-filter&gt;&#13;&#10;    &lt;/activity&gt;&#13;&#10;&#13;&#10;    &lt;!-- Actividad principal --&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.MainActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- Login y registro --&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.LoginActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.RegisterActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;        &lt;!-- Formulario de Adopción --&gt;&#10;        &lt;activity android:name=&quot;.ui.adoption.AdoptionFormActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.NavbarActivity&quot;&#13;&#10;        android:exported=&quot;false&quot;&#13;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- Menú de configuración --&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.EditProfileActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;!-- Verify Activity --&gt;&#13;&#10;    &lt;activity&#13;&#10;        android:name=&quot;.VerifyActivity&quot;&#13;&#10;        android:exported=&quot;false&quot; /&gt;&#13;&#10;&#13;&#10;&lt;/application&gt;&#13;&#10;    &lt;/manifest&gt;&#13;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;; // Cambia a la URL de tu API si no usas emulador&#10;&#10;    private Button buttonLogin;&#10;    private EditText editTextPassword;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        // Referencia al botón de login&#10;        buttonLogin = findViewById(R.id.button_login);&#10;        // Referencia al texto &quot;Regístrate&quot;&#10;        textViewRegister = findViewById(R.id.textView_register);&#10;&#10;        // Referencias a inputs&#10;        editTextEmail = findViewById(R.id.editText_email);&#10;        editTextPassword = findViewById(R.id.editText_password);&#10;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#10;        buttonLogin.setOnClickListener(v -&gt; attemptLogin());&#10;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void attemptLogin() {&#10;            Toast.makeText(this, &quot;Ingresa email y contraseña&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;        buttonLogin.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;            startActivity(intent);&#10;            finish(); // Opcional: cierra la actividad de login&#10;        });&#10;        // Petición en background&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;email&quot;, email);&#10;                body.put(&quot;password&quot;, password);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/login.php&quot;, body);&#10;                if (resp == null) {&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#13;&#10;&#13;&#10;import android.content.Intent;&#13;&#10;import android.content.SharedPreferences;&#13;&#10;import android.os.Bundle;&#13;&#10;import android.widget.Button;&#13;&#10;import android.widget.EditText;&#13;&#10;import android.widget.TextView;&#13;&#10;import android.widget.Toast;&#13;&#10;&#13;&#10;import androidx.activity.EdgeToEdge;&#13;&#10;import androidx.appcompat.app.AppCompatActivity;&#13;&#10;import androidx.core.graphics.Insets;&#13;&#10;import androidx.core.view.ViewCompat;&#13;&#10;import androidx.core.view.WindowInsetsCompat;&#13;&#10;&#13;&#10;import org.json.JSONException;&#13;&#10;import org.json.JSONObject;&#13;&#10;&#13;&#10;import java.io.BufferedReader;&#13;&#10;import java.io.IOException;&#13;&#10;import java.io.InputStreamReader;&#13;&#10;import java.io.OutputStream;&#13;&#10;import java.net.HttpURLConnection;&#13;&#10;import java.net.URL;&#13;&#10;&#13;&#10;public class LoginActivity extends AppCompatActivity {&#13;&#10;&#13;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;; // Cambia a la URL de tu API si no usas emulador&#13;&#10;&#13;&#10;    private Button buttonLogin;&#13;&#10;    private TextView textViewRegister;&#13;&#10;    private EditText editTextEmail;&#13;&#10;    private EditText editTextPassword;&#13;&#10;&#13;&#10;    @Override&#13;&#10;    protected void onCreate(Bundle savedInstanceState) {&#13;&#10;        super.onCreate(savedInstanceState);&#13;&#10;        EdgeToEdge.enable(this);&#13;&#10;        setContentView(R.layout.activity_login);&#13;&#10;&#13;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#13;&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#13;&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#13;&#10;            return insets;&#13;&#10;        });&#13;&#10;&#13;&#10;        // Referencia al botón de login&#13;&#10;        buttonLogin = findViewById(R.id.button_login);&#13;&#10;        // Referencia al texto &quot;Regístrate&quot;&#13;&#10;        textViewRegister = findViewById(R.id.textView_register);&#13;&#10;&#13;&#10;        // Referencias a inputs&#13;&#10;        editTextEmail = findViewById(R.id.editText_email);&#13;&#10;        editTextPassword = findViewById(R.id.editText_password);&#13;&#10;&#13;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#13;&#10;        buttonLogin.setOnClickListener(v -&gt; attemptLogin());&#13;&#10;&#13;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#13;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#13;&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#13;&#10;            startActivity(intent);&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void attemptLogin() {&#13;&#10;        final String email = editTextEmail.getText().toString().trim();&#13;&#10;        final String password = editTextPassword.getText().toString().trim();&#13;&#10;&#13;&#10;        if (email.isEmpty() || password.isEmpty()) {&#13;&#10;            Toast.makeText(this, &quot;Ingresa email y contraseña&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        // Petición en background&#13;&#10;        new Thread(() -&gt; {&#13;&#10;            try {&#13;&#10;                JSONObject body = new JSONObject();&#13;&#10;                body.put(&quot;email&quot;, email);&#13;&#10;                body.put(&quot;password&quot;, password);&#13;&#10;&#13;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/login.php&quot;, body);&#13;&#10;                if (resp == null) {&#13;&#10;                    showToast(&quot;Error en la conexión&quot;);&#13;&#10;                    return;&#13;&#10;                }&#13;&#10;&#13;&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    String token = resp.optString(&quot;token&quot;, &quot;&quot;);&#10;                    JSONObject user = resp.optJSONObject(&quot;user&quot;);&#10;                    &#10;                    if (user != null) {&#10;                        int userId = user.optInt(&quot;id&quot;, -1);&#10;                        String nombres = user.optString(&quot;nombres&quot;, &quot;&quot;);&#10;                        String apellidos = user.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String userEmail = user.optString(&quot;email&quot;, &quot;&quot;);&#10;                        String telefono = user.optString(&quot;telefono&quot;, &quot;&quot;);&#10;                        String dni = user.optString(&quot;dni&quot;, &quot;&quot;);&#10;&#10;                        // Guardar todos los datos del usuario en SharedPreferences&#10;                        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;                        SharedPreferences.Editor editor = prefs.edit();&#10;                        editor.putString(&quot;token&quot;, token);&#10;                        editor.putInt(&quot;user_id&quot;, userId);&#10;                        editor.putString(&quot;nombres&quot;, nombres);&#10;                        editor.putString(&quot;apellidos&quot;, apellidos);&#10;                        editor.putString(&quot;email&quot;, userEmail);&#10;                        editor.putString(&quot;telefono&quot;, telefono);&#10;                        editor.putString(&quot;dni&quot;, dni);&#10;                        editor.apply();&#10;&#10;                        runOnUiThread(() -&gt; {&#10;                            Toast.makeText(LoginActivity.this, &quot;Login exitoso&quot;, Toast.LENGTH_SHORT).show();&#10;                            Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;                            startActivity(intent);&#10;                            finish();&#10;                        });&#10;                    } else {&#10;                        showToast(&quot;Error: No se recibieron datos del usuario&quot;);&#10;                    }&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Credenciales inválidas&quot;);&#10;                    showToast(msg);&#10;                }&#13;&#10;&#13;&#10;            } catch (java.net.UnknownHostException e) {&#13;&#10;                e.printStackTrace();&#13;&#10;                showToast(&quot;Error: No se puede conectar al servidor. Verifica que tu API esté corriendo.&quot;);&#13;&#10;            } catch (java.io.IOException e) {&#13;&#10;                e.printStackTrace();&#13;&#10;                String errorMsg = e.getMessage();&#13;&#10;                if (errorMsg != null &amp;&amp; errorMsg.contains(&quot;Cleartext HTTP&quot;)) {&#13;&#10;                    showToast(&quot;Error: HTTP no permitido. Desinstala la app del emulador e instala de nuevo.&quot;);&#13;&#10;                } else {&#13;&#10;                    showToast(&quot;Error de conexión: &quot; + errorMsg);&#13;&#10;                }&#13;&#10;            } catch (Exception e) {&#13;&#10;                e.printStackTrace();&#13;&#10;                showToast(&quot;Error: &quot; + e.getMessage());&#13;&#10;            }&#13;&#10;        }).start();&#13;&#10;    }&#13;&#10;&#13;&#10;    private JSONObject postJson(String urlString, JSONObject payload) throws IOException, JSONException {&#13;&#10;        URL url = new URL(urlString);&#13;&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#13;&#10;        try {&#13;&#10;            conn.setConnectTimeout(10000);&#13;&#10;            conn.setReadTimeout(10000);&#13;&#10;            conn.setRequestMethod(&quot;POST&quot;);&#13;&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#13;&#10;            conn.setDoOutput(true);&#13;&#10;&#13;&#10;            try (OutputStream os = conn.getOutputStream()) {&#13;&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#13;&#10;                os.flush();&#13;&#10;            }&#13;&#10;&#13;&#10;            int code = conn.getResponseCode();&#13;&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#13;&#10;            BufferedReader br = new BufferedReader(isr);&#13;&#10;            StringBuilder sb = new StringBuilder();&#13;&#10;            String line;&#13;&#10;            while ((line = br.readLine()) != null) {&#13;&#10;                sb.append(line);&#13;&#10;            }&#13;&#10;            br.close();&#13;&#10;            String respStr = sb.toString();&#13;&#10;            if (respStr.isEmpty()) return null;&#13;&#10;            return new JSONObject(respStr);&#13;&#10;        } finally {&#13;&#10;            conn.disconnect();&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void showToast(String msg) {&#13;&#10;        runOnUiThread(() -&gt; Toast.makeText(LoginActivity.this, msg, Toast.LENGTH_LONG).show());&#13;&#10;    }&#13;&#10;}&#13;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class VerifyActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextCode;&#10;    private Button buttonVerify, buttonSkip;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_verify);&#10;&#10;        editTextCode = findViewById(R.id.editText_code);&#10;        buttonVerify = findViewById(R.id.button_verify);&#10;        buttonSkip = findViewById(R.id.button_skip);&#10;&#10;        buttonVerify.setOnClickListener(v -&gt; attemptVerify());&#10;        buttonSkip.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void attemptVerify() {&#10;        final String code = editTextCode.getText().toString().trim();&#10;        if (code.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa el código&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        int userId = prefs.getInt(&quot;pending_user_id&quot;, -1);&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;No hay usuario pendiente&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                body.put(&quot;code&quot;, code);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/verify.php&quot;, body);&#10;                if (resp == null) {&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error en la conexión&quot;, Toast.LENGTH_SHORT).show());&#10;                    return;&#10;                }&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    // Verified&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(VerifyActivity.this, &quot;Cuenta verificada&quot;, Toast.LENGTH_LONG).show();&#10;                        startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;                        finish();&#10;                    });&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Código inválido&quot;);&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, msg, Toast.LENGTH_LONG).show());&#10;                }&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject postJson(String urlString, org.json.JSONObject payload) throws IOException, org.json.JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/AdoptionApiService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/AdoptionApiService.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.api;&#10;&#10;import android.util.Log;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class AdoptionApiService {&#10;    private static final String TAG = &quot;AdoptionApiService&quot;;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    public interface CheckRequestCallback {&#10;        void onSuccess(boolean canApply, String message, boolean hasActiveRequest);&#10;        void onError(String error);&#10;    }&#10;&#10;    public interface CreateRequestCallback {&#10;        void onSuccess(int requestId, String message);&#10;        void onError(String error);&#10;    }&#10;&#10;    /**&#10;     * Verificar si el usuario puede aplicar a una mascota&#10;     */&#10;    public static void checkActiveRequest(int userId, int petId, CheckRequestCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/adoptions/checkActiveRequest.php?user_id=&quot; + userId + &quot;&amp;pet_id=&quot; + petId;&#10;                Log.d(TAG, &quot;Verificando solicitud activa: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                    StringBuilder response = new StringBuilder();&#10;                    String line;&#10;                    while ((line = reader.readLine()) != null) {&#10;                        response.append(line);&#10;                    }&#10;                    reader.close();&#10;&#10;                    Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                    JSONObject json = new JSONObject(response.toString());&#10;                    boolean success = json.optBoolean(&quot;success&quot;, false);&#10;&#10;                    if (success) {&#10;                        boolean canApply = json.optBoolean(&quot;can_apply&quot;, false);&#10;                        boolean hasActiveRequest = json.optBoolean(&quot;has_active_request&quot;, false);&#10;                        String message = json.optString(&quot;message&quot;, &quot;&quot;);&#10;                        callback.onSuccess(canApply, message, hasActiveRequest);&#10;                    } else {&#10;                        callback.onError(json.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#10;                    }&#10;                } else {&#10;                    callback.onError(&quot;Error HTTP: &quot; + responseCode);&#10;                }&#10;                conn.disconnect();&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al verificar solicitud: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Crear solicitud de adopción&#10;     */&#10;    public static void createRequest(JSONObject requestData, CreateRequestCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/adoptions/createRequest.php&quot;;&#10;                Log.d(TAG, &quot;Creando solicitud: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;POST&quot;);&#10;                conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;);&#10;                conn.setDoOutput(true);&#10;                conn.setConnectTimeout(15000);&#10;                conn.setReadTimeout(15000);&#10;&#10;                // Enviar datos&#10;                OutputStream os = conn.getOutputStream();&#10;                os.write(requestData.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;                os.close();&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                BufferedReader reader;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                } else {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));&#10;                }&#10;&#10;                StringBuilder response = new StringBuilder();&#10;                String line;&#10;                while ((line = reader.readLine()) != null) {&#10;                    response.append(line);&#10;                }&#10;                reader.close();&#10;&#10;                Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                JSONObject json = new JSONObject(response.toString());&#10;                boolean success = json.optBoolean(&quot;success&quot;, false);&#10;&#10;                if (success) {&#10;                    int requestId = json.optInt(&quot;request_id&quot;, 0);&#10;                    String message = json.optString(&quot;message&quot;, &quot;Solicitud enviada exitosamente&quot;);&#10;                    callback.onSuccess(requestId, message);&#10;                } else {&#10;                    String errorMessage = json.optString(&quot;message&quot;, &quot;Error desconocido&quot;);&#10;                    callback.onError(errorMessage);&#10;                }&#10;&#10;                conn.disconnect();&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al crear solicitud: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/AdoptionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/AdoptionRequest.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class AdoptionRequest {&#10;    private int userId;&#10;    private int petId;&#10;    private String nombresCompletos;&#10;    private String email;&#10;    private String telefono;&#10;    private String fechaNacimiento;&#10;    private String direccionCompleta;&#10;    private String ciudad;&#10;    private String distrito;&#10;    private String tipoVivienda;&#10;    private String propietarioAceptaMascotas;&#10;    private int miembrosFamilia;&#10;    private String hayNinos;&#10;    private String alergiasFamilia;&#10;    private String tieneOtrasMascotas;&#10;    private String descripcionOtrasMascotas;&#10;    private String experienciaPrevia;&#10;    private String tiempoSolaMascota;&#10;    private String tieneVeterinario;&#10;    private String presupuestoMensual;&#10;    private String motivacionAdopcion;&#10;    private String conocimientoRaza;&#10;    private String dispuestoEntrenar;&#10;    private String compromisoLargoPlazo;&#10;&#10;    // Constructor vacío&#10;    public AdoptionRequest() {}&#10;&#10;    // Getters y Setters&#10;    public int getUserId() { return userId; }&#10;    public void setUserId(int userId) { this.userId = userId; }&#10;&#10;    public int getPetId() { return petId; }&#10;    public void setPetId(int petId) { this.petId = petId; }&#10;&#10;    public String getNombresCompletos() { return nombresCompletos; }&#10;    public void setNombresCompletos(String nombresCompletos) { this.nombresCompletos = nombresCompletos; }&#10;&#10;    public String getEmail() { return email; }&#10;    public void setEmail(String email) { this.email = email; }&#10;&#10;    public String getTelefono() { return telefono; }&#10;    public void setTelefono(String telefono) { this.telefono = telefono; }&#10;&#10;    public String getFechaNacimiento() { return fechaNacimiento; }&#10;    public void setFechaNacimiento(String fechaNacimiento) { this.fechaNacimiento = fechaNacimiento; }&#10;&#10;    public String getDireccionCompleta() { return direccionCompleta; }&#10;    public void setDireccionCompleta(String direccionCompleta) { this.direccionCompleta = direccionCompleta; }&#10;&#10;    public String getCiudad() { return ciudad; }&#10;    public void setCiudad(String ciudad) { this.ciudad = ciudad; }&#10;&#10;    public String getDistrito() { return distrito; }&#10;    public void setDistrito(String distrito) { this.distrito = distrito; }&#10;&#10;    public String getTipoVivienda() { return tipoVivienda; }&#10;    public void setTipoVivienda(String tipoVivienda) { this.tipoVivienda = tipoVivienda; }&#10;&#10;    public String getPropietarioAceptaMascotas() { return propietarioAceptaMascotas; }&#10;    public void setPropietarioAceptaMascotas(String propietarioAceptaMascotas) { this.propietarioAceptaMascotas = propietarioAceptaMascotas; }&#10;&#10;    public int getMiembrosFamilia() { return miembrosFamilia; }&#10;    public void setMiembrosFamilia(int miembrosFamilia) { this.miembrosFamilia = miembrosFamilia; }&#10;&#10;    public String getHayNinos() { return hayNinos; }&#10;    public void setHayNinos(String hayNinos) { this.hayNinos = hayNinos; }&#10;&#10;    public String getAlergiasFamilia() { return alergiasFamilia; }&#10;    public void setAlergiasFamilia(String alergiasFamilia) { this.alergiasFamilia = alergiasFamilia; }&#10;&#10;    public String getTieneOtrasMascotas() { return tieneOtrasMascotas; }&#10;    public void setTieneOtrasMascotas(String tieneOtrasMascotas) { this.tieneOtrasMascotas = tieneOtrasMascotas; }&#10;&#10;    public String getDescripcionOtrasMascotas() { return descripcionOtrasMascotas; }&#10;    public void setDescripcionOtrasMascotas(String descripcionOtrasMascotas) { this.descripcionOtrasMascotas = descripcionOtrasMascotas; }&#10;&#10;    public String getExperienciaPrevia() { return experienciaPrevia; }&#10;    public void setExperienciaPrevia(String experienciaPrevia) { this.experienciaPrevia = experienciaPrevia; }&#10;&#10;    public String getTiempoSolaMascota() { return tiempoSolaMascota; }&#10;    public void setTiempoSolaMascota(String tiempoSolaMascota) { this.tiempoSolaMascota = tiempoSolaMascota; }&#10;&#10;    public String getTieneVeterinario() { return tieneVeterinario; }&#10;    public void setTieneVeterinario(String tieneVeterinario) { this.tieneVeterinario = tieneVeterinario; }&#10;&#10;    public String getPresupuestoMensual() { return presupuestoMensual; }&#10;    public void setPresupuestoMensual(String presupuestoMensual) { this.presupuestoMensual = presupuestoMensual; }&#10;&#10;    public String getMotivacionAdopcion() { return motivacionAdopcion; }&#10;    public void setMotivacionAdopcion(String motivacionAdopcion) { this.motivacionAdopcion = motivacionAdopcion; }&#10;&#10;    public String getConocimientoRaza() { return conocimientoRaza; }&#10;    public void setConocimientoRaza(String conocimientoRaza) { this.conocimientoRaza = conocimientoRaza; }&#10;&#10;    public String getDispuestoEntrenar() { return dispuestoEntrenar; }&#10;    public void setDispuestoEntrenar(String dispuestoEntrenar) { this.dispuestoEntrenar = dispuestoEntrenar; }&#10;&#10;    public String getCompromisoLargoPlazo() { return compromisoLargoPlazo; }&#10;    public void setCompromisoLargoPlazo(String compromisoLargoPlazo) { this.compromisoLargoPlazo = compromisoLargoPlazo; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Pet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Pet.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class Pet {&#10;    private String id;&#10;    private String name;&#10;    private String especie;&#10;    private String raza;&#10;    private int edad;&#10;    private String tamano;&#10;    private String sexo;&#10;    private String descripcion;&#10;    private String foto_url;&#10;    private String distrito;&#10;    private boolean is_urgent;&#10;    private int priority;&#10;    private String estado;&#10;    private String created_at;&#10;    private String etiqueta_urgencia;&#10;    private String categoria_edad;&#10;&#10;    // Constructor vacío&#10;    public Pet() {&#10;    }&#10;&#10;    // Getters&#10;    public String getId() { return id; }&#10;    public String getName() { return name; }&#10;    public String getEspecie() { return especie; }&#10;    public String getRaza() { return raza; }&#10;    public int getEdad() { return edad; }&#10;    public String getTamano() { return tamano; }&#10;    public String getSexo() { return sexo; }&#10;    public String getDescripcion() { return descripcion; }&#10;    public String getFotoUrl() { return foto_url; }&#10;    public String getDistrito() { return distrito; }&#10;    public boolean isUrgent() { return is_urgent; }&#10;    public int getPriority() { return priority; }&#10;    public String getEstado() { return estado; }&#10;    public String getCreatedAt() { return created_at; }&#10;    public String getEtiquetaUrgencia() { return etiqueta_urgencia; }&#10;    public String getCategoriaEdad() { return categoria_edad; }&#10;&#10;    // Setters&#10;    public void setId(String id) { this.id = id; }&#10;    public void setName(String name) { this.name = name; }&#10;    public void setEspecie(String especie) { this.especie = especie; }&#10;    public void setRaza(String raza) { this.raza = raza; }&#10;    public void setEdad(int edad) { this.edad = edad; }&#10;    public void setTamano(String tamano) { this.tamano = tamano; }&#10;    public void setSexo(String sexo) { this.sexo = sexo; }&#10;    public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;    public void setFotoUrl(String foto_url) { this.foto_url = foto_url; }&#10;    public void setDistrito(String distrito) { this.distrito = distrito; }&#10;    public void setUrgent(boolean is_urgent) { this.is_urgent = is_urgent; }&#10;    public void setPriority(int priority) { this.priority = priority; }&#10;    public void setEstado(String estado) { this.estado = estado; }&#10;    public void setCreatedAt(String created_at) { this.created_at = created_at; }&#10;    public void setEtiquetaUrgencia(String etiqueta_urgencia) { this.etiqueta_urgencia = etiqueta_urgencia; }&#10;    public void setCategoriaEdad(String categoria_edad) { this.categoria_edad = categoria_edad; }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/adoption/AdoptionFormActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/adoption/AdoptionFormActivity.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.adoption;&#10;&#10;import android.app.DatePickerDialog;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.LinearLayout;&#10;import android.widget.ProgressBar;&#10;import android.widget.RadioButton;&#10;import android.widget.RadioGroup;&#10;import android.widget.Spinner;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.api.AdoptionApiService;&#10;import com.example.adoptmev5.models.AdoptionRequest;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Calendar;&#10;import java.util.Locale;&#10;&#10;public class AdoptionFormActivity extends AppCompatActivity {&#10;&#10;    private int currentStep = 1;&#10;    private int userId;&#10;    private int petId;&#10;    private String petName;&#10;    private AdoptionRequest adoptionRequest;&#10;&#10;    // UI Components&#10;    private TextView tvTitle, tvStepIndicator;&#10;    private ProgressBar progressBar;&#10;    private LinearLayout step1Layout, step2Layout, step3Layout, step4Layout;&#10;    private Button btnNext, btnPrevious, btnSubmit;&#10;&#10;    // Step 1: Información Personal&#10;    private EditText etNombresCompletos, etEmail, etTelefono, etFechaNacimiento;&#10;    private EditText etDireccionCompleta, etCiudad, etDistrito;&#10;&#10;    // Step 2: Información del Hogar&#10;    private Spinner spinnerTipoVivienda, spinnerPropietarioAcepta;&#10;    private EditText etMiembrosFamilia;&#10;    private RadioGroup rgHayNinos, rgAlergiasFamilia;&#10;&#10;    // Step 3: Experiencia con Mascotas&#10;    private RadioGroup rgTieneOtrasMascotas;&#10;    private EditText etDescripcionOtrasMascotas, etExperienciaPrevia, etTiempoSolaMascota;&#10;    private RadioGroup rgTieneVeterinario;&#10;    private EditText etPresupuestoMensual;&#10;&#10;    // Step 4: Motivación y Compromiso&#10;    private EditText etMotivacionAdopcion, etConocimientoRaza, etCompromisoLargoPlazo;&#10;    private RadioGroup rgDispuestoEntrenar;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_adoption_form);&#10;&#10;        // Obtener datos del intent&#10;        userId = getIntent().getIntExtra(&quot;user_id&quot;, 0);&#10;        petId = getIntent().getIntExtra(&quot;pet_id&quot;, 0);&#10;        petName = getIntent().getStringExtra(&quot;pet_name&quot;);&#10;&#10;        adoptionRequest = new AdoptionRequest();&#10;        adoptionRequest.setUserId(userId);&#10;        adoptionRequest.setPetId(petId);&#10;&#10;        // Prellenar datos del usuario desde SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        String userNombres = prefs.getString(&quot;nombres&quot;, &quot;&quot;);&#10;        String userApellidos = prefs.getString(&quot;apellidos&quot;, &quot;&quot;);&#10;        String userEmail = prefs.getString(&quot;email&quot;, &quot;&quot;);&#10;        String userTelefono = prefs.getString(&quot;telefono&quot;, &quot;&quot;);&#10;&#10;        initializeViews();&#10;        setupSpinners();&#10;        setupStepNavigation();&#10;&#10;        // Prellenar campos&#10;        etNombresCompletos.setText(userNombres + &quot; &quot; + userApellidos);&#10;        etEmail.setText(userEmail);&#10;        etTelefono.setText(userTelefono);&#10;&#10;        // Configurar selector de fecha&#10;        etFechaNacimiento.setOnClickListener(v -&gt; showDatePicker());&#10;&#10;        showStep(1);&#10;    }&#10;&#10;    private void initializeViews() {&#10;        tvTitle = findViewById(R.id.tv_form_title);&#10;        tvStepIndicator = findViewById(R.id.tv_step_indicator);&#10;        progressBar = findViewById(R.id.progress_bar);&#10;&#10;        step1Layout = findViewById(R.id.step1_layout);&#10;        step2Layout = findViewById(R.id.step2_layout);&#10;        step3Layout = findViewById(R.id.step3_layout);&#10;        step4Layout = findViewById(R.id.step4_layout);&#10;&#10;        btnNext = findViewById(R.id.btn_next);&#10;        btnPrevious = findViewById(R.id.btn_previous);&#10;        btnSubmit = findViewById(R.id.btn_submit);&#10;&#10;        // Step 1&#10;        etNombresCompletos = findViewById(R.id.et_nombres_completos);&#10;        etEmail = findViewById(R.id.et_email);&#10;        etTelefono = findViewById(R.id.et_telefono);&#10;        etFechaNacimiento = findViewById(R.id.et_fecha_nacimiento);&#10;        etDireccionCompleta = findViewById(R.id.et_direccion_completa);&#10;        etCiudad = findViewById(R.id.et_ciudad);&#10;        etDistrito = findViewById(R.id.et_distrito);&#10;&#10;        // Step 2&#10;        spinnerTipoVivienda = findViewById(R.id.spinner_tipo_vivienda);&#10;        spinnerPropietarioAcepta = findViewById(R.id.spinner_propietario_acepta);&#10;        etMiembrosFamilia = findViewById(R.id.et_miembros_familia);&#10;        rgHayNinos = findViewById(R.id.rg_hay_ninos);&#10;        rgAlergiasFamilia = findViewById(R.id.rg_alergias_familia);&#10;&#10;        // Step 3&#10;        rgTieneOtrasMascotas = findViewById(R.id.rg_tiene_otras_mascotas);&#10;        etDescripcionOtrasMascotas = findViewById(R.id.et_descripcion_otras_mascotas);&#10;        etExperienciaPrevia = findViewById(R.id.et_experiencia_previa);&#10;        etTiempoSolaMascota = findViewById(R.id.et_tiempo_sola_mascota);&#10;        rgTieneVeterinario = findViewById(R.id.rg_tiene_veterinario);&#10;        etPresupuestoMensual = findViewById(R.id.et_presupuesto_mensual);&#10;&#10;        // Step 4&#10;        etMotivacionAdopcion = findViewById(R.id.et_motivacion_adopcion);&#10;        etConocimientoRaza = findViewById(R.id.et_conocimiento_raza);&#10;        etCompromisoLargoPlazo = findViewById(R.id.et_compromiso_largo_plazo);&#10;        rgDispuestoEntrenar = findViewById(R.id.rg_dispuesto_entrenar);&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        // Spinner Tipo de Vivienda&#10;        String[] tiposVivienda = {&quot;Casa&quot;, &quot;Departamento&quot;, &quot;Casa con jardín&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterVivienda = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, tiposVivienda);&#10;        adapterVivienda.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerTipoVivienda.setAdapter(adapterVivienda);&#10;&#10;        // Spinner Propietario Acepta&#10;        String[] propietarioAcepta = {&quot;Sí&quot;, &quot;No&quot;, &quot;Soy propietario&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterPropietario = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, propietarioAcepta);&#10;        adapterPropietario.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerPropietarioAcepta.setAdapter(adapterPropietario);&#10;    }&#10;&#10;    private void setupStepNavigation() {&#10;        btnNext.setOnClickListener(v -&gt; {&#10;            if (validateCurrentStep()) {&#10;                saveCurrentStep();&#10;                if (currentStep &lt; 4) {&#10;                    showStep(currentStep + 1);&#10;                }&#10;            }&#10;        });&#10;&#10;        btnPrevious.setOnClickListener(v -&gt; {&#10;            if (currentStep &gt; 1) {&#10;                saveCurrentStep();&#10;                showStep(currentStep - 1);&#10;            }&#10;        });&#10;&#10;        btnSubmit.setOnClickListener(v -&gt; {&#10;            if (validateCurrentStep()) {&#10;                saveCurrentStep();&#10;                submitForm();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void showStep(int step) {&#10;        currentStep = step;&#10;&#10;        // Ocultar todos los pasos&#10;        step1Layout.setVisibility(View.GONE);&#10;        step2Layout.setVisibility(View.GONE);&#10;        step3Layout.setVisibility(View.GONE);&#10;        step4Layout.setVisibility(View.GONE);&#10;&#10;        // Mostrar paso actual&#10;        switch (step) {&#10;            case 1:&#10;                step1Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Información Personal&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 1 de 4&quot;);&#10;                progressBar.setProgress(25);&#10;                btnPrevious.setVisibility(View.GONE);&#10;                btnNext.setVisibility(View.VISIBLE);&#10;                btnSubmit.setVisibility(View.GONE);&#10;                break;&#10;            case 2:&#10;                step2Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Información del Hogar&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 2 de 4&quot;);&#10;                progressBar.setProgress(50);&#10;                btnPrevious.setVisibility(View.VISIBLE);&#10;                btnNext.setVisibility(View.VISIBLE);&#10;                btnSubmit.setVisibility(View.GONE);&#10;                break;&#10;            case 3:&#10;                step3Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Experiencia con Mascotas&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 3 de 4&quot;);&#10;                progressBar.setProgress(75);&#10;                btnPrevious.setVisibility(View.VISIBLE);&#10;                btnNext.setVisibility(View.VISIBLE);&#10;                btnSubmit.setVisibility(View.GONE);&#10;                break;&#10;            case 4:&#10;                step4Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Motivación y Compromiso&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 4 de 4&quot;);&#10;                progressBar.setProgress(100);&#10;                btnPrevious.setVisibility(View.VISIBLE);&#10;                btnNext.setVisibility(View.GONE);&#10;                btnSubmit.setVisibility(View.VISIBLE);&#10;                break;&#10;        }&#10;    }&#10;&#10;    private boolean validateCurrentStep() {&#10;        switch (currentStep) {&#10;            case 1:&#10;                if (etNombresCompletos.getText().toString().trim().isEmpty()) {&#10;                    etNombresCompletos.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etEmail.getText().toString().trim().isEmpty()) {&#10;                    etEmail.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etTelefono.getText().toString().trim().isEmpty()) {&#10;                    etTelefono.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etFechaNacimiento.getText().toString().trim().isEmpty()) {&#10;                    etFechaNacimiento.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etDireccionCompleta.getText().toString().trim().isEmpty()) {&#10;                    etDireccionCompleta.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etCiudad.getText().toString().trim().isEmpty()) {&#10;                    etCiudad.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etDistrito.getText().toString().trim().isEmpty()) {&#10;                    etDistrito.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                break;&#10;            case 2:&#10;                if (etMiembrosFamilia.getText().toString().trim().isEmpty()) {&#10;                    etMiembrosFamilia.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (rgHayNinos.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si hay niños en la familia&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (rgAlergiasFamilia.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si hay alergias en la familia&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                break;&#10;            case 3:&#10;                if (rgTieneOtrasMascotas.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si tienes otras mascotas&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (etExperienciaPrevia.getText().toString().trim().isEmpty()) {&#10;                    etExperienciaPrevia.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etTiempoSolaMascota.getText().toString().trim().isEmpty()) {&#10;                    etTiempoSolaMascota.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (rgTieneVeterinario.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si tienes veterinario&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (etPresupuestoMensual.getText().toString().trim().isEmpty()) {&#10;                    etPresupuestoMensual.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                break;&#10;            case 4:&#10;                if (etMotivacionAdopcion.getText().toString().trim().isEmpty()) {&#10;                    etMotivacionAdopcion.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etConocimientoRaza.getText().toString().trim().isEmpty()) {&#10;                    etConocimientoRaza.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (rgDispuestoEntrenar.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si estás dispuesto a entrenar&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (etCompromisoLargoPlazo.getText().toString().trim().isEmpty()) {&#10;                    etCompromisoLargoPlazo.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                break;&#10;        }&#10;        return true;&#10;    }&#10;&#10;    private void saveCurrentStep() {&#10;        switch (currentStep) {&#10;            case 1:&#10;                adoptionRequest.setNombresCompletos(etNombresCompletos.getText().toString().trim());&#10;                adoptionRequest.setEmail(etEmail.getText().toString().trim());&#10;                adoptionRequest.setTelefono(etTelefono.getText().toString().trim());&#10;                adoptionRequest.setFechaNacimiento(etFechaNacimiento.getText().toString().trim());&#10;                adoptionRequest.setDireccionCompleta(etDireccionCompleta.getText().toString().trim());&#10;                adoptionRequest.setCiudad(etCiudad.getText().toString().trim());&#10;                adoptionRequest.setDistrito(etDistrito.getText().toString().trim());&#10;                break;&#10;            case 2:&#10;                adoptionRequest.setTipoVivienda(spinnerTipoVivienda.getSelectedItem().toString());&#10;                adoptionRequest.setPropietarioAceptaMascotas(spinnerPropietarioAcepta.getSelectedItem().toString());&#10;                adoptionRequest.setMiembrosFamilia(Integer.parseInt(etMiembrosFamilia.getText().toString().trim()));&#10;                adoptionRequest.setHayNinos(getRadioButtonText(rgHayNinos));&#10;                adoptionRequest.setAlergiasFamilia(getRadioButtonText(rgAlergiasFamilia));&#10;                break;&#10;            case 3:&#10;                adoptionRequest.setTieneOtrasMascotas(getRadioButtonText(rgTieneOtrasMascotas));&#10;                String descripcionOtras = etDescripcionOtrasMascotas.getText().toString().trim();&#10;                adoptionRequest.setDescripcionOtrasMascotas(descripcionOtras.isEmpty() ? null : descripcionOtras);&#10;                adoptionRequest.setExperienciaPrevia(etExperienciaPrevia.getText().toString().trim());&#10;                adoptionRequest.setTiempoSolaMascota(etTiempoSolaMascota.getText().toString().trim());&#10;                adoptionRequest.setTieneVeterinario(getRadioButtonText(rgTieneVeterinario));&#10;                adoptionRequest.setPresupuestoMensual(etPresupuestoMensual.getText().toString().trim());&#10;                break;&#10;            case 4:&#10;                adoptionRequest.setMotivacionAdopcion(etMotivacionAdopcion.getText().toString().trim());&#10;                adoptionRequest.setConocimientoRaza(etConocimientoRaza.getText().toString().trim());&#10;                adoptionRequest.setDispuestoEntrenar(getRadioButtonText(rgDispuestoEntrenar));&#10;                adoptionRequest.setCompromisoLargoPlazo(etCompromisoLargoPlazo.getText().toString().trim());&#10;                break;&#10;        }&#10;    }&#10;&#10;    private String getRadioButtonText(RadioGroup radioGroup) {&#10;        int selectedId = radioGroup.getCheckedRadioButtonId();&#10;        if (selectedId != -1) {&#10;            RadioButton radioButton = findViewById(selectedId);&#10;            return radioButton.getText().toString();&#10;        }&#10;        return &quot;&quot;;&#10;    }&#10;&#10;    private void showDatePicker() {&#10;        Calendar calendar = Calendar.getInstance();&#10;        int year = calendar.get(Calendar.YEAR);&#10;        int month = calendar.get(Calendar.MONTH);&#10;        int day = calendar.get(Calendar.DAY_OF_MONTH);&#10;&#10;        DatePickerDialog datePickerDialog = new DatePickerDialog(this,&#10;                (view, selectedYear, selectedMonth, selectedDay) -&gt; {&#10;                    Calendar selectedDate = Calendar.getInstance();&#10;                    selectedDate.set(selectedYear, selectedMonth, selectedDay);&#10;                    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.getDefault());&#10;                    etFechaNacimiento.setText(sdf.format(selectedDate.getTime()));&#10;                }, year, month, day);&#10;&#10;        // Establecer fecha máxima (hoy - 18 años)&#10;        calendar.add(Calendar.YEAR, -18);&#10;        datePickerDialog.getDatePicker().setMaxDate(calendar.getTimeInMillis());&#10;&#10;        datePickerDialog.show();&#10;    }&#10;&#10;    private void submitForm() {&#10;        try {&#10;            JSONObject requestData = new JSONObject();&#10;            requestData.put(&quot;user_id&quot;, adoptionRequest.getUserId());&#10;            requestData.put(&quot;pet_id&quot;, adoptionRequest.getPetId());&#10;            requestData.put(&quot;nombres_completos&quot;, adoptionRequest.getNombresCompletos());&#10;            requestData.put(&quot;email&quot;, adoptionRequest.getEmail());&#10;            requestData.put(&quot;telefono&quot;, adoptionRequest.getTelefono());&#10;            requestData.put(&quot;fecha_nacimiento&quot;, adoptionRequest.getFechaNacimiento());&#10;            requestData.put(&quot;direccion_completa&quot;, adoptionRequest.getDireccionCompleta());&#10;            requestData.put(&quot;ciudad&quot;, adoptionRequest.getCiudad());&#10;            requestData.put(&quot;distrito&quot;, adoptionRequest.getDistrito());&#10;            requestData.put(&quot;tipo_vivienda&quot;, adoptionRequest.getTipoVivienda());&#10;            requestData.put(&quot;propietario_acepta_mascotas&quot;, adoptionRequest.getPropietarioAceptaMascotas());&#10;            requestData.put(&quot;miembros_familia&quot;, adoptionRequest.getMiembrosFamilia());&#10;            requestData.put(&quot;hay_ninos&quot;, adoptionRequest.getHayNinos());&#10;            requestData.put(&quot;alergias_familia&quot;, adoptionRequest.getAlergiasFamilia());&#10;            requestData.put(&quot;tiene_otras_mascotas&quot;, adoptionRequest.getTieneOtrasMascotas());&#10;            requestData.put(&quot;descripcion_otras_mascotas&quot;, adoptionRequest.getDescripcionOtrasMascotas());&#10;            requestData.put(&quot;experiencia_previa&quot;, adoptionRequest.getExperienciaPrevia());&#10;            requestData.put(&quot;tiempo_sola_mascota&quot;, adoptionRequest.getTiempoSolaMascota());&#10;            requestData.put(&quot;tiene_veterinario&quot;, adoptionRequest.getTieneVeterinario());&#10;            requestData.put(&quot;presupuesto_mensual&quot;, adoptionRequest.getPresupuestoMensual());&#10;            requestData.put(&quot;motivacion_adopcion&quot;, adoptionRequest.getMotivacionAdopcion());&#10;            requestData.put(&quot;conocimiento_raza&quot;, adoptionRequest.getConocimientoRaza());&#10;            requestData.put(&quot;dispuesto_entrenar&quot;, adoptionRequest.getDispuestoEntrenar());&#10;            requestData.put(&quot;compromiso_largo_plazo&quot;, adoptionRequest.getCompromisoLargoPlazo());&#10;&#10;            // Deshabilitar botón mientras se envía&#10;            btnSubmit.setEnabled(false);&#10;            btnSubmit.setText(&quot;Enviando...&quot;);&#10;&#10;            AdoptionApiService.createRequest(requestData, new AdoptionApiService.CreateRequestCallback() {&#10;                @Override&#10;                public void onSuccess(int requestId, String message) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(AdoptionFormActivity.this, message, Toast.LENGTH_LONG).show();&#10;                        // Volver a la pantalla principal&#10;                        finish();&#10;                    });&#10;                }&#10;&#10;                @Override&#10;                public void onError(String error) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(AdoptionFormActivity.this, &quot;Error: &quot; + error, Toast.LENGTH_LONG).show();&#10;                        btnSubmit.setEnabled(true);&#10;                        btnSubmit.setText(&quot;Enviar Solicitud&quot;);&#10;                    });&#10;                }&#10;            });&#10;&#10;        } catch (Exception e) {&#10;            Toast.makeText(this, &quot;Error al preparar la solicitud: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;            btnSubmit.setEnabled(true);&#10;            btnSubmit.setText(&quot;Enviar Solicitud&quot;);&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/EditProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/EditProfileActivity.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Spinner;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class EditProfileActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextNombres, editTextApellidos, editTextTelefono, editTextDistrito;&#10;    private Spinner spinnerEspecie, spinnerTamano, spinnerEdad;&#10;    private Button buttonSave, buttonCancel;&#10;&#10;    private int userId = -1;&#10;    &#10;    // Variables para almacenar datos originales&#10;    private String originalNombres = &quot;&quot;;&#10;    private String originalApellidos = &quot;&quot;;&#10;    private String originalTelefono = &quot;&quot;;&#10;    private String originalDistrito = &quot;&quot;;&#10;    private String originalEspecie = &quot;&quot;;&#10;    private String originalTamano = &quot;&quot;;&#10;    private String originalEdad = &quot;&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_profile);&#10;&#10;        // Obtener user_id de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;Error: No hay sesión activa&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Inicializar vistas&#10;        editTextNombres = findViewById(R.id.editText_nombres);&#10;        editTextApellidos = findViewById(R.id.editText_apellidos);&#10;        editTextTelefono = findViewById(R.id.editText_telefono);&#10;        editTextDistrito = findViewById(R.id.editText_distrito);&#10;&#10;        spinnerEspecie = findViewById(R.id.spinner_especie);&#10;        spinnerTamano = findViewById(R.id.spinner_tamano);&#10;        spinnerEdad = findViewById(R.id.spinner_edad);&#10;&#10;        buttonSave = findViewById(R.id.button_save);&#10;        buttonCancel = findViewById(R.id.button_cancel);&#10;&#10;        // Configurar spinners&#10;        setupSpinners();&#10;&#10;        // Cargar datos del usuario&#10;        loadUserData();&#10;&#10;        // Listeners&#10;        buttonSave.setOnClickListener(v -&gt; saveProfile());&#10;        buttonCancel.setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        // Especie&#10;        String[] especies = {&quot;Seleccionar&quot;, &quot;Perro&quot;, &quot;Gato&quot;, &quot;Ambos&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterEspecie = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, especies);&#10;        adapterEspecie.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerEspecie.setAdapter(adapterEspecie);&#10;&#10;        // Tamaño&#10;        String[] tamanos = {&quot;Seleccionar&quot;, &quot;Pequeño&quot;, &quot;Mediano&quot;, &quot;Grande&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterTamano = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, tamanos);&#10;        adapterTamano.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerTamano.setAdapter(adapterTamano);&#10;&#10;        // Edad&#10;        String[] edades = {&quot;Seleccionar&quot;, &quot;Cachorro&quot;, &quot;Adulto&quot;, &quot;Senior&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterEdad = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, edades);&#10;        adapterEdad.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerEdad.setAdapter(adapterEdad);&#10;    }&#10;&#10;    private void loadUserData() {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/users/getUser.php?user_id=&quot; + userId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                if (code == 200) {&#10;                    BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), &quot;UTF-8&quot;));&#10;                    StringBuilder sb = new StringBuilder();&#10;                    String line;&#10;                    while ((line = br.readLine()) != null) {&#10;                        sb.append(line);&#10;                    }&#10;                    br.close();&#10;&#10;                    JSONObject response = new JSONObject(sb.toString());&#10;&#10;                    // Actualizar UI en el hilo principal&#10;                    runOnUiThread(() -&gt; populateFields(response));&#10;                } else {&#10;                    runOnUiThread(() -&gt; Toast.makeText(EditProfileActivity.this,&#10;                            &quot;Error al cargar datos&quot;, Toast.LENGTH_SHORT).show());&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(EditProfileActivity.this,&#10;                        &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void populateFields(JSONObject data) {&#10;        try {&#10;            // Datos básicos&#10;            String nombres = data.optString(&quot;nombres&quot;, &quot;&quot;);&#10;            String apellidos = data.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;            String telefono = data.optString(&quot;telefono&quot;, &quot;&quot;);&#10;            String distrito = data.optString(&quot;distrito&quot;, &quot;&quot;);&#10;&#10;            // Guardar valores originales&#10;            originalNombres = nombres;&#10;            originalApellidos = apellidos;&#10;            originalTelefono = telefono;&#10;            originalDistrito = distrito;&#10;&#10;            editTextNombres.setText(nombres);&#10;            editTextApellidos.setText(apellidos);&#10;            editTextTelefono.setText(telefono);&#10;            editTextDistrito.setText(distrito);&#10;&#10;            // Preferencias (pueden estar en un objeto anidado &quot;preferencias&quot; o directamente)&#10;            JSONObject prefs = data.optJSONObject(&quot;preferencias&quot;);&#10;            String especie = &quot;&quot;;&#10;            String tamano = &quot;&quot;;&#10;            String edad = &quot;&quot;;&#10;&#10;            if (prefs != null) {&#10;                especie = prefs.optString(&quot;especie&quot;, &quot;&quot;);&#10;                tamano = prefs.optString(&quot;tamano&quot;, &quot;&quot;);&#10;                edad = prefs.optString(&quot;edad&quot;, &quot;&quot;);&#10;            } else {&#10;                especie = data.optString(&quot;especie_preferida&quot;, &quot;&quot;);&#10;                tamano = data.optString(&quot;tamano_preferido&quot;, &quot;&quot;);&#10;                edad = data.optString(&quot;edad_preferida&quot;, &quot;&quot;);&#10;            }&#10;&#10;            // Guardar preferencias originales&#10;            originalEspecie = especie;&#10;            originalTamano = tamano;&#10;            originalEdad = edad;&#10;&#10;            // Seleccionar en spinners&#10;            setSpinnerSelection(spinnerEspecie, especie);&#10;            setSpinnerSelection(spinnerTamano, tamano);&#10;            setSpinnerSelection(spinnerEdad, edad);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            Toast.makeText(this, &quot;Error al cargar datos&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void setSpinnerSelection(Spinner spinner, String value) {&#10;        if (value == null || value.isEmpty()) return;&#10;&#10;        ArrayAdapter adapter = (ArrayAdapter) spinner.getAdapter();&#10;        for (int i = 0; i &lt; adapter.getCount(); i++) {&#10;            if (adapter.getItem(i).toString().equalsIgnoreCase(value)) {&#10;                spinner.setSelection(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    private void saveProfile() {&#10;        final String nombres = editTextNombres.getText().toString().trim();&#10;        final String apellidos = editTextApellidos.getText().toString().trim();&#10;        final String telefono = editTextTelefono.getText().toString().trim();&#10;        final String distrito = editTextDistrito.getText().toString().trim();&#10;&#10;        final String especie = spinnerEspecie.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerEspecie.getSelectedItem().toString() : &quot;&quot;;&#10;        final String tamano = spinnerTamano.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerTamano.getSelectedItem().toString() : &quot;&quot;;&#10;        final String edad = spinnerEdad.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerEdad.getSelectedItem().toString() : &quot;&quot;;&#10;&#10;        // Verificar si hubo cambios&#10;        boolean hayCambios = false;&#10;        &#10;        if (!nombres.equals(originalNombres)) hayCambios = true;&#10;        if (!apellidos.equals(originalApellidos)) hayCambios = true;&#10;        if (!telefono.equals(originalTelefono)) hayCambios = true;&#10;        if (!distrito.equals(originalDistrito)) hayCambios = true;&#10;        if (!especie.equals(originalEspecie)) hayCambios = true;&#10;        if (!tamano.equals(originalTamano)) hayCambios = true;&#10;        if (!edad.equals(originalEdad)) hayCambios = true;&#10;&#10;        if (!hayCambios) {&#10;            Toast.makeText(this, &quot;No hay cambios para guardar&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Validar solo los campos que fueron modificados&#10;        if (!nombres.equals(originalNombres) &amp;&amp; nombres.isEmpty()) {&#10;            Toast.makeText(this, &quot;Los nombres no pueden estar vacíos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (!apellidos.equals(originalApellidos) &amp;&amp; apellidos.isEmpty()) {&#10;            Toast.makeText(this, &quot;Los apellidos no pueden estar vacíos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (!telefono.equals(originalTelefono) &amp;&amp; !telefono.isEmpty() &amp;&amp; telefono.length() != 9) {&#10;            Toast.makeText(this, &quot;El teléfono debe tener 9 dígitos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Mostrar progress&#10;        buttonSave.setEnabled(false);&#10;        buttonSave.setText(&quot;GUARDANDO...&quot;);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                &#10;                // Solo enviar los campos que fueron modificados&#10;                if (!nombres.equals(originalNombres)) {&#10;                    body.put(&quot;nombres&quot;, nombres);&#10;                }&#10;                if (!apellidos.equals(originalApellidos)) {&#10;                    body.put(&quot;apellidos&quot;, apellidos);&#10;                }&#10;                if (!telefono.equals(originalTelefono)) {&#10;                    body.put(&quot;telefono&quot;, telefono);&#10;                }&#10;                if (!distrito.equals(originalDistrito)) {&#10;                    body.put(&quot;distrito&quot;, distrito);&#10;                }&#10;                if (!especie.equals(originalEspecie)) {&#10;                    body.put(&quot;especie_preferida&quot;, especie);&#10;                }&#10;                if (!tamano.equals(originalTamano)) {&#10;                    body.put(&quot;tamano_preferido&quot;, tamano);&#10;                }&#10;                if (!edad.equals(originalEdad)) {&#10;                    body.put(&quot;edad_preferida&quot;, edad);&#10;                }&#10;&#10;                JSONObject response = putJson(BASE_URL + &quot;/users/updateUser.php&quot;, body);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    buttonSave.setEnabled(true);&#10;                    buttonSave.setText(&quot;GUARDAR CAMBIOS&quot;);&#10;&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        String message = response.optString(&quot;message&quot;, &quot;Perfil actualizado&quot;);&#10;                        Toast.makeText(EditProfileActivity.this, message, Toast.LENGTH_LONG).show();&#10;                        finish(); // Volver a ProfileActivity&#10;                    } else {&#10;                        String errorMsg = response != null ?&#10;                                response.optString(&quot;error&quot;, response.optString(&quot;message&quot;, &quot;Error al actualizar&quot;)) :&#10;                                &quot;Error de conexión&quot;;&#10;                        Toast.makeText(EditProfileActivity.this, errorMsg, Toast.LENGTH_LONG).show();&#10;                    }&#10;                });&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    buttonSave.setEnabled(true);&#10;                    buttonSave.setText(&quot;GUARDAR CAMBIOS&quot;);&#10;                    Toast.makeText(EditProfileActivity.this,&#10;                            &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject putJson(String urlString, JSONObject payload) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;PUT&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(&#10;                    code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/ProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/ProfileActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.os.Bundle;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.adoptmev5.R;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_profile);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.adoptmev5.LoginActivity;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private TextView textViewUserName, textViewProfileStatus;&#10;    private ImageView imageViewEditProfile;&#10;    private LinearLayout optionCompatibility, optionPreferences, optionMyProfile,&#10;            optionSettings, optionHelp, optionAbout, optionLogout;&#10;&#10;    private int userId = -1;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_profile);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Obtener user_id&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        // Inicializar vistas&#10;        textViewUserName = findViewById(R.id.textView_user_name);&#10;        textViewProfileStatus = findViewById(R.id.textView_profile_status);&#10;        imageViewEditProfile = findViewById(R.id.imageView_edit_profile);&#10;&#10;        optionCompatibility = findViewById(R.id.option_compatibility);&#10;        optionPreferences = findViewById(R.id.option_preferences);&#10;        optionMyProfile = findViewById(R.id.option_my_profile);&#10;        optionSettings = findViewById(R.id.option_settings);&#10;        optionHelp = findViewById(R.id.option_help);&#10;        optionAbout = findViewById(R.id.option_about);&#10;        optionLogout = findViewById(R.id.option_logout);&#10;&#10;        // Cargar datos del usuario&#10;        loadUserData();&#10;&#10;        // Click en el lápiz de editar&#10;        imageViewEditProfile.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, EditProfileActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        // Listeners de las opciones&#10;        optionCompatibility.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, CompatibilityActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionPreferences.setOnClickListener(v -&gt; {&#10;            // Abrir pantalla de preferencias (FilterActivity)&#10;            Intent intent = new Intent(ProfileActivity.this, FilterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionMyProfile.setOnClickListener(v -&gt; {&#10;            // Abrir edición de perfil&#10;            Intent intent = new Intent(ProfileActivity.this, EditProfileActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionSettings.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, SettingsActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionHelp.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, HelpActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionAbout.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, AboutActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        optionLogout.setOnClickListener(v -&gt; logout());&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Recargar datos cuando vuelva de EditProfileActivity&#10;        loadUserData();&#10;    }&#10;&#10;    private void loadUserData() {&#10;        if (userId == -1) {&#10;            textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;            textViewProfileStatus.setText(&quot;Inicia sesión para ver tu perfil&quot;);&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/users/getUser.php?user_id=&quot; + userId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                if (code == 200) {&#10;                    BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), &quot;UTF-8&quot;));&#10;                    StringBuilder sb = new StringBuilder();&#10;                    String line;&#10;                    while ((line = br.readLine()) != null) {&#10;                        sb.append(line);&#10;                    }&#10;                    br.close();&#10;&#10;                    JSONObject response = new JSONObject(sb.toString());&#10;&#10;                    // Actualizar UI&#10;                    runOnUiThread(() -&gt; {&#10;                        String nombres = response.optString(&quot;nombres&quot;, &quot;&quot;);&#10;                        String apellidos = response.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String fullName = (nombres + &quot; &quot; + apellidos).trim();&#10;&#10;                        if (fullName.isEmpty()) {&#10;                            fullName = response.optString(&quot;email&quot;, &quot;Usuario AdoptMe&quot;);&#10;                        }&#10;&#10;                        textViewUserName.setText(fullName);&#10;                        textViewProfileStatus.setText(&quot;Ver perfil completo&quot;);&#10;                    });&#10;                } else {&#10;                    runOnUiThread(() -&gt; {&#10;                        textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                        textViewProfileStatus.setText(&quot;Error al cargar perfil&quot;);&#10;                    });&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                    textViewProfileStatus.setText(&quot;Error de conexión&quot;);&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void logout() {&#10;        // Limpiar SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        prefs.edit().clear().apply();&#10;&#10;        // Ir a LoginActivity&#10;        Intent intent = new Intent(ProfileActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetDetailActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetDetailActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.os.Bundle;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;&#10;public class PetDetailActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_pet_detail);&#10;&#10;        ImageView petImage = findViewById(R.id.pet_image);&#10;        TextView petName = findViewById(R.id.pet_name);&#10;        TextView petDescription = findViewById(R.id.pet_description);&#10;&#10;        // Nuevos campos&#10;        TextView petAge = findViewById(R.id.pet_age);&#10;        TextView petWeight = findViewById(R.id.pet_weight);&#10;        TextView petHeight = findViewById(R.id.pet_height);&#10;&#10;        // Recibimos datos desde el intent&#10;        String name = getIntent().getStringExtra(&quot;pet_name&quot;);&#10;        String description = getIntent().getStringExtra(&quot;pet_description&quot;);&#10;        String fotoUrl = getIntent().getStringExtra(&quot;pet_foto_url&quot;);&#10;        String especie = getIntent().getStringExtra(&quot;pet_especie&quot;);&#10;        int imageRes = getIntent().getIntExtra(&quot;pet_image&quot;, R.drawable.search1);&#10;&#10;        // Extras nuevos&#10;        String age = getIntent().getStringExtra(&quot;pet_age&quot;);&#10;        String weight = getIntent().getStringExtra(&quot;pet_weight&quot;);&#10;        String height = getIntent().getStringExtra(&quot;pet_height&quot;);&#10;&#10;        // Setear valores&#10;        petName.setText(name);&#10;        petDescription.setText(description);&#10;&#10;        // Cargar imagen desde URL usando Glide&#10;        if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;            Glide.with(this)&#10;                    .load(fotoUrl)&#10;                    .placeholder(getPlaceholderByEspecie(especie))&#10;                    .error(getPlaceholderByEspecie(especie))&#10;                    .centerCrop()&#10;                    .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                    .into(petImage);&#10;        } else {&#10;            // Fallback a imagen estática si no hay URL&#10;            petImage.setImageResource(imageRes);&#10;        }&#10;&#10;        if (age != null) petAge.setText(age);&#10;        if (weight != null) petWeight.setText(weight);&#10;        if (height != null) petHeight.setText(height);&#10;    }&#10;&#10;    /**&#10;     * Obtener placeholder según la especie&#10;     */&#10;    private int getPlaceholderByEspecie(String especie) {&#10;        if (especie == null) return R.drawable.search1;&#10;&#10;        if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;            return R.drawable.search1;&#10;        } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;            return R.drawable.search2;&#10;        } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;            return R.drawable.search5;&#10;        } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;            return R.drawable.search3;&#10;        } else {&#10;            return R.drawable.search1;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.api.AdoptionApiService;&#10;import com.example.adoptmev5.ui.adoption.AdoptionFormActivity;&#10;&#10;public class PetDetailActivity extends AppCompatActivity {&#10;&#10;    private static final String TAG = &quot;PetDetailActivity&quot;;&#10;    private String petId;&#10;    private int userId;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_pet_detail);&#10;&#10;        ImageView petImage = findViewById(R.id.pet_image);&#10;        TextView petName = findViewById(R.id.pet_name);&#10;        TextView petDescription = findViewById(R.id.pet_description);&#10;        Button btnAdoptNow = findViewById(R.id.btn_adopt_now);&#10;&#10;        // Nuevos campos&#10;        TextView petAge = findViewById(R.id.pet_age);&#10;        TextView petWeight = findViewById(R.id.pet_weight);&#10;        TextView petHeight = findViewById(R.id.pet_height);&#10;&#10;        // Obtener userId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, 0);&#10;&#10;        // Recibimos datos desde el intent&#10;        petId = getIntent().getStringExtra(&quot;pet_id&quot;);&#10;        &#10;        // Log de depuración&#10;        Log.d(TAG, &quot;userId: &quot; + userId);&#10;        Log.d(TAG, &quot;petId recibido: &quot; + petId);&#10;        &#10;        String name = getIntent().getStringExtra(&quot;pet_name&quot;);&#10;        String description = getIntent().getStringExtra(&quot;pet_description&quot;);&#10;        String fotoUrl = getIntent().getStringExtra(&quot;pet_foto_url&quot;);&#10;        String especie = getIntent().getStringExtra(&quot;pet_especie&quot;);&#10;        int imageRes = getIntent().getIntExtra(&quot;pet_image&quot;, R.drawable.search1);&#10;&#10;        // Extras nuevos&#10;        String age = getIntent().getStringExtra(&quot;pet_age&quot;);&#10;        String weight = getIntent().getStringExtra(&quot;pet_weight&quot;);&#10;        String height = getIntent().getStringExtra(&quot;pet_height&quot;);&#10;&#10;        // Setear valores&#10;        petName.setText(name);&#10;        petDescription.setText(description);&#10;&#10;        // Cargar imagen desde URL usando Glide&#10;        if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;            Glide.with(this)&#10;                    .load(fotoUrl)&#10;                    .placeholder(getPlaceholderByEspecie(especie))&#10;                    .error(getPlaceholderByEspecie(especie))&#10;                    .centerCrop()&#10;                    .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                    .into(petImage);&#10;        } else {&#10;            // Fallback a imagen estática si no hay URL&#10;            petImage.setImageResource(imageRes);&#10;        }&#10;&#10;        if (age != null) petAge.setText(age);&#10;        if (weight != null) petWeight.setText(weight);&#10;        if (height != null) petHeight.setText(height);&#10;&#10;        // Configurar botón de adoptar&#10;        btnAdoptNow.setOnClickListener(v -&gt; {&#10;            Log.d(TAG, &quot;Botón Adoptar presionado&quot;);&#10;            Log.d(TAG, &quot;userId actual: &quot; + userId);&#10;            Log.d(TAG, &quot;petId actual: &quot; + petId);&#10;            &#10;            if (userId == 0) {&#10;                Toast.makeText(this, &quot;Debes iniciar sesión para adoptar&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;&#10;            if (petId == null || petId.isEmpty()) {&#10;                Log.e(TAG, &quot;ERROR: petId es null o vacío&quot;);&#10;                Toast.makeText(this, &quot;Error: ID de mascota no válido (petId: &quot; + petId + &quot;)&quot;, Toast.LENGTH_LONG).show();&#10;                return;&#10;            }&#10;&#10;            // Verificar si puede aplicar&#10;            checkCanApply();&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Verificar si el usuario puede aplicar a esta mascota&#10;     */&#10;    private void checkCanApply() {&#10;        // Convertir petId a int para la API&#10;        int petIdInt;&#10;        try {&#10;            petIdInt = Integer.parseInt(petId);&#10;        } catch (NumberFormatException e) {&#10;            Toast.makeText(this, &quot;Error: ID de mascota inválido&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        AdoptionApiService.checkActiveRequest(userId, petIdInt, new AdoptionApiService.CheckRequestCallback() {&#10;            @Override&#10;            public void onSuccess(boolean canApply, String message, boolean hasActiveRequest) {&#10;                runOnUiThread(() -&gt; {&#10;                    if (canApply) {&#10;                        // Abrir formulario de adopción&#10;                        Intent intent = new Intent(PetDetailActivity.this, AdoptionFormActivity.class);&#10;                        intent.putExtra(&quot;user_id&quot;, userId);&#10;                        intent.putExtra(&quot;pet_id&quot;, petIdInt);&#10;                        intent.putExtra(&quot;pet_name&quot;, getIntent().getStringExtra(&quot;pet_name&quot;));&#10;                        startActivity(intent);&#10;                    } else {&#10;                        Toast.makeText(PetDetailActivity.this, message, Toast.LENGTH_LONG).show();&#10;                    }&#10;                });&#10;            }&#10;&#10;            @Override&#10;            public void onError(String error) {&#10;                runOnUiThread(() -&gt; {&#10;                    Toast.makeText(PetDetailActivity.this, &quot;Error: &quot; + error, Toast.LENGTH_SHORT).show();&#10;                });&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Obtener placeholder según la especie&#10;     */&#10;    private int getPlaceholderByEspecie(String especie) {&#10;        if (especie == null) return R.drawable.search1;&#10;&#10;        if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;            return R.drawable.search1;&#10;        } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;            return R.drawable.search2;&#10;        } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;            return R.drawable.search5;&#10;        } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;            return R.drawable.search3;&#10;        } else {&#10;            return R.drawable.search1;&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetsAdapter.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.Pet;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class PetsAdapter extends RecyclerView.Adapter&lt;PetsAdapter.PetViewHolder&gt; {&#10;&#10;    private List&lt;Pet&gt; pets = new ArrayList&lt;&gt;();&#10;    private OnPetClickListener listener;&#10;&#10;    public interface OnPetClickListener {&#10;        void onPetClick(Pet pet);&#10;    }&#10;&#10;    public PetsAdapter(OnPetClickListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void setPets(List&lt;Pet&gt; pets) {&#10;        this.pets = pets != null ? pets : new ArrayList&lt;&gt;();&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public PetViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_pet_card, parent, false);&#10;        return new PetViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull PetViewHolder holder, int position) {&#10;        Pet pet = pets.get(position);&#10;        holder.bind(pet, listener);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return pets.size();&#10;    }&#10;&#10;    static class PetViewHolder extends RecyclerView.ViewHolder {&#10;        private ImageView petImage;&#10;        private TextView petName;&#10;        private TextView petInfo;&#10;        private TextView petAge;&#10;        private TextView petDistrito;&#10;        private Button btnAdopt;&#10;        private View urgentBadge;&#10;&#10;        public PetViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            petImage = itemView.findViewById(R.id.pet_image);&#10;            petName = itemView.findViewById(R.id.pet_name);&#10;            petInfo = itemView.findViewById(R.id.pet_info);&#10;            petAge = itemView.findViewById(R.id.pet_age);&#10;            petDistrito = itemView.findViewById(R.id.pet_distrito);&#10;            btnAdopt = itemView.findViewById(R.id.btn_adopt);&#10;            urgentBadge = itemView.findViewById(R.id.urgent_badge);&#10;        }&#10;&#10;        public void bind(Pet pet, OnPetClickListener listener) {&#10;            petName.setText(pet.getName());&#10;            petInfo.setText(pet.getEspecie() + &quot; • &quot; + pet.getRaza());&#10;            petAge.setText(pet.getEdad() + &quot; años&quot;);&#10;            petDistrito.setText(pet.getDistrito());&#10;&#10;            // Mostrar badge urgente&#10;            urgentBadge.setVisibility(pet.isUrgent() ? View.VISIBLE : View.GONE);&#10;&#10;            // Cargar imagen desde URL usando Glide&#10;            String fotoUrl = pet.getFotoUrl();&#10;            if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;                Glide.with(itemView.getContext())&#10;                        .load(fotoUrl)&#10;                        .placeholder(getPlaceholderByEspecie(pet.getEspecie()))&#10;                        .error(getPlaceholderByEspecie(pet.getEspecie()))&#10;                        .centerCrop()&#10;                        .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                        .into(petImage);&#10;            } else {&#10;                // Usar placeholder si no hay URL&#10;                petImage.setImageResource(getPlaceholderByEspecie(pet.getEspecie()));&#10;            }&#10;&#10;            // Click listeners&#10;            btnAdopt.setOnClickListener(v -&gt; {&#10;                if (listener != null) listener.onPetClick(pet);&#10;            });&#10;&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) listener.onPetClick(pet);&#10;            });&#10;        }&#10;&#10;        /**&#10;         * Obtener placeholder según la especie&#10;         */&#10;        private int getPlaceholderByEspecie(String especie) {&#10;            if (especie == null) return R.drawable.search1;&#10;            &#10;            if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;                return R.drawable.search1;&#10;            } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;                return R.drawable.search2;&#10;            } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;                return R.drawable.search5;&#10;            } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;                return R.drawable.search3;&#10;            } else {&#10;                return R.drawable.search1;&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/SearchFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/SearchFragment.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.EditText;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.databinding.FragmentSearchBinding;&#10;&#10;public class SearchFragment extends Fragment {&#10;&#10;    private FragmentSearchBinding binding;&#10;&#10;    // Variables para el RecyclerView y la API&#10;    private RecyclerView recyclerPets;&#10;    private PetsAdapter petsAdapter;&#10;    private ProgressBar progressLoading;&#10;    private View emptyState;&#10;    private TextView tvResultsCount;&#10;    private EditText searchInput;&#10;&#10;    private String currentEspecieFilter = null; // null = todas&#10;    private String currentSearchQuery = null; // Para búsqueda por texto&#10;    private int currentPage = 1;&#10;    private final int ITEMS_PER_PAGE = 6;&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;&#10;        // Usar el nuevo layout dinámico&#10;        View root = inflater.inflate(R.layout.fragment_search_dynamic, container, false);&#10;&#10;        // Inicializar vistas&#10;        recyclerPets = root.findViewById(R.id.recycler_pets);&#10;        progressLoading = root.findViewById(R.id.progress_loading);&#10;        emptyState = root.findViewById(R.id.empty_state);&#10;        tvResultsCount = root.findViewById(R.id.tv_results_count);&#10;        searchInput = root.findViewById(R.id.search_input);&#10;&#10;        // Configurar RecyclerView con Grid de 2 columnas&#10;        androidx.recyclerview.widget.GridLayoutManager layoutManager =&#10;            new androidx.recyclerview.widget.GridLayoutManager(getContext(), 2);&#10;        recyclerPets.setLayoutManager(layoutManager);&#10;&#10;        // Inicializar adapter&#10;        petsAdapter = new PetsAdapter(this::onPetClick);&#10;        recyclerPets.setAdapter(petsAdapter);&#10;&#10;        // Configurar campo de búsqueda&#10;        setupSearchInput();&#10;&#10;        // Configurar botones de categorías&#10;        setupCategoryButtons(root);&#10;&#10;        // Cargar mascotas desde la API&#10;        loadPetsFromApi();&#10;&#10;        return root;&#10;    }&#10;&#10;    /**&#10;     * Configurar campo de búsqueda con filtrado al presionar Enter&#10;     */&#10;    private void setupSearchInput() {&#10;        // Filtrar al presionar Enter/Search&#10;        searchInput.setOnEditorActionListener((v, actionId, event) -&gt; {&#10;            if (actionId == android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH) {&#10;                String query = searchInput.getText().toString().trim().toLowerCase();&#10;&#10;                if (query.isEmpty()) {&#10;                    // Si está vacío, limpiar búsqueda&#10;                    currentSearchQuery = null;&#10;                    currentEspecieFilter = null;&#10;                    currentPage = 1;&#10;                    loadPetsFromApi();&#10;                } else {&#10;                    // Filtrar por query&#10;                    currentSearchQuery = query;&#10;                    currentPage = 1;&#10;                    filterBySearchQuery(query);&#10;                }&#10;&#10;                // Ocultar teclado&#10;                android.view.inputmethod.InputMethodManager imm =&#10;                    (android.view.inputmethod.InputMethodManager) requireContext().getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#10;                if (imm != null) {&#10;                    imm.hideSoftInputFromWindow(searchInput.getWindowToken(), 0);&#10;                }&#10;&#10;                return true;&#10;            }&#10;            return false;&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Filtrar mascotas según la búsqueda BÁSICA&#10;     * Soporta: especie, raza, edad (número), sexo&#10;     */&#10;    private void filterBySearchQuery(String query) {&#10;        // Limpiar filtros previos&#10;        currentEspecieFilter = null;&#10;        String edadFilter = null;&#10;        String sexoFilter = null;&#10;        String razaFilter = null;&#10;&#10;        // 1. DETECTAR SI ES UN NÚMERO (EDAD EXACTA)&#10;        if (query.matches(&quot;\\d+&quot;)) {&#10;            edadFilter = query;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por edad exacta: &quot; + edadFilter);&#10;        }&#10;        // 2. DETECTAR SEXO&#10;        else if (query.contains(&quot;macho&quot;)) {&#10;            sexoFilter = &quot;Macho&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por sexo: Macho&quot;);&#10;        } else if (query.contains(&quot;hembra&quot;)) {&#10;            sexoFilter = &quot;Hembra&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por sexo: Hembra&quot;);&#10;        }&#10;        // 3. DETECTAR RAZAS COMUNES&#10;        else if (query.contains(&quot;labrador&quot;)) {&#10;            razaFilter = &quot;Labrador&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Labrador&quot;);&#10;        } else if (query.contains(&quot;golden&quot;)) {&#10;            razaFilter = &quot;Golden&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Golden&quot;);&#10;        } else if (query.contains(&quot;bulldog&quot;)) {&#10;            razaFilter = &quot;Bulldog&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Bulldog&quot;);&#10;        } else if (query.contains(&quot;beagle&quot;)) {&#10;            razaFilter = &quot;Beagle&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Beagle&quot;);&#10;        } else if (query.contains(&quot;pastor&quot;)) {&#10;            razaFilter = &quot;Pastor&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Pastor&quot;);&#10;        } else if (query.contains(&quot;husky&quot;)) {&#10;            razaFilter = &quot;Husky&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Husky&quot;);&#10;        } else if (query.contains(&quot;siames&quot;) || query.contains(&quot;siamés&quot;)) {&#10;            razaFilter = &quot;Siamés&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Siamés&quot;);&#10;        } else if (query.contains(&quot;persa&quot;)) {&#10;            razaFilter = &quot;Persa&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Persa&quot;);&#10;        } else if (query.contains(&quot;mestizo&quot;)) {&#10;            razaFilter = &quot;Mestizo&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Mestizo&quot;);&#10;        }&#10;        // 4. DETECTAR ESPECIE (última prioridad)&#10;        else if (query.contains(&quot;perro&quot;)) {&#10;            currentEspecieFilter = &quot;Perro&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Perro&quot;);&#10;        } else if (query.contains(&quot;gato&quot;)) {&#10;            currentEspecieFilter = &quot;Gato&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Gato&quot;);&#10;        } else if (query.contains(&quot;ave&quot;)) {&#10;            currentEspecieFilter = &quot;Ave&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Ave&quot;);&#10;        } else if (query.contains(&quot;conejo&quot;)) {&#10;            currentEspecieFilter = &quot;Conejo&quot;;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Conejo&quot;);&#10;        }&#10;        // 5. Si no coincide con nada&#10;        else {&#10;            Toast.makeText(getContext(),&#10;                &quot;Búsqueda: '&quot; + query + &quot;'. Intenta: perro, labrador, 2, macho&quot;,&#10;                Toast.LENGTH_SHORT).show();&#10;        }&#10;&#10;        // Cargar con los filtros detectados&#10;        loadPetsFromApiWithFilters(edadFilter, sexoFilter, razaFilter);&#10;    }&#10;&#10;    /**&#10;     * Configurar botones de categorías (Perro, Gato, Ave, Conejo)&#10;     */&#10;    private void setupCategoryButtons(View root) {&#10;        root.findViewById(R.id.btn_categoria_perro).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Perro&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;&#10;        root.findViewById(R.id.btn_categoria_gato).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Gato&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;&#10;        root.findViewById(R.id.btn_categoria_ave).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Ave&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;&#10;        root.findViewById(R.id.btn_categoria_conejo).setOnClickListener(v -&gt; {&#10;            currentEspecieFilter = &quot;Conejo&quot;;&#10;            currentSearchQuery = null;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#10;            currentPage = 1;&#10;            loadPetsFromApi();&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Cargar mascotas desde la API&#10;     */&#10;    private void loadPetsFromApi() {&#10;        loadPetsFromApiWithFilters(null, null, null);&#10;    }&#10;&#10;    /**&#10;     * Cargar mascotas desde la API con filtros básicos&#10;     * @param edad Edad exacta (número como String: &quot;2&quot;, &quot;5&quot;, etc.)&#10;     * @param sexo Sexo (&quot;Macho&quot; o &quot;Hembra&quot;)&#10;     * @param raza Raza (búsqueda parcial: &quot;Labrador&quot;, &quot;Golden&quot;, etc.)&#10;     */&#10;    private void loadPetsFromApiWithFilters(String edad, String sexo, String raza) {&#10;        // Mostrar loading&#10;        progressLoading.setVisibility(View.VISIBLE);&#10;        recyclerPets.setVisibility(View.GONE);&#10;        emptyState.setVisibility(View.GONE);&#10;&#10;        // Construir filtros&#10;        java.util.Map&lt;String, String&gt; filters = new java.util.HashMap&lt;&gt;();&#10;&#10;        // Filtro de especie (de los botones de categoría)&#10;        if (currentEspecieFilter != null) {&#10;            filters.put(&quot;especie&quot;, currentEspecieFilter);&#10;        }&#10;&#10;        // Filtro de edad exacta (número)&#10;        if (edad != null) {&#10;            filters.put(&quot;edad&quot;, edad);&#10;        }&#10;&#10;        // Filtro de sexo&#10;        if (sexo != null) {&#10;            filters.put(&quot;sexo&quot;, sexo);&#10;        }&#10;&#10;        // Filtro de raza (búsqueda parcial)&#10;        if (raza != null) {&#10;            filters.put(&quot;raza&quot;, raza);&#10;        }&#10;&#10;        // Paginación&#10;        filters.put(&quot;page&quot;, String.valueOf(currentPage));&#10;        filters.put(&quot;limit&quot;, String.valueOf(ITEMS_PER_PAGE));&#10;&#10;        android.util.Log.d(&quot;SearchFragment&quot;, &quot; Llamando API - Filtros: &quot; + filters);&#10;&#10;        // Llamar a la API&#10;        com.example.adoptmev5.api.PetsApiService.getPets(filters, new com.example.adoptmev5.api.PetsApiService.PetsCallback() {&#10;            @Override&#10;            public void onSuccess(java.util.List&lt;com.example.adoptmev5.models.Pet&gt; pets, org.json.JSONObject pagination) {&#10;                if (getActivity() == null) return;&#10;&#10;                getActivity().runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;&#10;                    if (pets == null || pets.isEmpty()) {&#10;                        // Mostrar estado vacío&#10;                        recyclerPets.setVisibility(View.GONE);&#10;                        emptyState.setVisibility(View.VISIBLE);&#10;                        tvResultsCount.setText(&quot;0 resultados&quot;);&#10;                        android.util.Log.w(&quot;SearchFragment&quot;, &quot;⚠️ Sin resultados&quot;);&#10;                    } else {&#10;                        // Mostrar mascotas&#10;                        recyclerPets.setVisibility(View.VISIBLE);&#10;                        emptyState.setVisibility(View.GONE);&#10;                        petsAdapter.setPets(pets);&#10;                        tvResultsCount.setText(pets.size() + &quot; resultados&quot;);&#10;&#10;                        android.util.Log.d(&quot;SearchFragment&quot;, &quot;✅ Cargadas &quot; + pets.size() + &quot; mascotas&quot;);&#10;                    }&#10;                });&#10;            }&#10;&#10;            @Override&#10;            public void onError(String error) {&#10;                if (getActivity() == null) return;&#10;&#10;                getActivity().runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;                    recyclerPets.setVisibility(View.GONE);&#10;                    emptyState.setVisibility(View.VISIBLE);&#10;&#10;                    Toast.makeText(getContext(),&#10;                        &quot;Error: &quot; + error,&#10;                        Toast.LENGTH_LONG).show();&#10;&#10;                    android.util.Log.e(&quot;SearchFragment&quot;, &quot;❌ Error API: &quot; + error);&#10;                });&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Manejar click en una mascota&#10;     */&#10;    private void onPetClick(com.example.adoptmev5.models.Pet pet) {&#10;        Intent intent = new Intent(getContext(), PetDetailActivity.class);&#10;        intent.putExtra(&quot;pet_id&quot;, pet.getId());&#10;        intent.putExtra(&quot;pet_name&quot;, pet.getName());&#10;        intent.putExtra(&quot;pet_description&quot;, pet.getDescripcion());&#10;        intent.putExtra(&quot;pet_age&quot;, pet.getEdad() + &quot; años&quot;);&#10;        intent.putExtra(&quot;pet_especie&quot;, pet.getEspecie());&#10;        intent.putExtra(&quot;pet_raza&quot;, pet.getRaza());&#10;        intent.putExtra(&quot;pet_tamano&quot;, pet.getTamano());&#10;        intent.putExtra(&quot;pet_sexo&quot;, pet.getSexo());&#10;        intent.putExtra(&quot;pet_distrito&quot;, pet.getDistrito());&#10;        intent.putExtra(&quot;pet_foto_url&quot;, pet.getFotoUrl());&#10;        intent.putExtra(&quot;pet_is_urgent&quot;, pet.isUrgent());&#10;        intent.putExtra(&quot;pet_weight&quot;, &quot;N/A&quot;);&#10;        intent.putExtra(&quot;pet_height&quot;, &quot;N/A&quot;);&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onResume() {&#10;        super.onResume();&#10;        // Recargar mascotas al volver (por si cambiaron filtros)&#10;        if (petsAdapter != null) {&#10;            loadPetsFromApi();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onDestroyView() {&#10;        super.onDestroyView();&#10;        binding = null;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#13;&#10;&#13;&#10;import android.content.Intent;&#13;&#10;import android.os.Bundle;&#13;&#10;import android.view.LayoutInflater;&#13;&#10;import android.view.View;&#13;&#10;import android.view.ViewGroup;&#13;&#10;import android.widget.EditText;&#13;&#10;import android.widget.ProgressBar;&#13;&#10;import android.widget.TextView;&#13;&#10;import android.widget.Toast;&#13;&#10;&#13;&#10;import androidx.annotation.NonNull;&#13;&#10;import androidx.fragment.app.Fragment;&#13;&#10;import androidx.recyclerview.widget.RecyclerView;&#13;&#10;&#13;&#10;import com.example.adoptmev5.R;&#13;&#10;import com.example.adoptmev5.databinding.FragmentSearchBinding;&#13;&#10;&#13;&#10;public class SearchFragment extends Fragment {&#13;&#10;&#13;&#10;    private FragmentSearchBinding binding;&#13;&#10;&#13;&#10;    // Variables para el RecyclerView y la API&#13;&#10;    private RecyclerView recyclerPets;&#13;&#10;    private PetsAdapter petsAdapter;&#13;&#10;    private ProgressBar progressLoading;&#13;&#10;    private View emptyState;&#13;&#10;    private TextView tvResultsCount;&#13;&#10;    private EditText searchInput;&#13;&#10;&#13;&#10;    private String currentEspecieFilter = null; // null = todas&#13;&#10;    private String currentSearchQuery = null; // Para búsqueda por texto&#13;&#10;    private int currentPage = 1;&#13;&#10;    private final int ITEMS_PER_PAGE = 6;&#13;&#10;&#13;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#13;&#10;                             ViewGroup container, Bundle savedInstanceState) {&#13;&#10;&#13;&#10;        // Usar el nuevo layout dinámico&#13;&#10;        View root = inflater.inflate(R.layout.fragment_search_dynamic, container, false);&#13;&#10;&#13;&#10;        // Inicializar vistas&#13;&#10;        recyclerPets = root.findViewById(R.id.recycler_pets);&#13;&#10;        progressLoading = root.findViewById(R.id.progress_loading);&#13;&#10;        emptyState = root.findViewById(R.id.empty_state);&#13;&#10;        tvResultsCount = root.findViewById(R.id.tv_results_count);&#13;&#10;        searchInput = root.findViewById(R.id.search_input);&#13;&#10;&#13;&#10;        // Configurar RecyclerView con Grid de 2 columnas&#13;&#10;        androidx.recyclerview.widget.GridLayoutManager layoutManager =&#13;&#10;            new androidx.recyclerview.widget.GridLayoutManager(getContext(), 2);&#13;&#10;        recyclerPets.setLayoutManager(layoutManager);&#13;&#10;&#13;&#10;        // Inicializar adapter&#13;&#10;        petsAdapter = new PetsAdapter(this::onPetClick);&#13;&#10;        recyclerPets.setAdapter(petsAdapter);&#13;&#10;&#13;&#10;        // Configurar campo de búsqueda&#13;&#10;        setupSearchInput();&#13;&#10;&#13;&#10;        // Configurar botones de categorías&#13;&#10;        setupCategoryButtons(root);&#13;&#10;&#13;&#10;        // Cargar mascotas desde la API&#13;&#10;        loadPetsFromApi();&#13;&#10;&#13;&#10;        return root;&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Configurar campo de búsqueda con filtrado al presionar Enter&#13;&#10;     */&#13;&#10;    private void setupSearchInput() {&#13;&#10;        // Filtrar al presionar Enter/Search&#13;&#10;        searchInput.setOnEditorActionListener((v, actionId, event) -&gt; {&#13;&#10;            if (actionId == android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH) {&#13;&#10;                String query = searchInput.getText().toString().trim().toLowerCase();&#13;&#10;&#13;&#10;                if (query.isEmpty()) {&#13;&#10;                    // Si está vacío, limpiar búsqueda&#13;&#10;                    currentSearchQuery = null;&#13;&#10;                    currentEspecieFilter = null;&#13;&#10;                    currentPage = 1;&#13;&#10;                    loadPetsFromApi();&#13;&#10;                } else {&#13;&#10;                    // Filtrar por query&#13;&#10;                    currentSearchQuery = query;&#13;&#10;                    currentPage = 1;&#13;&#10;                    filterBySearchQuery(query);&#13;&#10;                }&#13;&#10;&#13;&#10;                // Ocultar teclado&#13;&#10;                android.view.inputmethod.InputMethodManager imm =&#13;&#10;                    (android.view.inputmethod.InputMethodManager) requireContext().getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#13;&#10;                if (imm != null) {&#13;&#10;                    imm.hideSoftInputFromWindow(searchInput.getWindowToken(), 0);&#13;&#10;                }&#13;&#10;&#13;&#10;                return true;&#13;&#10;            }&#13;&#10;            return false;&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Filtrar mascotas según la búsqueda BÁSICA&#13;&#10;     * Soporta: especie, raza, edad (número), sexo&#13;&#10;     */&#13;&#10;    private void filterBySearchQuery(String query) {&#13;&#10;        // Limpiar filtros previos&#13;&#10;        currentEspecieFilter = null;&#13;&#10;        String edadFilter = null;&#13;&#10;        String sexoFilter = null;&#13;&#10;        String razaFilter = null;&#13;&#10;&#13;&#10;        // 1. DETECTAR SI ES UN NÚMERO (EDAD EXACTA)&#13;&#10;        if (query.matches(&quot;\\d+&quot;)) {&#13;&#10;            edadFilter = query;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por edad exacta: &quot; + edadFilter);&#13;&#10;        }&#13;&#10;        // 2. DETECTAR SEXO&#13;&#10;        else if (query.contains(&quot;macho&quot;)) {&#13;&#10;            sexoFilter = &quot;Macho&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por sexo: Macho&quot;);&#13;&#10;        } else if (query.contains(&quot;hembra&quot;)) {&#13;&#10;            sexoFilter = &quot;Hembra&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por sexo: Hembra&quot;);&#13;&#10;        }&#13;&#10;        // 3. DETECTAR RAZAS COMUNES&#13;&#10;        else if (query.contains(&quot;labrador&quot;)) {&#13;&#10;            razaFilter = &quot;Labrador&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Labrador&quot;);&#13;&#10;        } else if (query.contains(&quot;golden&quot;)) {&#13;&#10;            razaFilter = &quot;Golden&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Golden&quot;);&#13;&#10;        } else if (query.contains(&quot;bulldog&quot;)) {&#13;&#10;            razaFilter = &quot;Bulldog&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Bulldog&quot;);&#13;&#10;        } else if (query.contains(&quot;beagle&quot;)) {&#13;&#10;            razaFilter = &quot;Beagle&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Beagle&quot;);&#13;&#10;        } else if (query.contains(&quot;pastor&quot;)) {&#13;&#10;            razaFilter = &quot;Pastor&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Pastor&quot;);&#13;&#10;        } else if (query.contains(&quot;husky&quot;)) {&#13;&#10;            razaFilter = &quot;Husky&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Husky&quot;);&#13;&#10;        } else if (query.contains(&quot;siames&quot;) || query.contains(&quot;siamés&quot;)) {&#13;&#10;            razaFilter = &quot;Siamés&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Siamés&quot;);&#13;&#10;        } else if (query.contains(&quot;persa&quot;)) {&#13;&#10;            razaFilter = &quot;Persa&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Persa&quot;);&#13;&#10;        } else if (query.contains(&quot;mestizo&quot;)) {&#13;&#10;            razaFilter = &quot;Mestizo&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por raza: Mestizo&quot;);&#13;&#10;        }&#13;&#10;        // 4. DETECTAR ESPECIE (última prioridad)&#13;&#10;        else if (query.contains(&quot;perro&quot;)) {&#13;&#10;            currentEspecieFilter = &quot;Perro&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Perro&quot;);&#13;&#10;        } else if (query.contains(&quot;gato&quot;)) {&#13;&#10;            currentEspecieFilter = &quot;Gato&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Gato&quot;);&#13;&#10;        } else if (query.contains(&quot;ave&quot;)) {&#13;&#10;            currentEspecieFilter = &quot;Ave&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Ave&quot;);&#13;&#10;        } else if (query.contains(&quot;conejo&quot;)) {&#13;&#10;            currentEspecieFilter = &quot;Conejo&quot;;&#13;&#10;            android.util.Log.d(&quot;SearchFragment&quot;, &quot; Filtrando por especie: Conejo&quot;);&#13;&#10;        }&#13;&#10;        // 5. Si no coincide con nada&#13;&#10;        else {&#13;&#10;            Toast.makeText(getContext(),&#13;&#10;                &quot;Búsqueda: '&quot; + query + &quot;'. Intenta: perro, labrador, 2, macho&quot;,&#13;&#10;                Toast.LENGTH_SHORT).show();&#13;&#10;        }&#13;&#10;&#13;&#10;        // Cargar con los filtros detectados&#13;&#10;        loadPetsFromApiWithFilters(edadFilter, sexoFilter, razaFilter);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Configurar botones de categorías (Perro, Gato, Ave, Conejo)&#13;&#10;     */&#13;&#10;    private void setupCategoryButtons(View root) {&#13;&#10;        root.findViewById(R.id.btn_categoria_perro).setOnClickListener(v -&gt; {&#13;&#10;            currentEspecieFilter = &quot;Perro&quot;;&#13;&#10;            currentSearchQuery = null;&#13;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#13;&#10;            currentPage = 1;&#13;&#10;            loadPetsFromApi();&#13;&#10;        });&#13;&#10;&#13;&#10;        root.findViewById(R.id.btn_categoria_gato).setOnClickListener(v -&gt; {&#13;&#10;            currentEspecieFilter = &quot;Gato&quot;;&#13;&#10;            currentSearchQuery = null;&#13;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#13;&#10;            currentPage = 1;&#13;&#10;            loadPetsFromApi();&#13;&#10;        });&#13;&#10;&#13;&#10;        root.findViewById(R.id.btn_categoria_ave).setOnClickListener(v -&gt; {&#13;&#10;            currentEspecieFilter = &quot;Ave&quot;;&#13;&#10;            currentSearchQuery = null;&#13;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#13;&#10;            currentPage = 1;&#13;&#10;            loadPetsFromApi();&#13;&#10;        });&#13;&#10;&#13;&#10;        root.findViewById(R.id.btn_categoria_conejo).setOnClickListener(v -&gt; {&#13;&#10;            currentEspecieFilter = &quot;Conejo&quot;;&#13;&#10;            currentSearchQuery = null;&#13;&#10;            searchInput.setText(&quot;&quot;); // Limpiar búsqueda&#13;&#10;            currentPage = 1;&#13;&#10;            loadPetsFromApi();&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Cargar mascotas desde la API&#13;&#10;     */&#13;&#10;    private void loadPetsFromApi() {&#13;&#10;        loadPetsFromApiWithFilters(null, null, null);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Cargar mascotas desde la API con filtros básicos&#13;&#10;     * @param edad Edad exacta (número como String: &quot;2&quot;, &quot;5&quot;, etc.)&#13;&#10;     * @param sexo Sexo (&quot;Macho&quot; o &quot;Hembra&quot;)&#13;&#10;     * @param raza Raza (búsqueda parcial: &quot;Labrador&quot;, &quot;Golden&quot;, etc.)&#13;&#10;     */&#13;&#10;    private void loadPetsFromApiWithFilters(String edad, String sexo, String raza) {&#13;&#10;        // Mostrar loading&#13;&#10;        progressLoading.setVisibility(View.VISIBLE);&#13;&#10;        recyclerPets.setVisibility(View.GONE);&#13;&#10;        emptyState.setVisibility(View.GONE);&#13;&#10;&#13;&#10;        // Construir filtros&#13;&#10;        java.util.Map&lt;String, String&gt; filters = new java.util.HashMap&lt;&gt;();&#13;&#10;&#13;&#10;        // Filtro de especie (de los botones de categoría)&#13;&#10;        if (currentEspecieFilter != null) {&#13;&#10;            filters.put(&quot;especie&quot;, currentEspecieFilter);&#13;&#10;        }&#13;&#10;&#13;&#10;        // Filtro de edad exacta (número)&#13;&#10;        if (edad != null) {&#13;&#10;            filters.put(&quot;edad&quot;, edad);&#13;&#10;        }&#13;&#10;&#13;&#10;        // Filtro de sexo&#13;&#10;        if (sexo != null) {&#13;&#10;            filters.put(&quot;sexo&quot;, sexo);&#13;&#10;        }&#13;&#10;&#13;&#10;        // Filtro de raza (búsqueda parcial)&#13;&#10;        if (raza != null) {&#13;&#10;            filters.put(&quot;raza&quot;, raza);&#13;&#10;        }&#13;&#10;&#13;&#10;        // Paginación&#13;&#10;        filters.put(&quot;page&quot;, String.valueOf(currentPage));&#13;&#10;        filters.put(&quot;limit&quot;, String.valueOf(ITEMS_PER_PAGE));&#13;&#10;&#13;&#10;        android.util.Log.d(&quot;SearchFragment&quot;, &quot; Llamando API - Filtros: &quot; + filters);&#13;&#10;&#13;&#10;        // Llamar a la API&#13;&#10;        com.example.adoptmev5.api.PetsApiService.getPets(filters, new com.example.adoptmev5.api.PetsApiService.PetsCallback() {&#13;&#10;            @Override&#13;&#10;            public void onSuccess(java.util.List&lt;com.example.adoptmev5.models.Pet&gt; pets, org.json.JSONObject pagination) {&#13;&#10;                if (getActivity() == null) return;&#13;&#10;&#13;&#10;                getActivity().runOnUiThread(() -&gt; {&#13;&#10;                    progressLoading.setVisibility(View.GONE);&#13;&#10;&#13;&#10;                    if (pets == null || pets.isEmpty()) {&#13;&#10;                        // Mostrar estado vacío&#13;&#10;                        recyclerPets.setVisibility(View.GONE);&#13;&#10;                        emptyState.setVisibility(View.VISIBLE);&#13;&#10;                        tvResultsCount.setText(&quot;0 resultados&quot;);&#13;&#10;                        android.util.Log.w(&quot;SearchFragment&quot;, &quot;⚠️ Sin resultados&quot;);&#13;&#10;                    } else {&#13;&#10;                        // Mostrar mascotas&#13;&#10;                        recyclerPets.setVisibility(View.VISIBLE);&#13;&#10;                        emptyState.setVisibility(View.GONE);&#13;&#10;                        petsAdapter.setPets(pets);&#13;&#10;                        tvResultsCount.setText(pets.size() + &quot; resultados&quot;);&#13;&#10;&#13;&#10;                        android.util.Log.d(&quot;SearchFragment&quot;, &quot;✅ Cargadas &quot; + pets.size() + &quot; mascotas&quot;);&#13;&#10;                    }&#13;&#10;                });&#13;&#10;            }&#13;&#10;&#13;&#10;            @Override&#13;&#10;            public void onError(String error) {&#13;&#10;                if (getActivity() == null) return;&#13;&#10;&#13;&#10;                getActivity().runOnUiThread(() -&gt; {&#13;&#10;                    progressLoading.setVisibility(View.GONE);&#13;&#10;                    recyclerPets.setVisibility(View.GONE);&#13;&#10;                    emptyState.setVisibility(View.VISIBLE);&#13;&#10;&#13;&#10;                    Toast.makeText(getContext(),&#13;&#10;                        &quot;Error: &quot; + error,&#13;&#10;                        Toast.LENGTH_LONG).show();&#13;&#10;&#13;&#10;                    android.util.Log.e(&quot;SearchFragment&quot;, &quot;❌ Error API: &quot; + error);&#13;&#10;                });&#13;&#10;            }&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#10;     * Manejar click en una mascota&#10;     */&#10;    private void onPetClick(com.example.adoptmev5.models.Pet pet) {&#10;        Intent intent = new Intent(getContext(), PetDetailActivity.class);&#10;        &#10;        // Asegurar que pet_id se pase como String&#10;        String petId = pet.getId();&#10;        android.util.Log.d(&quot;SearchFragment&quot;, &quot;Enviando pet_id: &quot; + petId);&#10;        &#10;        intent.putExtra(&quot;pet_id&quot;, petId);&#10;        intent.putExtra(&quot;pet_name&quot;, pet.getName());&#10;        intent.putExtra(&quot;pet_description&quot;, pet.getDescripcion());&#10;        intent.putExtra(&quot;pet_age&quot;, pet.getEdad() + &quot; años&quot;);&#10;        intent.putExtra(&quot;pet_especie&quot;, pet.getEspecie());&#10;        intent.putExtra(&quot;pet_raza&quot;, pet.getRaza());&#10;        intent.putExtra(&quot;pet_tamano&quot;, pet.getTamano());&#10;        intent.putExtra(&quot;pet_sexo&quot;, pet.getSexo());&#10;        intent.putExtra(&quot;pet_distrito&quot;, pet.getDistrito());&#10;        intent.putExtra(&quot;pet_foto_url&quot;, pet.getFotoUrl());&#10;        intent.putExtra(&quot;pet_is_urgent&quot;, pet.isUrgent());&#10;        intent.putExtra(&quot;pet_weight&quot;, &quot;N/A&quot;);&#10;        intent.putExtra(&quot;pet_height&quot;, &quot;N/A&quot;);&#10;        startActivity(intent);&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void onResume() {&#13;&#10;        super.onResume();&#13;&#10;        // Recargar mascotas al volver (por si cambiaron filtros)&#13;&#10;        if (petsAdapter != null) {&#13;&#10;            loadPetsFromApi();&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void onDestroyView() {&#13;&#10;        super.onDestroyView();&#13;&#10;        binding = null;&#13;&#10;    }&#13;&#10;}&#13;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_arrow_back.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_arrow_back.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_adoption_form.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_adoption_form.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;!-- Header --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_form_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Formulario de Adopción&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_step_indicator&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Paso 1 de 4&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progress_bar&quot;&#10;            style=&quot;?android:attr/progressBarStyleHorizontal&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:progress=&quot;25&quot;&#10;            android:max=&quot;100&quot;&#10;            android:progressTint=&quot;#FF6F61&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Step 1: Información Personal --&gt;&#10;        &lt;include layout=&quot;@layout/step1_personal_info&quot; /&gt;&#10;&#10;        &lt;!-- Step 2: Información del Hogar --&gt;&#10;        &lt;include layout=&quot;@layout/step2_home_info&quot; /&gt;&#10;&#10;        &lt;!-- Step 3: Experiencia con Mascotas --&gt;&#10;        &lt;include layout=&quot;@layout/step3_pet_experience&quot; /&gt;&#10;&#10;        &lt;!-- Step 4: Motivación y Compromiso --&gt;&#10;        &lt;include layout=&quot;@layout/step4_motivation&quot; /&gt;&#10;&#10;        &lt;!-- Botones de Navegación --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&#10;            android:weightSum=&quot;2&quot;&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_previous&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Anterior&quot;&#10;                android:backgroundTint=&quot;#999999&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:visibility=&quot;gone&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_next&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Siguiente&quot;&#10;                android:backgroundTint=&quot;#FF6F61&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_submit&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Enviar Solicitud&quot;&#10;                android:backgroundTint=&quot;#4CAF50&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:visibility=&quot;gone&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;!-- Título --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Editar Perfil&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textColor=&quot;#3A538D&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_gravity=&quot;center_horizontal&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Sección: Datos Personales --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;DATOS PERSONALES&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Nombres --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Nombres&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_nombres&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;textPersonName&quot;&#10;                android:hint=&quot;Ingresa tus nombres&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Apellidos --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Apellidos&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_apellidos&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;textPersonName&quot;&#10;                android:hint=&quot;Ingresa tus apellidos&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Teléfono --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Teléfono&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_telefono&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;phone&quot;&#10;                android:hint=&quot;987654321&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot;&#10;                android:maxLength=&quot;9&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Distrito --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;20dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Distrito&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_distrito&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;text&quot;&#10;                android:hint=&quot;Ej: San Isidro, Miraflores&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Sección: Preferencias --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;PREFERENCIAS DE MASCOTAS&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Especie Preferida --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Especie Preferida&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_especie&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Tamaño Preferido --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tamaño Preferido&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_tamano&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Edad Preferida --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Edad Preferida&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_edad&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Botón Guardar --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/button_save&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;52dp&quot;&#10;            android:text=&quot;GUARDAR CAMBIOS&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:backgroundTint=&quot;#3A538D&quot;&#10;            android:elevation=&quot;6dp&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Cancelar --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/button_cancel&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;CANCELAR&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:backgroundTint=&quot;#EEEEEE&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_profile.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.ui.menu.ProfileActivity&quot;&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F7FA&quot;&#10;    tools:context=&quot;.ui.menu.ProfileActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Header con foto de perfil --&gt;&#10;        &lt;RelativeLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;20dp&quot;&#10;            android:elevation=&quot;4dp&quot;&gt;&#10;&#10;            &lt;!-- Foto de perfil circular --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageView_profile_photo&quot;&#10;                android:layout_width=&quot;60dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_alignParentStart=&quot;true&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:src=&quot;@drawable/user1&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:contentDescription=&quot;Foto de perfil&quot; /&gt;&#10;&#10;            &lt;!-- Información del usuario --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/layout_user_info&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_toEndOf=&quot;@id/imageView_profile_photo&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textView_user_name&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Usuario AdoptMe&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textColor=&quot;#333333&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textView_profile_status&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Ver perfil completo&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;#999999&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Botón de editar (lápiz) --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageView_edit_profile&quot;&#10;                android:layout_width=&quot;40dp&quot;&#10;                android:layout_height=&quot;40dp&quot;&#10;                android:layout_alignParentEnd=&quot;true&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_edit&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Editar perfil&quot;&#10;                android:tint=&quot;#3A538D&quot; /&gt;&#10;&#10;        &lt;/RelativeLayout&gt;&#10;&#10;        &lt;!-- Lista de opciones del menú --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;!-- Test de Compatibilidad --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_compatibility&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_compass&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Test de compatibilidad&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Test de Compatibilidad&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Encuentra tu mascota ideal&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Preferencias --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_preferences&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_preferences&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Preferencias&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Preferencias&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Tipo de mascotas, ubicación y más&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Mi Perfil --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_my_profile&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_myplaces&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Mi perfil&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Mi Perfil&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Información personal y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:background=&quot;#F5F7FA&quot; /&gt;&#10;&#10;            &lt;!-- Configuración --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_settings&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_manage&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Configuración&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Configuración&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Notificaciones, privacidad y cuenta&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Ayuda y Soporte --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_help&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_help&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Ayuda&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Ayuda y Soporte&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Centro de ayuda y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Acerca de AdoptMe --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_about&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_info_details&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Acerca de&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Acerca de AdoptMe&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Versión 1.0 • Términos y privacidad&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:background=&quot;#F5F7FA&quot; /&gt;&#10;&#10;            &lt;!-- Cerrar Sesión --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_logout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_lock_power_off&quot;&#10;                    android:tint=&quot;#FF5252&quot;&#10;                    android:contentDescription=&quot;Cerrar sesión&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Cerrar Sesión&quot;&#10;                    android:textSize=&quot;15sp&quot;&#10;                    android:textColor=&quot;#FF5252&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&#10;                    android:layout_gravity=&quot;center_vertical&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;28dp&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Verificar cuenta&quot;&#10;        android:textSize=&quot;22sp&quot;&#10;        android:textColor=&quot;#3A538D&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_gravity=&quot;center_horizontal&quot;&#10;        android:layout_marginTop=&quot;20dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Ingresa el código de verificación enviado a tu correo&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textColor=&quot;#666666&quot;&#10;        android:layout_marginTop=&quot;12dp&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/editText_code&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:inputType=&quot;number&quot;&#10;        android:hint=&quot;Código (6 dígitos)&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;#FFFFFF&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_verify&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VERIFICAR&quot;&#10;        android:textColor=&quot;@android:color/white&quot;&#10;        android:backgroundTint=&quot;#3A538D&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_skip&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VOLVER AL LOGIN&quot;&#10;        android:layout_marginTop=&quot;12dp&quot;&#10;        android:backgroundTint=&quot;#CCCCCC&quot;&#10;        android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step1_personal_info.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step1_personal_info.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step1_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;visible&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Información Personal&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_nombres_completos&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Nombres Completos *&quot;&#10;            android:inputType=&quot;textPersonName&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_email&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Correo Electrónico *&quot;&#10;            android:inputType=&quot;textEmailAddress&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_telefono&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Teléfono *&quot;&#10;            android:inputType=&quot;phone&quot;&#10;            android:maxLength=&quot;9&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_fecha_nacimiento&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Fecha de Nacimiento (YYYY-MM-DD) *&quot;&#10;            android:focusable=&quot;false&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:inputType=&quot;none&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_direccion_completa&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Dirección Completa *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_ciudad&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Ciudad *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_distrito&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Distrito *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step2_home_info.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step2_home_info.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step2_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Información del Hogar&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Tipo de Vivienda *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/spinner_tipo_vivienda&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/rounded_box&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿El propietario acepta mascotas? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/spinner_propietario_acepta&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/rounded_box&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_miembros_familia&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Número de miembros en la familia *&quot;&#10;            android:inputType=&quot;number&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Hay niños en la familia? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_hay_ninos&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_ninos_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_ninos_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Hay alergias a mascotas en la familia? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_alergias_familia&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_alergias_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_alergias_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step3_pet_experience.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step3_pet_experience.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step3_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Experiencia con Mascotas&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Tienes otras mascotas actualmente? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_tiene_otras_mascotas&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_otras_mascotas_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_otras_mascotas_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_descripcion_otras_mascotas&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Si tienes otras mascotas, descríbelas (opcional)&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_experiencia_previa&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Experiencia previa con mascotas *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_tiempo_sola_mascota&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;¿Cuántas horas al día estará sola la mascota? *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Tienes veterinario de confianza? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_tiene_veterinario&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_veterinario_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_veterinario_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_presupuesto_mensual&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Presupuesto mensual para la mascota *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step4_motivation.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step4_motivation.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step4_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Motivación y Compromiso&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_motivacion_adopcion&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;¿Por qué quieres adoptar esta mascota? *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_conocimiento_raza&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;¿Qué sabes sobre esta raza/especie? *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Estás dispuesto a entrenar a la mascota? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_dispuesto_entrenar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_entrenar_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_entrenar_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_compromiso_largo_plazo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Compromiso a largo plazo con la mascota *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;* Campos requeridos&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textColor=&quot;#FF6F61&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/colors.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/colors.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;color name=&quot;purple_200&quot;&gt;#FFBB86FC&lt;/color&gt;&#10;    &lt;color name=&quot;purple_500&quot;&gt;#FF6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;purple_700&quot;&gt;#FF3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;teal_200&quot;&gt;#FF03DAC5&lt;/color&gt;&#10;    &lt;color name=&quot;teal_700&quot;&gt;#FF018786&lt;/color&gt;&#10;    &lt;color name=&quot;black&quot;&gt;#FF000000&lt;/color&gt;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;overlay_background&quot;&gt;#1A000000&lt;/color&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;color name=&quot;purple_200&quot;&gt;#FFBB86FC&lt;/color&gt;&#10;    &lt;color name=&quot;purple_500&quot;&gt;#FF6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;purple_700&quot;&gt;#FF3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;teal_200&quot;&gt;#FF03DAC5&lt;/color&gt;&#10;    &lt;color name=&quot;teal_700&quot;&gt;#FF018786&lt;/color&gt;&#10;    &lt;color name=&quot;black&quot;&gt;#FF000000&lt;/color&gt;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;overlay_background&quot;&gt;#1A000000&lt;/color&gt;&#10;    &#10;    &lt;!-- Colores de la aplicación --&gt;&#10;    &lt;color name=&quot;primary&quot;&gt;#FF6200EE&lt;/color&gt;&#10;    &lt;color name=&quot;primary_dark&quot;&gt;#FF3700B3&lt;/color&gt;&#10;    &lt;color name=&quot;accent&quot;&gt;#FF03DAC5&lt;/color&gt;&#10;&#10;&lt;/resources&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;network-security-config&gt;&#10;    &lt;!-- Permitir todo el tráfico HTTP para desarrollo --&gt;&#10;    &lt;base-config cleartextTrafficPermitted=&quot;true&quot;&gt;&#10;        &lt;trust-anchors&gt;&#10;            &lt;certificates src=&quot;system&quot; /&gt;&#10;        &lt;/trust-anchors&gt;&#10;    &lt;/base-config&gt;&#10;&lt;/network-security-config&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/rebuild_clean.bat">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/rebuild_clean.bat" />
              <option name="updatedContent" value="@echo off&#10;echo ========================================&#10;echo LIMPIEZA Y RECONSTRUCCION DE ADOPTME&#10;echo ========================================&#10;echo.&#10;&#10;echo [1/5] Eliminando carpetas build...&#10;if exist &quot;build&quot; rd /s /q &quot;build&quot;&#10;if exist &quot;app\build&quot; rd /s /q &quot;app\build&quot;&#10;if exist &quot;.gradle&quot; rd /s /q &quot;.gradle&quot;&#10;echo Carpetas build eliminadas.&#10;echo.&#10;&#10;echo [2/5] Ejecutando gradlew clean...&#10;call gradlew.bat clean&#10;echo.&#10;&#10;echo [3/5] Invalidando cache de Gradle...&#10;call gradlew.bat --stop&#10;echo.&#10;&#10;echo [4/5] Reconstruyendo proyecto...&#10;call gradlew.bat assembleDebug&#10;echo.&#10;&#10;echo [5/5] COMPLETADO!&#10;echo.&#10;echo ========================================&#10;echo Ahora ejecuta la app desde Android Studio&#10;echo o usa: gradlew.bat installDebug&#10;echo ========================================&#10;pause&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>