<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;    android:allowBackup=&quot;true&quot;&#10;    android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;    android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;    android:icon=&quot;@mipmap/ic_launcher&quot;&#10;    android:label=&quot;@string/app_name&quot;&#10;    android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;    android:supportsRtl=&quot;true&quot;&#10;    android:theme=&quot;@style/Theme.AdoptMeV5&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;!-- Permiso necesario para peticiones de red --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AdoptMeV5&quot;&#10;        android:networkSecurityConfig=&quot;@xml/network_security_config&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Verify Activity --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.VerifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;&#10;    private Button buttonLogin;&#10;    private TextView textViewRegister;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Referencia al botón de login&#10;        buttonLogin = findViewById(R.id.button_login);&#10;        // Referencia al texto &quot;Regístrate&quot;&#10;        textViewRegister = findViewById(R.id.textView_register);&#10;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#10;        buttonLogin.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;            startActivity(intent);&#10;            finish(); // Opcional: cierra la actividad de login&#10;        });&#10;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;; // Cambia a la URL de tu API si no usas emulador&#10;&#10;    private Button buttonLogin;&#10;    private TextView textViewRegister;&#10;    private EditText editTextEmail;&#10;    private EditText editTextPassword;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Referencia al botón de login&#10;        buttonLogin = findViewById(R.id.button_login);&#10;        // Referencia al texto &quot;Regístrate&quot;&#10;        textViewRegister = findViewById(R.id.textView_register);&#10;&#10;        // Referencias a inputs&#10;        editTextEmail = findViewById(R.id.editText_email);&#10;        editTextPassword = findViewById(R.id.editText_password);&#10;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#10;        buttonLogin.setOnClickListener(v -&gt; attemptLogin());&#10;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void attemptLogin() {&#10;        final String email = editTextEmail.getText().toString().trim();&#10;        final String password = editTextPassword.getText().toString().trim();&#10;&#10;        if (email.isEmpty() || password.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa email y contraseña&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Petición en background&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;email&quot;, email);&#10;                body.put(&quot;password&quot;, password);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/login.php&quot;, body);&#10;                if (resp == null) {&#10;                    showToast(&quot;Error en la conexión&quot;);&#10;                    return;&#10;                }&#10;&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    String token = resp.optString(&quot;token&quot;, &quot;&quot;);&#10;                    JSONObject user = resp.optJSONObject(&quot;user&quot;);&#10;                    int userId = user != null ? user.optInt(&quot;id&quot;, -1) : -1;&#10;&#10;                    // Guardar token y user_id&#10;                    SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;                    prefs.edit().putString(&quot;token&quot;, token).putInt(&quot;user_id&quot;, userId).apply();&#10;&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(LoginActivity.this, &quot;Login exitoso&quot;, Toast.LENGTH_SHORT).show();&#10;                        Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;                        startActivity(intent);&#10;                        finish();&#10;                    });&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Credenciales inválidas&quot;);&#10;                    showToast(msg);&#10;                }&#10;&#10;            } catch (java.net.UnknownHostException e) {&#10;                e.printStackTrace();&#10;                showToast(&quot;Error: No se puede conectar al servidor. Verifica que tu API esté corriendo.&quot;);&#10;            } catch (java.io.IOException e) {&#10;                e.printStackTrace();&#10;                String errorMsg = e.getMessage();&#10;                if (errorMsg != null &amp;&amp; errorMsg.contains(&quot;Cleartext HTTP&quot;)) {&#10;                    showToast(&quot;Error: HTTP no permitido. Desinstala la app del emulador e instala de nuevo.&quot;);&#10;                } else {&#10;                    showToast(&quot;Error de conexión: &quot; + errorMsg);&#10;                }&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                showToast(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject postJson(String urlString, JSONObject payload) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;&#10;    private void showToast(String msg) {&#10;        runOnUiThread(() -&gt; Toast.makeText(LoginActivity.this, msg, Toast.LENGTH_LONG).show());&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class VerifyActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextCode;&#10;    private Button buttonVerify, buttonSkip;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_verify);&#10;&#10;        editTextCode = findViewById(R.id.editText_code);&#10;        buttonVerify = findViewById(R.id.button_verify);&#10;        buttonSkip = findViewById(R.id.button_skip);&#10;&#10;        buttonVerify.setOnClickListener(v -&gt; attemptVerify());&#10;        buttonSkip.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void attemptVerify() {&#10;        final String code = editTextCode.getText().toString().trim();&#10;        if (code.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa el código&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        int userId = prefs.getInt(&quot;pending_user_id&quot;, -1);&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;No hay usuario pendiente&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                body.put(&quot;code&quot;, code);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/verify.php&quot;, body);&#10;                if (resp == null) {&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error en la conexión&quot;, Toast.LENGTH_SHORT).show());&#10;                    return;&#10;                }&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    // Verified&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(VerifyActivity.this, &quot;Cuenta verificada&quot;, Toast.LENGTH_LONG).show();&#10;                        startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;                        finish();&#10;                    });&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Código inválido&quot;);&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, msg, Toast.LENGTH_LONG).show());&#10;                }&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject postJson(String urlString, org.json.JSONObject payload) throws IOException, org.json.JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;28dp&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Verificar cuenta&quot;&#10;        android:textSize=&quot;22sp&quot;&#10;        android:textColor=&quot;#3A538D&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_gravity=&quot;center_horizontal&quot;&#10;        android:layout_marginTop=&quot;20dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Ingresa el código de verificación enviado a tu correo&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textColor=&quot;#666666&quot;&#10;        android:layout_marginTop=&quot;12dp&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/editText_code&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:inputType=&quot;number&quot;&#10;        android:hint=&quot;Código (6 dígitos)&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;#FFFFFF&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_verify&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VERIFICAR&quot;&#10;        android:textColor=&quot;@android:color/white&quot;&#10;        android:backgroundTint=&quot;#3A538D&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_skip&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VOLVER AL LOGIN&quot;&#10;        android:layout_marginTop=&quot;12dp&quot;&#10;        android:backgroundTint=&quot;#CCCCCC&quot;&#10;        android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;network-security-config&gt;&#10;    &lt;!-- Permitir todo el tráfico HTTP para desarrollo --&gt;&#10;    &lt;base-config cleartextTrafficPermitted=&quot;true&quot;&gt;&#10;        &lt;trust-anchors&gt;&#10;            &lt;certificates src=&quot;system&quot; /&gt;&#10;        &lt;/trust-anchors&gt;&#10;    &lt;/base-config&gt;&#10;&lt;/network-security-config&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/rebuild_clean.bat">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/rebuild_clean.bat" />
              <option name="updatedContent" value="@echo off&#10;echo ========================================&#10;echo LIMPIEZA Y RECONSTRUCCION DE ADOPTME&#10;echo ========================================&#10;echo.&#10;&#10;echo [1/5] Eliminando carpetas build...&#10;if exist &quot;build&quot; rd /s /q &quot;build&quot;&#10;if exist &quot;app\build&quot; rd /s /q &quot;app\build&quot;&#10;if exist &quot;.gradle&quot; rd /s /q &quot;.gradle&quot;&#10;echo Carpetas build eliminadas.&#10;echo.&#10;&#10;echo [2/5] Ejecutando gradlew clean...&#10;call gradlew.bat clean&#10;echo.&#10;&#10;echo [3/5] Invalidando cache de Gradle...&#10;call gradlew.bat --stop&#10;echo.&#10;&#10;echo [4/5] Reconstruyendo proyecto...&#10;call gradlew.bat assembleDebug&#10;echo.&#10;&#10;echo [5/5] COMPLETADO!&#10;echo.&#10;echo ========================================&#10;echo Ahora ejecuta la app desde Android Studio&#10;echo o usa: gradlew.bat installDebug&#10;echo ========================================&#10;pause&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>