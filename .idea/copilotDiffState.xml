<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.adoptmev5&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.adoptmev5&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(libs.lifecycle.livedata.ktx)&#10;    implementation(libs.lifecycle.viewmodel.ktx)&#10;    implementation(libs.navigation.fragment)&#10;    implementation(libs.navigation.ui)&#10;    implementation(libs.legacy.support.v4)&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
              <option name="updatedContent" value="plugins {&#13;&#10;    alias(libs.plugins.android.application)&#13;&#10;}&#13;&#10;&#13;&#10;android {&#13;&#10;    namespace = &quot;com.example.adoptmev5&quot;&#13;&#10;    compileSdk = 36&#13;&#10;&#13;&#10;    defaultConfig {&#13;&#10;        applicationId = &quot;com.example.adoptmev5&quot;&#13;&#10;        minSdk = 24&#13;&#10;        targetSdk = 36&#13;&#10;        versionCode = 1&#13;&#10;        versionName = &quot;1.0&quot;&#13;&#10;&#13;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#13;&#10;    }&#13;&#10;&#13;&#10;    buildTypes {&#13;&#10;        release {&#13;&#10;            isMinifyEnabled = false&#13;&#10;            proguardFiles(&#13;&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#13;&#10;                &quot;proguard-rules.pro&quot;&#13;&#10;            )&#13;&#10;        }&#13;&#10;    }&#13;&#10;    compileOptions {&#13;&#10;        sourceCompatibility = JavaVersion.VERSION_11&#13;&#10;        targetCompatibility = JavaVersion.VERSION_11&#13;&#10;    }&#13;&#10;    buildFeatures {&#13;&#10;        viewBinding = true&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;dependencies {&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(libs.lifecycle.livedata.ktx)&#10;    implementation(libs.lifecycle.viewmodel.ktx)&#10;    implementation(libs.navigation.fragment)&#10;    implementation(libs.navigation.ui)&#10;    implementation(libs.legacy.support.v4)&#10;    &#10;    // Glide para cargar imágenes desde URL&#10;    implementation(&quot;com.github.bumptech.glide:glide:4.16.0&quot;)&#10;    annotationProcessor(&quot;com.github.bumptech.glide:compiler:4.16.0&quot;)&#10;    &#10;    // Volley para peticiones HTTP&#10;    implementation(&quot;com.android.volley:volley:1.2.1&quot;)&#10;    &#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;!-- Permiso necesario para peticiones de red --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AdoptMeV5&quot;&#10;        android:networkSecurityConfig=&quot;@xml/network_security_config&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;        &lt;!-- Formulario de Adopción --&gt;&#10;        &lt;activity android:name=&quot;.ui.adoption.AdoptionFormActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;        &lt;!-- Notificaciones --&gt;&#10;        &lt;activity android:name=&quot;.ui.notifications.NotificationsActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.EditProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Verify Activity --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.VerifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;!-- Permiso necesario para peticiones de red --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.MyApp&quot;&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AdoptMeV5&quot;&#10;        android:networkSecurityConfig=&quot;@xml/network_security_config&quot;&#10;        android:usesCleartextTraffic=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- Pantalla inicial --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.SplashScreen&quot;&#10;        android:exported=&quot;true&quot;&gt;&#10;        &lt;intent-filter&gt;&#10;            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;        &lt;/intent-filter&gt;&#10;    &lt;/activity&gt;&#10;&#10;    &lt;!-- Actividad principal --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.MainActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Login y registro --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.LoginActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.RegisterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&#10;&#10;        &lt;activity android:name=&quot;.ui.search.PetDetailActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;        &lt;!-- Formulario de Adopción --&gt;&#10;        &lt;activity android:name=&quot;.ui.adoption.AdoptionFormActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;        &lt;!-- Notificaciones --&gt;&#10;        &lt;activity android:name=&quot;.ui.notifications.NotificationsActivity&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Navbar --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.NavbarActivity&quot;&#10;        android:exported=&quot;false&quot;&#10;        android:label=&quot;@string/title_activity_navbar&quot; /&gt;&#10;&#10;    &lt;!-- Menú de configuración --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ThemeActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.NotifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AccesibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.FilterActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.UbicationActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.CompatibilityActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.ProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.EditProfileActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.SettingsActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.HelpActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ui.menu.AboutActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Verify Activity --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.VerifyActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Chat Activities --&gt;&#10;    &lt;activity&#10;        android:name=&quot;.ChatActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.UserChatActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.AdminUsersListActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;    &lt;activity&#10;        android:name=&quot;.AdminChatActivity&quot;&#10;        android:exported=&quot;false&quot; /&gt;&#10;&#10;&lt;/application&gt;&#10;    &lt;/manifest&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/AdminChatActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/AdminChatActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ImageButton;&#10;import android.widget.ImageView;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.adapters.MessagesAdapter;&#10;import com.example.adoptmev5.api.MessagesAPI;&#10;import com.example.adoptmev5.models.Message;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class AdminChatActivity extends AppCompatActivity {&#10;&#10;    private RecyclerView messagesRecyclerView;&#10;    private EditText messageInput;&#10;    private ImageButton btnSend;&#10;    private ImageView btnBack;&#10;    private ProgressBar loadingProgress;&#10;    private TextView chatTitle;&#10;    private TextView chatSubtitle;&#10;&#10;    private MessagesAdapter messagesAdapter;&#10;    private List&lt;Message&gt; messagesList;&#10;    private int currentAdminId;&#10;    private int targetUserId;&#10;    private String targetUserName;&#10;&#10;    private Handler autoRefreshHandler;&#10;    private Runnable autoRefreshRunnable;&#10;    private static final int REFRESH_INTERVAL = 5000;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_user_chat);&#10;&#10;        // Obtener adminId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        currentAdminId = prefs.getInt(&quot;user_id&quot;, -1);&#10;        String role = prefs.getString(&quot;role&quot;, &quot;user&quot;);&#10;&#10;        // Obtener datos del usuario del Intent&#10;        targetUserId = getIntent().getIntExtra(&quot;user_id&quot;, -1);&#10;        targetUserName = getIntent().getStringExtra(&quot;user_name&quot;);&#10;&#10;        if (currentAdminId == -1 || !role.equals(&quot;admin&quot;) || targetUserId == -1) {&#10;            Toast.makeText(this, &quot;Error: Datos inválidos&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        initViews();&#10;        setupRecyclerView();&#10;        setupListeners();&#10;        loadMessages();&#10;        setupAutoRefresh();&#10;    }&#10;&#10;    private void initViews() {&#10;        messagesRecyclerView = findViewById(R.id.messages_recycler_view);&#10;        messageInput = findViewById(R.id.message_input);&#10;        btnSend = findViewById(R.id.btn_send);&#10;        btnBack = findViewById(R.id.btn_back);&#10;        loadingProgress = findViewById(R.id.loading_progress);&#10;        chatTitle = findViewById(R.id.chat_title);&#10;        chatSubtitle = findViewById(R.id.chat_subtitle);&#10;&#10;        // Configurar título con nombre del usuario&#10;        chatTitle.setText(targetUserName);&#10;        chatSubtitle.setText(&quot;Usuario&quot;);&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        messagesList = new ArrayList&lt;&gt;();&#10;        messagesAdapter = new MessagesAdapter(messagesList, currentAdminId);&#10;&#10;        LinearLayoutManager layoutManager = new LinearLayoutManager(this);&#10;        layoutManager.setStackFromEnd(true);&#10;        messagesRecyclerView.setLayoutManager(layoutManager);&#10;        messagesRecyclerView.setAdapter(messagesAdapter);&#10;    }&#10;&#10;    private void setupListeners() {&#10;        btnBack.setOnClickListener(v -&gt; finish());&#10;&#10;        btnSend.setOnClickListener(v -&gt; sendMessage());&#10;&#10;        messageInput.setOnEditorActionListener((v, actionId, event) -&gt; {&#10;            sendMessage();&#10;            return true;&#10;        });&#10;    }&#10;&#10;    private void loadMessages() {&#10;        loadingProgress.setVisibility(View.VISIBLE);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject response = MessagesAPI.getChatForAdmin(currentAdminId, targetUserId, 100);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    loadingProgress.setVisibility(View.GONE);&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        parseMessages(response);&#10;                    } else {&#10;                        String error = response != null ? response.optString(&quot;message&quot;, &quot;Error al cargar mensajes&quot;) : &quot;Error de conexión&quot;;&#10;                        Toast.makeText(this, error, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                });&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    loadingProgress.setVisibility(View.GONE);&#10;                    Toast.makeText(this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void parseMessages(JSONObject response) {&#10;        try {&#10;            JSONArray messagesArray = response.getJSONArray(&quot;messages&quot;);&#10;            List&lt;Message&gt; newMessages = new ArrayList&lt;&gt;();&#10;&#10;            for (int i = 0; i &lt; messagesArray.length(); i++) {&#10;                JSONObject msgObj = messagesArray.getJSONObject(i);&#10;                Message message = new Message();&#10;                message.setId(msgObj.optInt(&quot;id&quot;));&#10;                message.setSenderId(msgObj.optInt(&quot;sender_id&quot;));&#10;                message.setReceiverId(msgObj.optInt(&quot;receiver_id&quot;));&#10;                message.setMessage(msgObj.optString(&quot;message&quot;));&#10;                message.setIsRead(msgObj.optInt(&quot;is_read&quot;));&#10;                message.setCreatedAt(msgObj.optString(&quot;created_at&quot;));&#10;                message.setSenderEmail(msgObj.optString(&quot;sender_email&quot;));&#10;                message.setSenderName(msgObj.optString(&quot;sender_name&quot;));&#10;                message.setSenderRole(msgObj.optString(&quot;sender_role&quot;));&#10;                message.setFromAdmin(msgObj.optBoolean(&quot;is_from_admin&quot;));&#10;                message.setFromUser(msgObj.optBoolean(&quot;is_from_user&quot;));&#10;&#10;                newMessages.add(message);&#10;            }&#10;&#10;            messagesAdapter.updateMessages(newMessages);&#10;            messagesRecyclerView.scrollToPosition(newMessages.size() - 1);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            Toast.makeText(this, &quot;Error al procesar mensajes&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void sendMessage() {&#10;        String messageText = messageInput.getText().toString().trim();&#10;        if (messageText.isEmpty()) {&#10;            Toast.makeText(this, &quot;Escribe un mensaje&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        messageInput.setText(&quot;&quot;);&#10;        btnSend.setEnabled(false);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                // Admin envía mensaje a usuario específico&#10;                JSONObject response = MessagesAPI.sendMessage(currentAdminId, messageText, targetUserId);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    btnSend.setEnabled(true);&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        // Recargar mensajes&#10;                        loadMessages();&#10;                    } else {&#10;                        String error = response != null ? response.optString(&quot;message&quot;, &quot;Error al enviar mensaje&quot;) : &quot;Error de conexión&quot;;&#10;                        Toast.makeText(this, error, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                });&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    btnSend.setEnabled(true);&#10;                    Toast.makeText(this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void setupAutoRefresh() {&#10;        autoRefreshHandler = new Handler(Looper.getMainLooper());&#10;        autoRefreshRunnable = new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                loadMessagesQuietly();&#10;                autoRefreshHandler.postDelayed(this, REFRESH_INTERVAL);&#10;            }&#10;        };&#10;        autoRefreshHandler.postDelayed(autoRefreshRunnable, REFRESH_INTERVAL);&#10;    }&#10;&#10;    private void loadMessagesQuietly() {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject response = MessagesAPI.getChatForAdmin(currentAdminId, targetUserId, 100);&#10;                if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                    runOnUiThread(() -&gt; parseMessages(response));&#10;                }&#10;            } catch (Exception e) {&#10;                // Ignorar errores en refresh automático&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        if (autoRefreshHandler != null &amp;&amp; autoRefreshRunnable != null) {&#10;            autoRefreshHandler.removeCallbacks(autoRefreshRunnable);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/AdminUsersListActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/AdminUsersListActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.ProgressBar;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.adapters.ChatUsersAdapter;&#10;import com.example.adoptmev5.api.MessagesAPI;&#10;import com.example.adoptmev5.models.ChatUser;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class AdminUsersListActivity extends AppCompatActivity {&#10;&#10;    private RecyclerView usersRecyclerView;&#10;    private ProgressBar loadingProgress;&#10;    private LinearLayout emptyState;&#10;    private ImageView btnBack;&#10;&#10;    private ChatUsersAdapter usersAdapter;&#10;    private List&lt;ChatUser&gt; usersList;&#10;    private int currentAdminId;&#10;&#10;    private Handler autoRefreshHandler;&#10;    private Runnable autoRefreshRunnable;&#10;    private static final int REFRESH_INTERVAL = 5000;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_admin_users_list);&#10;&#10;        // Obtener adminId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        currentAdminId = prefs.getInt(&quot;user_id&quot;, -1);&#10;        String role = prefs.getString(&quot;role&quot;, &quot;user&quot;);&#10;&#10;        if (currentAdminId == -1 || !role.equals(&quot;admin&quot;)) {&#10;            Toast.makeText(this, &quot;Error: Acceso no autorizado&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        initViews();&#10;        setupRecyclerView();&#10;        setupListeners();&#10;        loadUsersList();&#10;        setupAutoRefresh();&#10;    }&#10;&#10;    private void initViews() {&#10;        usersRecyclerView = findViewById(R.id.users_recycler_view);&#10;        loadingProgress = findViewById(R.id.loading_progress);&#10;        emptyState = findViewById(R.id.empty_state);&#10;        btnBack = findViewById(R.id.btn_back);&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        usersList = new ArrayList&lt;&gt;();&#10;        usersAdapter = new ChatUsersAdapter(usersList, this::onUserClick);&#10;&#10;        LinearLayoutManager layoutManager = new LinearLayoutManager(this);&#10;        usersRecyclerView.setLayoutManager(layoutManager);&#10;        usersRecyclerView.setAdapter(usersAdapter);&#10;    }&#10;&#10;    private void setupListeners() {&#10;        btnBack.setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void loadUsersList() {&#10;        loadingProgress.setVisibility(View.VISIBLE);&#10;        emptyState.setVisibility(View.GONE);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject response = MessagesAPI.getUsersListForAdmin(currentAdminId);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    loadingProgress.setVisibility(View.GONE);&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        parseUsersList(response);&#10;                    } else {&#10;                        String error = response != null ? response.optString(&quot;message&quot;, &quot;Error al cargar usuarios&quot;) : &quot;Error de conexión&quot;;&#10;                        Toast.makeText(this, error, Toast.LENGTH_SHORT).show();&#10;                        showEmptyState();&#10;                    }&#10;                });&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    loadingProgress.setVisibility(View.GONE);&#10;                    Toast.makeText(this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                    showEmptyState();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void parseUsersList(JSONObject response) {&#10;        try {&#10;            JSONArray usersArray = response.getJSONArray(&quot;users&quot;);&#10;            List&lt;ChatUser&gt; newUsers = new ArrayList&lt;&gt;();&#10;&#10;            for (int i = 0; i &lt; usersArray.length(); i++) {&#10;                JSONObject userObj = usersArray.getJSONObject(i);&#10;                ChatUser user = new ChatUser();&#10;                user.setUserId(userObj.optInt(&quot;user_id&quot;));&#10;                user.setEmail(userObj.optString(&quot;email&quot;));&#10;                user.setName(userObj.optString(&quot;name&quot;));&#10;                user.setRole(userObj.optString(&quot;role&quot;));&#10;                user.setLastMessage(userObj.optString(&quot;last_message&quot;));&#10;                user.setLastMessageTime(userObj.optString(&quot;last_message_time&quot;));&#10;                user.setLastMessageFromUser(userObj.optBoolean(&quot;is_last_message_from_user&quot;));&#10;                user.setUnreadCount(userObj.optInt(&quot;unread_count&quot;));&#10;&#10;                newUsers.add(user);&#10;            }&#10;&#10;            if (newUsers.isEmpty()) {&#10;                showEmptyState();&#10;            } else {&#10;                usersAdapter.updateUsers(newUsers);&#10;                usersRecyclerView.setVisibility(View.VISIBLE);&#10;                emptyState.setVisibility(View.GONE);&#10;            }&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            Toast.makeText(this, &quot;Error al procesar usuarios&quot;, Toast.LENGTH_SHORT).show();&#10;            showEmptyState();&#10;        }&#10;    }&#10;&#10;    private void onUserClick(ChatUser user) {&#10;        // Abrir chat individual con este usuario&#10;        Intent intent = new Intent(this, AdminChatActivity.class);&#10;        intent.putExtra(&quot;user_id&quot;, user.getUserId());&#10;        intent.putExtra(&quot;user_name&quot;, user.getName());&#10;        startActivity(intent);&#10;    }&#10;&#10;    private void showEmptyState() {&#10;        usersRecyclerView.setVisibility(View.GONE);&#10;        emptyState.setVisibility(View.VISIBLE);&#10;    }&#10;&#10;    private void setupAutoRefresh() {&#10;        autoRefreshHandler = new Handler(Looper.getMainLooper());&#10;        autoRefreshRunnable = new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                loadUsersListQuietly();&#10;                autoRefreshHandler.postDelayed(this, REFRESH_INTERVAL);&#10;            }&#10;        };&#10;        autoRefreshHandler.postDelayed(autoRefreshRunnable, REFRESH_INTERVAL);&#10;    }&#10;&#10;    private void loadUsersListQuietly() {&#10;        // Cargar lista sin mostrar loading&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject response = MessagesAPI.getUsersListForAdmin(currentAdminId);&#10;                if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                    runOnUiThread(() -&gt; parseUsersList(response));&#10;                }&#10;            } catch (Exception e) {&#10;                // Ignorar errores en refresh automático&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Recargar al volver a esta pantalla&#10;        loadUsersList();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        if (autoRefreshHandler != null &amp;&amp; autoRefreshRunnable != null) {&#10;            autoRefreshHandler.removeCallbacks(autoRefreshRunnable);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ChatActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ChatActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;/**&#10; * Actividad que redirige al chat del usuario.&#10; * Esta es solo una actividad de redirección para mantener compatibilidad.&#10; */&#10;public class ChatActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        &#10;        // Redirigir directamente a UserChatActivity&#10;        Intent intent = new Intent(this, UserChatActivity.class);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/LoginActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;    private Button buttonLogin;&#10;    private TextView textViewRegister;&#10;    private EditText editTextEmail;&#10;    private EditText editTextPassword;&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Referencia al botón de login&#10;        buttonLogin = findViewById(R.id.button_login);&#10;        // Referencia al texto &quot;Regístrate&quot;&#10;        textViewRegister = findViewById(R.id.textView_register);&#10;&#10;        // Referencias a inputs&#10;        editTextEmail = findViewById(R.id.editText_email);&#10;        editTextPassword = findViewById(R.id.editText_password);&#10;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#10;        buttonLogin.setOnClickListener(v -&gt; attemptLogin());&#10;        textViewRegister.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void attemptLogin() {&#10;        final String email = editTextEmail.getText().toString().trim();&#10;        final String password = editTextPassword.getText().toString().trim();&#10;&#10;        if (email.isEmpty() || password.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa email y contraseña&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Petición en background&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;email&quot;, email);&#10;                body.put(&quot;password&quot;, password);&#10;&#10;                }&#10;&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    String token = resp.optString(&quot;token&quot;, &quot;&quot;);&#10;        buttonLogin.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#10;            startActivity(intent);&#10;            finish(); // Opcional: cierra la actividad de login&#10;        });&#10;&#10;                    if (user != null) {&#10;                        int userId = user.optInt(&quot;id&quot;, -1);&#10;                        String nombres = user.optString(&quot;nombres&quot;, &quot;&quot;);&#10;                        String apellidos = user.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String userEmail = user.optString(&quot;email&quot;, &quot;&quot;);&#10;                        String telefono = user.optString(&quot;telefono&quot;, &quot;&quot;);&#10;                        String dni = user.optString(&quot;dni&quot;, &quot;&quot;);&#10;&#10;                        // Guardar todos los datos del usuario en SharedPreferences&#10;                        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;                        SharedPreferences.Editor editor = prefs.edit();&#10;                        editor.putString(&quot;token&quot;, token);&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#13;&#10;&#13;&#10;import android.content.Intent;&#13;&#10;import android.content.SharedPreferences;&#13;&#10;import android.os.Bundle;&#13;&#10;import android.widget.Button;&#13;&#10;import android.widget.EditText;&#13;&#10;import android.widget.TextView;&#13;&#10;import android.widget.Toast;&#13;&#10;&#13;&#10;import androidx.activity.EdgeToEdge;&#13;&#10;import androidx.appcompat.app.AppCompatActivity;&#13;&#10;import androidx.core.graphics.Insets;&#13;&#10;import androidx.core.view.ViewCompat;&#13;&#10;import androidx.core.view.WindowInsetsCompat;&#13;&#10;&#13;&#10;import org.json.JSONException;&#13;&#10;import org.json.JSONObject;&#13;&#10;&#13;&#10;import java.io.BufferedReader;&#13;&#10;import java.io.IOException;&#13;&#10;import java.io.InputStreamReader;&#13;&#10;import java.io.OutputStream;&#13;&#10;import java.net.HttpURLConnection;&#13;&#10;import java.net.URL;&#13;&#10;&#13;&#10;public class LoginActivity extends AppCompatActivity {&#13;&#10;&#13;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;; // Cambia a la URL de tu API si no usas emulador&#13;&#10;&#13;&#10;    private Button buttonLogin;&#13;&#10;    private TextView textViewRegister;&#13;&#10;    private EditText editTextEmail;&#13;&#10;    private EditText editTextPassword;&#13;&#10;&#13;&#10;    @Override&#13;&#10;    protected void onCreate(Bundle savedInstanceState) {&#13;&#10;        super.onCreate(savedInstanceState);&#13;&#10;        EdgeToEdge.enable(this);&#13;&#10;        setContentView(R.layout.activity_login);&#13;&#10;&#13;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#13;&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#13;&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#13;&#10;            return insets;&#13;&#10;        });&#13;&#10;&#13;&#10;        // Referencia al botón de login&#13;&#10;        buttonLogin = findViewById(R.id.button_login);&#13;&#10;        // Referencia al texto &quot;Regístrate&quot;&#13;&#10;        textViewRegister = findViewById(R.id.textView_register);&#13;&#10;&#13;&#10;        // Referencias a inputs&#13;&#10;        editTextEmail = findViewById(R.id.editText_email);&#13;&#10;        editTextPassword = findViewById(R.id.editText_password);&#13;&#10;&#13;&#10;        // Acción al hacer clic en &quot;INICIAR SESIÓN&quot;&#13;&#10;        buttonLogin.setOnClickListener(v -&gt; attemptLogin());&#13;&#10;&#13;&#10;        // Acción al hacer clic en &quot;Regístrate&quot;&#13;&#10;        textViewRegister.setOnClickListener(v -&gt; {&#13;&#10;            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);&#13;&#10;            startActivity(intent);&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void attemptLogin() {&#13;&#10;        final String email = editTextEmail.getText().toString().trim();&#13;&#10;        final String password = editTextPassword.getText().toString().trim();&#13;&#10;&#13;&#10;        if (email.isEmpty() || password.isEmpty()) {&#13;&#10;            Toast.makeText(this, &quot;Ingresa email y contraseña&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        // Petición en background&#13;&#10;        new Thread(() -&gt; {&#13;&#10;            try {&#13;&#10;                JSONObject body = new JSONObject();&#13;&#10;                body.put(&quot;email&quot;, email);&#13;&#10;                body.put(&quot;password&quot;, password);&#13;&#10;&#13;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/login.php&quot;, body);&#13;&#10;                if (resp == null) {&#13;&#10;                    showToast(&quot;Error en la conexión&quot;);&#13;&#10;                    return;&#13;&#10;                }&#13;&#10;&#13;&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#13;&#10;                if (success) {&#13;&#10;                    String token = resp.optString(&quot;token&quot;, &quot;&quot;);&#13;&#10;                    JSONObject user = resp.optJSONObject(&quot;user&quot;);&#13;&#10;&#13;&#10;                    if (user != null) {&#10;                        int userId = user.optInt(&quot;id&quot;, -1);&#10;                        String nombres = user.optString(&quot;nombres&quot;, &quot;&quot;);&#10;                        String apellidos = user.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String userEmail = user.optString(&quot;email&quot;, &quot;&quot;);&#10;                        String telefono = user.optString(&quot;telefono&quot;, &quot;&quot;);&#10;                        String dni = user.optString(&quot;dni&quot;, &quot;&quot;);&#10;                        String role = user.optString(&quot;role&quot;, &quot;user&quot;);&#10;&#10;                        // Guardar todos los datos del usuario en SharedPreferences&#10;                        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;                        SharedPreferences.Editor editor = prefs.edit();&#10;                        editor.putString(&quot;token&quot;, token);&#10;                        editor.putInt(&quot;user_id&quot;, userId);&#10;                        editor.putString(&quot;nombres&quot;, nombres);&#10;                        editor.putString(&quot;apellidos&quot;, apellidos);&#10;                        editor.putString(&quot;email&quot;, userEmail);&#10;                        editor.putString(&quot;telefono&quot;, telefono);&#10;                        editor.putString(&quot;dni&quot;, dni);&#10;                        editor.putString(&quot;role&quot;, role);&#10;                        editor.apply();&#13;&#10;&#13;&#10;                        runOnUiThread(() -&gt; {&#13;&#10;                            Toast.makeText(LoginActivity.this, &quot;Login exitoso&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;                            Intent intent = new Intent(LoginActivity.this, NavbarActivity.class);&#13;&#10;                            startActivity(intent);&#13;&#10;                            finish();&#13;&#10;                        });&#13;&#10;                    } else {&#13;&#10;                        showToast(&quot;Error: No se recibieron datos del usuario&quot;);&#13;&#10;                    }&#13;&#10;                } else {&#13;&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Credenciales inválidas&quot;);&#13;&#10;                    showToast(msg);&#13;&#10;                }&#13;&#10;&#13;&#10;            } catch (java.net.UnknownHostException e) {&#13;&#10;                e.printStackTrace();&#13;&#10;                showToast(&quot;Error: No se puede conectar al servidor. Verifica que tu API esté corriendo.&quot;);&#13;&#10;            } catch (java.io.IOException e) {&#13;&#10;                e.printStackTrace();&#13;&#10;                String errorMsg = e.getMessage();&#13;&#10;                if (errorMsg != null &amp;&amp; errorMsg.contains(&quot;Cleartext HTTP&quot;)) {&#13;&#10;                    showToast(&quot;Error: HTTP no permitido. Desinstala la app del emulador e instala de nuevo.&quot;);&#13;&#10;                } else {&#13;&#10;                    showToast(&quot;Error de conexión: &quot; + errorMsg);&#13;&#10;                }&#13;&#10;            } catch (Exception e) {&#13;&#10;                e.printStackTrace();&#13;&#10;                showToast(&quot;Error: &quot; + e.getMessage());&#13;&#10;            }&#13;&#10;        }).start();&#13;&#10;    }&#13;&#10;&#13;&#10;    private JSONObject postJson(String urlString, JSONObject payload) throws IOException, JSONException {&#13;&#10;        URL url = new URL(urlString);&#13;&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#13;&#10;        try {&#13;&#10;            conn.setConnectTimeout(10000);&#13;&#10;            conn.setReadTimeout(10000);&#13;&#10;            conn.setRequestMethod(&quot;POST&quot;);&#13;&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#13;&#10;            conn.setDoOutput(true);&#13;&#10;&#13;&#10;            try (OutputStream os = conn.getOutputStream()) {&#13;&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#13;&#10;                os.flush();&#13;&#10;            }&#13;&#10;&#13;&#10;            int code = conn.getResponseCode();&#13;&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#13;&#10;            BufferedReader br = new BufferedReader(isr);&#13;&#10;            StringBuilder sb = new StringBuilder();&#13;&#10;            String line;&#13;&#10;            while ((line = br.readLine()) != null) {&#13;&#10;                sb.append(line);&#13;&#10;            }&#13;&#10;            br.close();&#13;&#10;            String respStr = sb.toString();&#13;&#10;            if (respStr.isEmpty()) return null;&#13;&#10;            return new JSONObject(respStr);&#13;&#10;        } finally {&#13;&#10;            conn.disconnect();&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void showToast(String msg) {&#13;&#10;        runOnUiThread(() -&gt; Toast.makeText(LoginActivity.this, msg, Toast.LENGTH_LONG).show());&#13;&#10;    }&#13;&#10;}&#13;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/NavbarActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/NavbarActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5;&#10;import com.example.adoptmev5.ui.menu.ThemeActivity;&#10;&#10;import android.os.Bundle;&#10;&#10;import com.google.android.material.bottomnavigation.BottomNavigationView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.navigation.NavController;&#10;import androidx.navigation.Navigation;&#10;import androidx.navigation.ui.AppBarConfiguration;&#10;import androidx.navigation.ui.NavigationUI;&#10;&#10;import com.example.adoptmev5.databinding.ActivityNavbarBinding;&#10;&#10;public class NavbarActivity extends AppCompatActivity {&#10;&#10;    private ActivityNavbarBinding binding;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        binding = ActivityNavbarBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        BottomNavigationView navView = findViewById(R.id.nav_view);&#10;        // Passing each menu ID as a set of Ids because each&#10;        // menu should be considered as top level destinations.&#10;        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(&#10;                R.id.navigation_home, R.id.navigation_search, R.id.navigation_favorites , R.id.navigation_maps, R.id.navigation_menu)&#10;                .build();&#10;        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment_activity_navbar);&#10;        //NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);&#10;        NavigationUI.setupWithNavController(binding.navView, navController);&#10;    }&#10;&#10;}" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.ImageButton;&#10;import android.widget.TextView;&#10;&#10;import com.google.android.material.bottomnavigation.BottomNavigationView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.navigation.NavController;&#10;import androidx.navigation.Navigation;&#10;import androidx.navigation.ui.AppBarConfiguration;&#10;import androidx.navigation.ui.NavigationUI;&#10;&#10;import com.example.adoptmev5.api.NotificationApiService;&#10;import com.example.adoptmev5.databinding.ActivityNavbarBinding;&#10;import com.example.adoptmev5.models.Notification;&#10;import com.example.adoptmev5.ui.notifications.NotificationsActivity;&#10;&#10;import java.util.List;&#10;&#10;public class NavbarActivity extends AppCompatActivity {&#10;&#10;    private static final String TAG = &quot;NavbarActivity&quot;;&#10;    private ActivityNavbarBinding binding;&#10;    private TextView toolbarTitle;&#10;    private TextView notificationBadge;&#10;    private int notificationCount = 0;&#10;    private int userId;&#10;    private String userRole;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        binding = ActivityNavbarBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Obtener datos del usuario&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, 0);&#10;        userRole = prefs.getString(&quot;user_role&quot;, &quot;user&quot;);&#10;&#10;        Log.d(TAG, &quot;Usuario: &quot; + userId + &quot;, Role: &quot; + userRole);&#10;&#10;        // Configurar Toolbar&#10;        Toolbar toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setDisplayShowTitleEnabled(false);&#10;        }&#10;&#10;        // Referencias a vistas del AppBar&#10;        toolbarTitle = findViewById(R.id.toolbar_title);&#10;        ImageButton btnNotifications = findViewById(R.id.btn_notifications);&#10;        notificationBadge = findViewById(R.id.notification_badge);&#10;&#10;        // Configurar botón de notificaciones&#10;        btnNotifications.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(NavbarActivity.this, NotificationsActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        BottomNavigationView navView = findViewById(R.id.nav_view);&#10;&#10;        // Configuración de destinos principales&#10;        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(&#10;                R.id.navigation_home, R.id.navigation_search, R.id.navigation_favorites,&#10;                R.id.navigation_maps, R.id.navigation_menu)&#10;                .build();&#10;&#10;        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment_activity_navbar);&#10;        NavigationUI.setupWithNavController(binding.navView, navController);&#10;&#10;        // Listener para cambiar el título según el fragment&#10;        navController.addOnDestinationChangedListener((controller, destination, arguments) -&gt; {&#10;            int destId = destination.getId();&#10;            if (destId == R.id.navigation_home) {&#10;                toolbarTitle.setText(&quot;Inicio&quot;);&#10;            } else if (destId == R.id.navigation_search) {&#10;                toolbarTitle.setText(&quot;Buscar Mascotas&quot;);&#10;            } else if (destId == R.id.navigation_favorites) {&#10;                toolbarTitle.setText(&quot;Mis Solicitudes&quot;);&#10;            } else if (destId == R.id.navigation_maps) {&#10;                toolbarTitle.setText(&quot;Mapa&quot;);&#10;            } else if (destId == R.id.navigation_menu) {&#10;                toolbarTitle.setText(&quot;Menú&quot;);&#10;            } else {&#10;                toolbarTitle.setText(&quot;AdoptMe&quot;);&#10;            }&#10;        });&#10;&#10;        // Cargar notificaciones si es admin&#10;        loadNotifications();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Recargar notificaciones al volver&#10;        loadNotifications();&#10;    }&#10;&#10;    /**&#10;     * Cargar notificaciones desde el API&#10;     */&#10;    private void loadNotifications() {&#10;        if (userId == 0) return;&#10;&#10;        // Solo cargar notificaciones para admins&#10;        if (!&quot;admin&quot;.equals(userRole)) {&#10;            updateNotificationBadge(0);&#10;            return;&#10;        }&#10;&#10;        NotificationApiService.getNotifications(userId, new NotificationApiService.NotificationsCallback() {&#10;            @Override&#10;            public void onSuccess(List&lt;Notification&gt; notifications) {&#10;                // Contar solo las no leídas&#10;                int unreadCount = 0;&#10;                for (Notification n : notifications) {&#10;                    if (!n.isRead()) {&#10;                        unreadCount++;&#10;                    }&#10;                }&#10;                &#10;                Log.d(TAG, &quot;Notificaciones no leídas: &quot; + unreadCount);&#10;                &#10;                int finalUnreadCount = unreadCount;&#10;                runOnUiThread(() -&gt; updateNotificationBadge(finalUnreadCount));&#10;            }&#10;&#10;            @Override&#10;            public void onError(String error) {&#10;                Log.e(TAG, &quot;Error al cargar notificaciones: &quot; + error);&#10;                runOnUiThread(() -&gt; updateNotificationBadge(0));&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Actualizar el badge de notificaciones&#10;     */&#10;    public void updateNotificationBadge(int count) {&#10;        notificationCount = count;&#10;        if (count &gt; 0) {&#10;            notificationBadge.setVisibility(View.VISIBLE);&#10;            notificationBadge.setText(count &gt; 99 ? &quot;99+&quot; : String.valueOf(count));&#10;        } else {&#10;            notificationBadge.setVisibility(View.GONE);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/UserChatActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/UserChatActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ImageButton;&#10;import android.widget.ImageView;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.adapters.MessagesAdapter;&#10;import com.example.adoptmev5.api.MessagesAPI;&#10;import com.example.adoptmev5.models.Message;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class UserChatActivity extends AppCompatActivity {&#10;&#10;    private RecyclerView messagesRecyclerView;&#10;    private EditText messageInput;&#10;    private ImageButton btnSend;&#10;    private ImageView btnBack;&#10;    private ProgressBar loadingProgress;&#10;    private TextView chatTitle;&#10;    private TextView chatSubtitle;&#10;&#10;    private MessagesAdapter messagesAdapter;&#10;    private List&lt;Message&gt; messagesList;&#10;    private int currentUserId;&#10;&#10;    private Handler autoRefreshHandler;&#10;    private Runnable autoRefreshRunnable;&#10;    private static final int REFRESH_INTERVAL = 5000; // 5 segundos&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_user_chat);&#10;&#10;        // Obtener userId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        currentUserId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        if (currentUserId == -1) {&#10;            Toast.makeText(this, &quot;Error: Usuario no identificado&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        initViews();&#10;        setupRecyclerView();&#10;        setupListeners();&#10;        loadMessages();&#10;        setupAutoRefresh();&#10;    }&#10;&#10;    private void initViews() {&#10;        messagesRecyclerView = findViewById(R.id.messages_recycler_view);&#10;        messageInput = findViewById(R.id.message_input);&#10;        btnSend = findViewById(R.id.btn_send);&#10;        btnBack = findViewById(R.id.btn_back);&#10;        loadingProgress = findViewById(R.id.loading_progress);&#10;        chatTitle = findViewById(R.id.chat_title);&#10;        chatSubtitle = findViewById(R.id.chat_subtitle);&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        messagesList = new ArrayList&lt;&gt;();&#10;        messagesAdapter = new MessagesAdapter(messagesList, currentUserId);&#10;        &#10;        LinearLayoutManager layoutManager = new LinearLayoutManager(this);&#10;        layoutManager.setStackFromEnd(true); // Comenzar desde abajo&#10;        messagesRecyclerView.setLayoutManager(layoutManager);&#10;        messagesRecyclerView.setAdapter(messagesAdapter);&#10;    }&#10;&#10;    private void setupListeners() {&#10;        btnBack.setOnClickListener(v -&gt; finish());&#10;&#10;        btnSend.setOnClickListener(v -&gt; sendMessage());&#10;&#10;        // También enviar con Enter&#10;        messageInput.setOnEditorActionListener((v, actionId, event) -&gt; {&#10;            sendMessage();&#10;            return true;&#10;        });&#10;    }&#10;&#10;    private void loadMessages() {&#10;        loadingProgress.setVisibility(View.VISIBLE);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject response = MessagesAPI.getChatForUser(currentUserId, 100);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    loadingProgress.setVisibility(View.GONE);&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        parseMessages(response);&#10;                    } else {&#10;                        String error = response != null ? response.optString(&quot;message&quot;, &quot;Error al cargar mensajes&quot;) : &quot;Error de conexión&quot;;&#10;                        Toast.makeText(this, error, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                });&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    loadingProgress.setVisibility(View.GONE);&#10;                    Toast.makeText(this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void parseMessages(JSONObject response) {&#10;        try {&#10;            JSONArray messagesArray = response.getJSONArray(&quot;messages&quot;);&#10;            List&lt;Message&gt; newMessages = new ArrayList&lt;&gt;();&#10;&#10;            for (int i = 0; i &lt; messagesArray.length(); i++) {&#10;                JSONObject msgObj = messagesArray.getJSONObject(i);&#10;                Message message = new Message();&#10;                message.setId(msgObj.optInt(&quot;id&quot;));&#10;                message.setSenderId(msgObj.optInt(&quot;sender_id&quot;));&#10;                message.setReceiverId(msgObj.optInt(&quot;receiver_id&quot;));&#10;                message.setMessage(msgObj.optString(&quot;message&quot;));&#10;                message.setIsRead(msgObj.optInt(&quot;is_read&quot;));&#10;                message.setCreatedAt(msgObj.optString(&quot;created_at&quot;));&#10;                message.setSenderEmail(msgObj.optString(&quot;sender_email&quot;));&#10;                message.setSenderName(msgObj.optString(&quot;sender_name&quot;));&#10;                message.setSenderRole(msgObj.optString(&quot;sender_role&quot;));&#10;                message.setMine(msgObj.optBoolean(&quot;is_mine&quot;));&#10;                message.setFromAdmin(msgObj.optBoolean(&quot;is_from_admin&quot;));&#10;&#10;                newMessages.add(message);&#10;            }&#10;&#10;            messagesAdapter.updateMessages(newMessages);&#10;            messagesRecyclerView.scrollToPosition(newMessages.size() - 1);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            Toast.makeText(this, &quot;Error al procesar mensajes&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void sendMessage() {&#10;        String messageText = messageInput.getText().toString().trim();&#10;        if (messageText.isEmpty()) {&#10;            Toast.makeText(this, &quot;Escribe un mensaje&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        messageInput.setText(&quot;&quot;);&#10;        btnSend.setEnabled(false);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                // Usuario envía mensaje (va a todos los admins automáticamente)&#10;                JSONObject response = MessagesAPI.sendMessage(currentUserId, messageText, null);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    btnSend.setEnabled(true);&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        // Recargar mensajes&#10;                        loadMessages();&#10;                    } else {&#10;                        String error = response != null ? response.optString(&quot;message&quot;, &quot;Error al enviar mensaje&quot;) : &quot;Error de conexión&quot;;&#10;                        Toast.makeText(this, error, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                });&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    btnSend.setEnabled(true);&#10;                    Toast.makeText(this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void setupAutoRefresh() {&#10;        autoRefreshHandler = new Handler(Looper.getMainLooper());&#10;        autoRefreshRunnable = new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                loadMessagesQuietly();&#10;                autoRefreshHandler.postDelayed(this, REFRESH_INTERVAL);&#10;            }&#10;        };&#10;        autoRefreshHandler.postDelayed(autoRefreshRunnable, REFRESH_INTERVAL);&#10;    }&#10;&#10;    private void loadMessagesQuietly() {&#10;        // Cargar mensajes sin mostrar loading&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject response = MessagesAPI.getChatForUser(currentUserId, 100);&#10;                if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                    runOnUiThread(() -&gt; parseMessages(response));&#10;                }&#10;            } catch (Exception e) {&#10;                // Ignorar errores en refresh automático&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        if (autoRefreshHandler != null &amp;&amp; autoRefreshRunnable != null) {&#10;            autoRefreshHandler.removeCallbacks(autoRefreshRunnable);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/VerifyActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class VerifyActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextCode;&#10;    private Button buttonVerify, buttonSkip;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_verify);&#10;&#10;        editTextCode = findViewById(R.id.editText_code);&#10;        buttonVerify = findViewById(R.id.button_verify);&#10;        buttonSkip = findViewById(R.id.button_skip);&#10;&#10;        buttonVerify.setOnClickListener(v -&gt; attemptVerify());&#10;        buttonSkip.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void attemptVerify() {&#10;        final String code = editTextCode.getText().toString().trim();&#10;        if (code.isEmpty()) {&#10;            Toast.makeText(this, &quot;Ingresa el código&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        int userId = prefs.getInt(&quot;pending_user_id&quot;, -1);&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;No hay usuario pendiente&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                body.put(&quot;code&quot;, code);&#10;&#10;                JSONObject resp = postJson(BASE_URL + &quot;/verify.php&quot;, body);&#10;                if (resp == null) {&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error en la conexión&quot;, Toast.LENGTH_SHORT).show());&#10;                    return;&#10;                }&#10;                boolean success = resp.optBoolean(&quot;success&quot;, false);&#10;                if (success) {&#10;                    // Verified&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(VerifyActivity.this, &quot;Cuenta verificada&quot;, Toast.LENGTH_LONG).show();&#10;                        startActivity(new Intent(VerifyActivity.this, LoginActivity.class));&#10;                        finish();&#10;                    });&#10;                } else {&#10;                    String msg = resp.optString(&quot;message&quot;, &quot;Código inválido&quot;);&#10;                    runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, msg, Toast.LENGTH_LONG).show());&#10;                }&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(VerifyActivity.this, &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject postJson(String urlString, org.json.JSONObject payload) throws IOException, org.json.JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/adapters/ChatUsersAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/adapters/ChatUsersAdapter.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.adapters;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.ChatUser;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class ChatUsersAdapter extends RecyclerView.Adapter&lt;ChatUsersAdapter.UserViewHolder&gt; {&#10;&#10;    private List&lt;ChatUser&gt; users;&#10;    private OnUserClickListener listener;&#10;&#10;    public interface OnUserClickListener {&#10;        void onUserClick(ChatUser user);&#10;    }&#10;&#10;    public ChatUsersAdapter(List&lt;ChatUser&gt; users, OnUserClickListener listener) {&#10;        this.users = users;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_chat_user, parent, false);&#10;        return new UserViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull UserViewHolder holder, int position) {&#10;        ChatUser user = users.get(position);&#10;        holder.bind(user, listener);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return users.size();&#10;    }&#10;&#10;    public void updateUsers(List&lt;ChatUser&gt; newUsers) {&#10;        this.users = newUsers;&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    static class UserViewHolder extends RecyclerView.ViewHolder {&#10;        ImageView userAvatar;&#10;        TextView userName;&#10;        TextView lastMessage;&#10;        TextView messageTime;&#10;        TextView unreadBadge;&#10;&#10;        UserViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            userAvatar = itemView.findViewById(R.id.user_avatar);&#10;            userName = itemView.findViewById(R.id.user_name);&#10;            lastMessage = itemView.findViewById(R.id.last_message);&#10;            messageTime = itemView.findViewById(R.id.message_time);&#10;            unreadBadge = itemView.findViewById(R.id.unread_badge);&#10;        }&#10;&#10;        void bind(ChatUser user, OnUserClickListener listener) {&#10;            userName.setText(user.getName());&#10;            lastMessage.setText(user.getLastMessage());&#10;            messageTime.setText(formatTime(user.getLastMessageTime()));&#10;&#10;            // Mostrar badge de no leídos&#10;            if (user.getUnreadCount() &gt; 0) {&#10;                unreadBadge.setVisibility(View.VISIBLE);&#10;                unreadBadge.setText(String.valueOf(user.getUnreadCount()));&#10;            } else {&#10;                unreadBadge.setVisibility(View.GONE);&#10;            }&#10;&#10;            // Click listener&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onUserClick(user);&#10;                }&#10;            });&#10;        }&#10;&#10;        private String formatTime(String dateTimeString) {&#10;            try {&#10;                SimpleDateFormat inputFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;, Locale.getDefault());&#10;                SimpleDateFormat outputFormat = new SimpleDateFormat(&quot;HH:mm&quot;, Locale.getDefault());&#10;                Date date = inputFormat.parse(dateTimeString);&#10;                &#10;                // Verificar si es hoy&#10;                SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.getDefault());&#10;                String today = dateFormat.format(new Date());&#10;                String messageDate = dateFormat.format(date);&#10;                &#10;                if (today.equals(messageDate)) {&#10;                    return outputFormat.format(date);&#10;                } else {&#10;                    SimpleDateFormat dayFormat = new SimpleDateFormat(&quot;dd/MM&quot;, Locale.getDefault());&#10;                    return dayFormat.format(date);&#10;                }&#10;            } catch (Exception e) {&#10;                return dateTimeString;&#10;            }&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/adapters/MessagesAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/adapters/MessagesAdapter.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.adapters;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.Message;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class MessagesAdapter extends RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt; {&#10;&#10;    private static final int VIEW_TYPE_SENT = 1;&#10;    private static final int VIEW_TYPE_RECEIVED = 2;&#10;&#10;    private List&lt;Message&gt; messages;&#10;    private int currentUserId;&#10;&#10;    public MessagesAdapter(List&lt;Message&gt; messages, int currentUserId) {&#10;        this.messages = messages;&#10;        this.currentUserId = currentUserId;&#10;    }&#10;&#10;    @Override&#10;    public int getItemViewType(int position) {&#10;        Message message = messages.get(position);&#10;        if (message.getSenderId() == currentUserId) {&#10;            return VIEW_TYPE_SENT;&#10;        } else {&#10;            return VIEW_TYPE_RECEIVED;&#10;        }&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        if (viewType == VIEW_TYPE_SENT) {&#10;            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_message_sent, parent, false);&#10;            return new SentMessageViewHolder(view);&#10;        } else {&#10;            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_message_received, parent, false);&#10;            return new ReceivedMessageViewHolder(view);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {&#10;        Message message = messages.get(position);&#10;        if (holder instanceof SentMessageViewHolder) {&#10;            ((SentMessageViewHolder) holder).bind(message);&#10;        } else if (holder instanceof ReceivedMessageViewHolder) {&#10;            ((ReceivedMessageViewHolder) holder).bind(message);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return messages.size();&#10;    }&#10;&#10;    public void addMessage(Message message) {&#10;        messages.add(message);&#10;        notifyItemInserted(messages.size() - 1);&#10;    }&#10;&#10;    public void updateMessages(List&lt;Message&gt; newMessages) {&#10;        this.messages = newMessages;&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    // ViewHolder para mensajes enviados&#10;    static class SentMessageViewHolder extends RecyclerView.ViewHolder {&#10;        TextView messageText;&#10;        TextView messageTime;&#10;&#10;        SentMessageViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            messageText = itemView.findViewById(R.id.message_text);&#10;            messageTime = itemView.findViewById(R.id.message_time);&#10;        }&#10;&#10;        void bind(Message message) {&#10;            messageText.setText(message.getMessage());&#10;            messageTime.setText(formatTime(message.getCreatedAt()));&#10;        }&#10;    }&#10;&#10;    // ViewHolder para mensajes recibidos&#10;    static class ReceivedMessageViewHolder extends RecyclerView.ViewHolder {&#10;        TextView senderName;&#10;        TextView messageText;&#10;        TextView messageTime;&#10;&#10;        ReceivedMessageViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            senderName = itemView.findViewById(R.id.sender_name);&#10;            messageText = itemView.findViewById(R.id.message_text);&#10;            messageTime = itemView.findViewById(R.id.message_time);&#10;        }&#10;&#10;        void bind(Message message) {&#10;            senderName.setText(message.getSenderName());&#10;            messageText.setText(message.getMessage());&#10;            messageTime.setText(formatTime(message.getCreatedAt()));&#10;            &#10;            // Mostrar nombre del remitente&#10;            if (message.getSenderName() != null &amp;&amp; !message.getSenderName().isEmpty()) {&#10;                senderName.setVisibility(View.VISIBLE);&#10;            } else {&#10;                senderName.setVisibility(View.GONE);&#10;            }&#10;        }&#10;    }&#10;&#10;    // Método auxiliar para formatear la hora&#10;    private static String formatTime(String dateTimeString) {&#10;        try {&#10;            SimpleDateFormat inputFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;, Locale.getDefault());&#10;            SimpleDateFormat outputFormat = new SimpleDateFormat(&quot;HH:mm&quot;, Locale.getDefault());&#10;            Date date = inputFormat.parse(dateTimeString);&#10;            return outputFormat.format(date);&#10;        } catch (Exception e) {&#10;            return dateTimeString;&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/adapters/UserChatsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/adapters/UserChatsAdapter.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.adapters;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.UserChat;&#10;&#10;import java.text.ParseException;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class UserChatsAdapter extends RecyclerView.Adapter&lt;UserChatsAdapter.UserChatViewHolder&gt; {&#10;&#10;    private Context context;&#10;    private List&lt;UserChat&gt; userChats;&#10;    private OnUserClickListener listener;&#10;&#10;    public interface OnUserClickListener {&#10;        void onUserClick(UserChat userChat);&#10;    }&#10;&#10;    public UserChatsAdapter(Context context, List&lt;UserChat&gt; userChats, OnUserClickListener listener) {&#10;        this.context = context;&#10;        this.userChats = userChats;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public UserChatViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(context).inflate(R.layout.item_user_chat, parent, false);&#10;        return new UserChatViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull UserChatViewHolder holder, int position) {&#10;        UserChat userChat = userChats.get(position);&#10;&#10;        holder.userName.setText(userChat.getName());&#10;        holder.userEmail.setText(userChat.getEmail());&#10;        holder.lastMessage.setText(userChat.getLast_message());&#10;        holder.messageTime.setText(formatTime(userChat.getLast_message_time()));&#10;&#10;        // Mostrar badge de no leídos&#10;        if (userChat.getUnread_count() &gt; 0) {&#10;            holder.unreadBadge.setVisibility(View.VISIBLE);&#10;            holder.unreadBadge.setText(String.valueOf(userChat.getUnread_count()));&#10;        } else {&#10;            holder.unreadBadge.setVisibility(View.GONE);&#10;        }&#10;&#10;        holder.itemView.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                if (listener != null) {&#10;                    listener.onUserClick(userChat);&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return userChats.size();&#10;    }&#10;&#10;    private String formatTime(String dateTime) {&#10;        if (dateTime == null || dateTime.isEmpty()) {&#10;            return &quot;&quot;;&#10;        }&#10;&#10;        try {&#10;            SimpleDateFormat inputFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;, Locale.getDefault());&#10;            Date date = inputFormat.parse(dateTime);&#10;&#10;            // Si es hoy, mostrar solo hora&#10;            SimpleDateFormat timeFormat = new SimpleDateFormat(&quot;HH:mm&quot;, Locale.getDefault());&#10;            SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;, Locale.getDefault());&#10;&#10;            // Comprobación simple: si la fecha es reciente, mostrar hora&#10;            long diffInMillis = System.currentTimeMillis() - date.getTime();&#10;            long hours = diffInMillis / (1000 * 60 * 60);&#10;&#10;            if (hours &lt; 24) {&#10;                return timeFormat.format(date);&#10;            } else {&#10;                return dateFormat.format(date);&#10;            }&#10;        } catch (ParseException e) {&#10;            e.printStackTrace();&#10;            return dateTime;&#10;        }&#10;    }&#10;&#10;    public void updateUserChats(List&lt;UserChat&gt; newUserChats) {&#10;        this.userChats = newUserChats;&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    static class UserChatViewHolder extends RecyclerView.ViewHolder {&#10;        TextView userName;&#10;        TextView userEmail;&#10;        TextView lastMessage;&#10;        TextView messageTime;&#10;        TextView unreadBadge;&#10;&#10;        public UserChatViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            userName = itemView.findViewById(R.id.user_name);&#10;            userEmail = itemView.findViewById(R.id.user_email);&#10;            lastMessage = itemView.findViewById(R.id.last_message);&#10;            messageTime = itemView.findViewById(R.id.message_time);&#10;            unreadBadge = itemView.findViewById(R.id.unread_badge);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/AdoptionApiService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/AdoptionApiService.java" />
              <option name="originalContent" value="package com.example.adoptmev5.api;&#10;&#10;import android.util.Log;&#10;&#10;import com.example.adoptmev5.models.AdoptionRequestResponse;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class AdoptionApiService {&#10;    private static final String TAG = &quot;AdoptionApiService&quot;;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    public interface CheckRequestCallback {&#10;        void onSuccess(boolean canApply, String message, boolean hasActiveRequest);&#10;        void onError(String error);&#10;    }&#10;&#10;    public interface CreateRequestCallback {&#10;        void onSuccess(int requestId, String message);&#10;        void onError(String error);&#10;    }&#10;&#10;    public interface GetMyRequestsCallback {&#10;        void onSuccess(List&lt;AdoptionRequestResponse&gt; requests, JSONObject stats);&#10;        void onError(String error);&#10;    }&#10;&#10;    /**&#10;     * Verificar si el usuario puede aplicar a una mascota&#10;     */&#10;    public static void checkActiveRequest(int userId, int petId, CheckRequestCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/adoptions/checkActiveRequest.php?user_id=&quot; + userId + &quot;&amp;pet_id=&quot; + petId;&#10;                Log.d(TAG, &quot;Verificando solicitud activa: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                    StringBuilder response = new StringBuilder();&#10;                    String line;&#10;                    while ((line = reader.readLine()) != null) {&#10;                        response.append(line);&#10;                    }&#10;                    reader.close();&#10;&#10;                    Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                    JSONObject json = new JSONObject(response.toString());&#10;                    boolean success = json.optBoolean(&quot;success&quot;, false);&#10;&#10;                    if (success) {&#10;                        boolean canApply = json.optBoolean(&quot;can_apply&quot;, false);&#10;                        boolean hasActiveRequest = json.optBoolean(&quot;has_active_request&quot;, false);&#10;                        String message = json.optString(&quot;message&quot;, &quot;&quot;);&#10;                        callback.onSuccess(canApply, message, hasActiveRequest);&#10;                    } else {&#10;                        callback.onError(json.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#10;                    }&#10;                } else {&#10;                    callback.onError(&quot;Error HTTP: &quot; + responseCode);&#10;                }&#10;                conn.disconnect();&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al verificar solicitud: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Crear solicitud de adopción&#10;     */&#10;    public static void createRequest(JSONObject requestData, CreateRequestCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/adoptions/createRequest.php&quot;;&#10;                Log.d(TAG, &quot;Creando solicitud: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;POST&quot;);&#10;                conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;);&#10;                conn.setDoOutput(true);&#10;                conn.setConnectTimeout(15000);&#10;                conn.setReadTimeout(15000);&#10;&#10;                // Enviar datos&#10;                OutputStream os = conn.getOutputStream();&#10;                os.write(requestData.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;                os.close();&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                BufferedReader reader;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                } else {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));&#10;                }&#10;&#10;                StringBuilder response = new StringBuilder();&#10;                String line;&#10;                while ((line = reader.readLine()) != null) {&#10;                    response.append(line);&#10;                }&#10;                reader.close();&#10;&#10;                Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                JSONObject json = new JSONObject(response.toString());&#10;                boolean success = json.optBoolean(&quot;success&quot;, false);&#10;&#10;                if (success) {&#10;                    int requestId = json.optInt(&quot;request_id&quot;, 0);&#10;                    String message = json.optString(&quot;message&quot;, &quot;Solicitud enviada exitosamente&quot;);&#10;                    callback.onSuccess(requestId, message);&#10;                } else {&#10;                    String errorMessage = json.optString(&quot;message&quot;, &quot;Error desconocido&quot;);&#10;                    callback.onError(errorMessage);&#10;                }&#10;&#10;                conn.disconnect();&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al crear solicitud: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Obtener mis solicitudes de adopción&#10;     */&#10;    public static void getMyRequests(int userId, String status, GetMyRequestsCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                StringBuilder urlBuilder = new StringBuilder(BASE_URL + &quot;/adoptions/getMyRequests.php?user_id=&quot; + userId);&#10;                if (status != null &amp;&amp; !status.isEmpty()) {&#10;                    urlBuilder.append(&quot;&amp;status=&quot;).append(status);&#10;                }&#10;                String urlString = urlBuilder.toString();&#10;                Log.d(TAG, &quot;Obteniendo solicitudes: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                BufferedReader reader;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                } else {&#10;                    // Leer el error del servidor&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));&#10;                }&#10;&#10;                StringBuilder response = new StringBuilder();&#10;                String line;&#10;                while ((line = reader.readLine()) != null) {&#10;                    response.append(line);&#10;                }&#10;                reader.close();&#10;&#10;                Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                if (responseCode != HttpURLConnection.HTTP_OK) {&#10;                    String errorMsg = &quot;Error HTTP &quot; + responseCode + &quot;: &quot; + response.toString();&#10;                    Log.e(TAG, errorMsg);&#10;                    callback.onError(errorMsg);&#10;                    conn.disconnect();&#10;                    return;&#10;                }&#10;&#10;                JSONObject json = new JSONObject(response.toString());&#10;                boolean success = json.optBoolean(&quot;success&quot;, false);&#10;&#10;                if (success) {&#10;                    JSONArray requestsArray = json.optJSONArray(&quot;requests&quot;);&#10;                    JSONObject stats = json.optJSONObject(&quot;stats&quot;);&#10;&#10;                    List&lt;AdoptionRequestResponse&gt; requests = new ArrayList&lt;&gt;();&#10;                    if (requestsArray != null) {&#10;                        for (int i = 0; i &lt; requestsArray.length(); i++) {&#10;                            JSONObject requestJson = requestsArray.getJSONObject(i);&#10;                            AdoptionRequestResponse request = parseRequestFromJson(requestJson);&#10;                            if (request != null) {&#10;                                requests.add(request);&#10;                            }&#10;                        }&#10;                    }&#10;&#10;                    callback.onSuccess(requests, stats);&#10;                } else {&#10;                    callback.onError(json.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#10;                }&#10;                conn.disconnect();&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al obtener solicitudes: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Parsear un objeto de solicitud desde JSON&#10;     */&#10;    private static AdoptionRequestResponse parseRequestFromJson(JSONObject json) {&#10;        try {&#10;            AdoptionRequestResponse request = new AdoptionRequestResponse();&#10;&#10;            request.setId(json.optInt(&quot;id&quot;, 0));&#10;            request.setPetId(json.optInt(&quot;pet_id&quot;, 0));&#10;            request.setStatus(json.optString(&quot;status&quot;, &quot;&quot;));&#10;            request.setCreatedAt(json.optString(&quot;created_at&quot;, &quot;&quot;));&#10;            request.setPetName(json.optString(&quot;pet_name&quot;, &quot;&quot;));&#10;            request.setEspecie(json.optString(&quot;especie&quot;, &quot;&quot;));&#10;            request.setRaza(json.optString(&quot;raza&quot;, &quot;&quot;));&#10;            request.setEdad(json.optInt(&quot;edad&quot;, 0));&#10;            request.setSexo(json.optString(&quot;sexo&quot;, &quot;&quot;));&#10;            request.setImageUrl(json.optString(&quot;image_url&quot;, &quot;&quot;));&#10;            request.setUrgencia(json.optString(&quot;urgencia&quot;, &quot;&quot;));&#10;            request.setStatusText(json.optString(&quot;status_text&quot;, &quot;&quot;));&#10;            request.setStatusColor(json.optString(&quot;status_color&quot;, &quot;#999999&quot;));&#10;            request.setCreatedAtFormatted(json.optString(&quot;created_at_formatted&quot;, &quot;&quot;));&#10;            request.setNotasAdmin(json.optString(&quot;notas_admin&quot;, null));&#10;&#10;            return request;&#10;        } catch (Exception e) {&#10;            Log.e(TAG, &quot;Error parseando solicitud: &quot; + e.getMessage(), e);&#10;            return null;&#10;        }&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.api;&#13;&#10;&#13;&#10;import android.util.Log;&#13;&#10;&#13;&#10;import com.example.adoptmev5.models.AdoptionRequestResponse;&#13;&#10;&#13;&#10;import org.json.JSONArray;&#13;&#10;import org.json.JSONObject;&#13;&#10;&#13;&#10;import java.io.BufferedReader;&#13;&#10;import java.io.InputStreamReader;&#13;&#10;import java.io.OutputStream;&#13;&#10;import java.net.HttpURLConnection;&#13;&#10;import java.net.URL;&#13;&#10;import java.util.ArrayList;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;public class AdoptionApiService {&#13;&#10;    private static final String TAG = &quot;AdoptionApiService&quot;;&#13;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#13;&#10;&#13;&#10;    public interface CheckRequestCallback {&#13;&#10;        void onSuccess(boolean canApply, String message, boolean hasActiveRequest);&#13;&#10;        void onError(String error);&#13;&#10;    }&#13;&#10;&#13;&#10;    public interface CreateRequestCallback {&#13;&#10;        void onSuccess(int requestId, String message);&#13;&#10;        void onError(String error);&#13;&#10;    }&#13;&#10;&#13;&#10;    public interface GetMyRequestsCallback {&#13;&#10;        void onSuccess(List&lt;AdoptionRequestResponse&gt; requests, JSONObject stats);&#13;&#10;        void onError(String error);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Verificar si el usuario puede aplicar a una mascota&#13;&#10;     */&#13;&#10;    public static void checkActiveRequest(int userId, int petId, CheckRequestCallback callback) {&#13;&#10;        new Thread(() -&gt; {&#13;&#10;            try {&#13;&#10;                String urlString = BASE_URL + &quot;/adoptions/checkActiveRequest.php?user_id=&quot; + userId + &quot;&amp;pet_id=&quot; + petId;&#13;&#10;                Log.d(TAG, &quot;Verificando solicitud activa: &quot; + urlString);&#13;&#10;&#13;&#10;                URL url = new URL(urlString);&#13;&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#13;&#10;                conn.setRequestMethod(&quot;GET&quot;);&#13;&#10;                conn.setConnectTimeout(10000);&#13;&#10;                conn.setReadTimeout(10000);&#13;&#10;&#13;&#10;                int responseCode = conn.getResponseCode();&#13;&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#13;&#10;&#13;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#13;&#10;                    BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#13;&#10;                    StringBuilder response = new StringBuilder();&#13;&#10;                    String line;&#13;&#10;                    while ((line = reader.readLine()) != null) {&#13;&#10;                        response.append(line);&#13;&#10;                    }&#13;&#10;                    reader.close();&#13;&#10;&#13;&#10;                    Log.d(TAG, &quot;Response: &quot; + response.toString());&#13;&#10;&#13;&#10;                    JSONObject json = new JSONObject(response.toString());&#13;&#10;                    boolean success = json.optBoolean(&quot;success&quot;, false);&#13;&#10;&#13;&#10;                    if (success) {&#13;&#10;                        boolean canApply = json.optBoolean(&quot;can_apply&quot;, false);&#13;&#10;                        boolean hasActiveRequest = json.optBoolean(&quot;has_active_request&quot;, false);&#13;&#10;                        String message = json.optString(&quot;message&quot;, &quot;&quot;);&#13;&#10;                        callback.onSuccess(canApply, message, hasActiveRequest);&#13;&#10;                    } else {&#13;&#10;                        callback.onError(json.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#13;&#10;                    }&#13;&#10;                } else {&#13;&#10;                    callback.onError(&quot;Error HTTP: &quot; + responseCode);&#13;&#10;                }&#13;&#10;                conn.disconnect();&#13;&#10;            } catch (Exception e) {&#13;&#10;                Log.e(TAG, &quot;Error al verificar solicitud: &quot;, e);&#13;&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#13;&#10;            }&#13;&#10;        }).start();&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#10;     * Crear solicitud de adopción&#10;     */&#10;    public static void createRequest(JSONObject requestData, CreateRequestCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/adoptions/createRequest.php&quot;;&#10;                Log.d(TAG, &quot;Creando solicitud: &quot; + urlString);&#10;                Log.d(TAG, &quot;Request data: &quot; + requestData.toString());&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;POST&quot;);&#10;                conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;);&#10;                conn.setDoOutput(true);&#10;                conn.setConnectTimeout(15000);&#10;                conn.setReadTimeout(15000);&#10;&#10;                // Enviar datos&#10;                OutputStream os = conn.getOutputStream();&#10;                os.write(requestData.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;                os.close();&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                // Leer respuesta&#10;                BufferedReader reader;&#10;                if (responseCode &gt;= 200 &amp;&amp; responseCode &lt; 300) {&#10;                    // Códigos 2xx son éxito (200 OK, 201 Created, etc.)&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                } else {&#10;                    // Otros códigos son error&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));&#10;                }&#10;&#10;                StringBuilder response = new StringBuilder();&#10;                String line;&#10;                while ((line = reader.readLine()) != null) {&#10;                    response.append(line);&#10;                }&#10;                reader.close();&#10;&#10;                String responseBody = response.toString();&#10;                Log.d(TAG, &quot;Response body: &quot; + responseBody);&#10;&#10;                // Validar que la respuesta no esté vacía&#10;                if (responseBody.isEmpty()) {&#10;                    Log.e(TAG, &quot;Respuesta vacía del servidor&quot;);&#10;                    callback.onError(&quot;Respuesta vacía del servidor&quot;);&#10;                    conn.disconnect();&#10;                    return;&#10;                }&#10;&#10;                // Parsear respuesta JSON&#10;                JSONObject json;&#10;                try {&#10;                    json = new JSONObject(responseBody);&#10;                } catch (Exception e) {&#10;                    Log.e(TAG, &quot;Error al parsear JSON: &quot; + e.getMessage());&#10;                    callback.onError(&quot;Error al procesar respuesta del servidor: &quot; + responseBody);&#10;                    conn.disconnect();&#10;                    return;&#10;                }&#10;&#10;                boolean success = json.optBoolean(&quot;success&quot;, false);&#10;&#10;                if (success &amp;&amp; (responseCode &gt;= 200 &amp;&amp; responseCode &lt; 300)) {&#10;                    int requestId = json.optInt(&quot;request_id&quot;, 0);&#10;                    String message = json.optString(&quot;message&quot;, &quot;Solicitud enviada exitosamente&quot;);&#10;                    Log.d(TAG, &quot;Solicitud creada exitosamente. ID: &quot; + requestId);&#10;                    callback.onSuccess(requestId, message);&#10;                } else {&#10;                    String errorMessage = json.optString(&quot;message&quot;, &quot;Error al procesar la solicitud&quot;);&#10;                    Log.e(TAG, &quot;Error del servidor: &quot; + errorMessage);&#10;                    callback.onError(errorMessage);&#10;                }&#10;&#10;                conn.disconnect();&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al crear solicitud: &quot;, e);&#10;                callback.onError(&quot;Error de conexión: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Obtener mis solicitudes de adopción&#13;&#10;     */&#13;&#10;    public static void getMyRequests(int userId, String status, GetMyRequestsCallback callback) {&#13;&#10;        new Thread(() -&gt; {&#13;&#10;            try {&#13;&#10;                StringBuilder urlBuilder = new StringBuilder(BASE_URL + &quot;/adoptions/getMyRequests.php?user_id=&quot; + userId);&#13;&#10;                if (status != null &amp;&amp; !status.isEmpty()) {&#13;&#10;                    urlBuilder.append(&quot;&amp;status=&quot;).append(status);&#13;&#10;                }&#13;&#10;                String urlString = urlBuilder.toString();&#13;&#10;                Log.d(TAG, &quot;Obteniendo solicitudes: &quot; + urlString);&#13;&#10;&#13;&#10;                URL url = new URL(urlString);&#13;&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#13;&#10;                conn.setRequestMethod(&quot;GET&quot;);&#13;&#10;                conn.setConnectTimeout(10000);&#13;&#10;                conn.setReadTimeout(10000);&#13;&#10;&#13;&#10;                int responseCode = conn.getResponseCode();&#13;&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#13;&#10;&#13;&#10;                BufferedReader reader;&#13;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#13;&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#13;&#10;                } else {&#13;&#10;                    // Leer el error del servidor&#13;&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));&#13;&#10;                }&#13;&#10;&#13;&#10;                StringBuilder response = new StringBuilder();&#13;&#10;                String line;&#13;&#10;                while ((line = reader.readLine()) != null) {&#13;&#10;                    response.append(line);&#13;&#10;                }&#13;&#10;                reader.close();&#13;&#10;&#13;&#10;                Log.d(TAG, &quot;Response: &quot; + response.toString());&#13;&#10;&#13;&#10;                if (responseCode != HttpURLConnection.HTTP_OK) {&#13;&#10;                    String errorMsg = &quot;Error HTTP &quot; + responseCode + &quot;: &quot; + response.toString();&#13;&#10;                    Log.e(TAG, errorMsg);&#13;&#10;                    callback.onError(errorMsg);&#13;&#10;                    conn.disconnect();&#13;&#10;                    return;&#13;&#10;                }&#13;&#10;&#13;&#10;                JSONObject json = new JSONObject(response.toString());&#13;&#10;                boolean success = json.optBoolean(&quot;success&quot;, false);&#13;&#10;&#13;&#10;                if (success) {&#13;&#10;                    JSONArray requestsArray = json.optJSONArray(&quot;requests&quot;);&#13;&#10;                    JSONObject stats = json.optJSONObject(&quot;stats&quot;);&#13;&#10;&#13;&#10;                    List&lt;AdoptionRequestResponse&gt; requests = new ArrayList&lt;&gt;();&#13;&#10;                    if (requestsArray != null) {&#13;&#10;                        for (int i = 0; i &lt; requestsArray.length(); i++) {&#13;&#10;                            JSONObject requestJson = requestsArray.getJSONObject(i);&#13;&#10;                            AdoptionRequestResponse request = parseRequestFromJson(requestJson);&#13;&#10;                            if (request != null) {&#13;&#10;                                requests.add(request);&#13;&#10;                            }&#13;&#10;                        }&#13;&#10;                    }&#13;&#10;&#13;&#10;                    callback.onSuccess(requests, stats);&#13;&#10;                } else {&#13;&#10;                    callback.onError(json.optString(&quot;message&quot;, &quot;Error desconocido&quot;));&#13;&#10;                }&#13;&#10;                conn.disconnect();&#13;&#10;            } catch (Exception e) {&#13;&#10;                Log.e(TAG, &quot;Error al obtener solicitudes: &quot;, e);&#13;&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#13;&#10;            }&#13;&#10;        }).start();&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Parsear un objeto de solicitud desde JSON&#13;&#10;     */&#13;&#10;    private static AdoptionRequestResponse parseRequestFromJson(JSONObject json) {&#13;&#10;        try {&#13;&#10;            AdoptionRequestResponse request = new AdoptionRequestResponse();&#13;&#10;&#13;&#10;            request.setId(json.optInt(&quot;id&quot;, 0));&#13;&#10;            request.setPetId(json.optInt(&quot;pet_id&quot;, 0));&#13;&#10;            request.setStatus(json.optString(&quot;status&quot;, &quot;&quot;));&#13;&#10;            request.setCreatedAt(json.optString(&quot;created_at&quot;, &quot;&quot;));&#13;&#10;            request.setPetName(json.optString(&quot;pet_name&quot;, &quot;&quot;));&#13;&#10;            request.setEspecie(json.optString(&quot;especie&quot;, &quot;&quot;));&#13;&#10;            request.setRaza(json.optString(&quot;raza&quot;, &quot;&quot;));&#13;&#10;            request.setEdad(json.optInt(&quot;edad&quot;, 0));&#13;&#10;            request.setSexo(json.optString(&quot;sexo&quot;, &quot;&quot;));&#13;&#10;            request.setImageUrl(json.optString(&quot;image_url&quot;, &quot;&quot;));&#13;&#10;            request.setUrgencia(json.optString(&quot;urgencia&quot;, &quot;&quot;));&#13;&#10;            request.setStatusText(json.optString(&quot;status_text&quot;, &quot;&quot;));&#13;&#10;            request.setStatusColor(json.optString(&quot;status_color&quot;, &quot;#999999&quot;));&#13;&#10;            request.setCreatedAtFormatted(json.optString(&quot;created_at_formatted&quot;, &quot;&quot;));&#13;&#10;            request.setNotasAdmin(json.optString(&quot;notas_admin&quot;, null));&#13;&#10;&#13;&#10;            return request;&#13;&#10;        } catch (Exception e) {&#13;&#10;            Log.e(TAG, &quot;Error parseando solicitud: &quot; + e.getMessage(), e);&#13;&#10;            return null;&#13;&#10;        }&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/MessagesAPI.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/MessagesAPI.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.api;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class MessagesAPI {&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api/messages&quot;;&#10;&#10;    // Enviar mensaje&#10;    public static JSONObject sendMessage(int senderId, String message, Integer receiverId) throws IOException, JSONException {&#10;        String urlString = BASE_URL + &quot;/sendMessage.php&quot;;&#10;        JSONObject body = new JSONObject();&#10;        body.put(&quot;sender_id&quot;, senderId);&#10;        body.put(&quot;message&quot;, message);&#10;        if (receiverId != null) {&#10;            body.put(&quot;receiver_id&quot;, receiverId);&#10;        }&#10;        return postJson(urlString, body);&#10;    }&#10;&#10;    // Obtener chat para usuario (chat grupal con admins)&#10;    public static JSONObject getChatForUser(int userId, int limit) throws IOException, JSONException {&#10;        String urlString = BASE_URL + &quot;/getChatForUser.php?user_id=&quot; + userId + &quot;&amp;limit=&quot; + limit;&#10;        return getJson(urlString);&#10;    }&#10;&#10;    // Obtener lista de usuarios para admin&#10;    public static JSONObject getUsersListForAdmin(int adminId) throws IOException, JSONException {&#10;        String urlString = BASE_URL + &quot;/getUsersListForAdmin.php?admin_id=&quot; + adminId;&#10;        return getJson(urlString);&#10;    }&#10;&#10;    // Obtener chat individual para admin con un usuario&#10;    public static JSONObject getChatForAdmin(int adminId, int userId, int limit) throws IOException, JSONException {&#10;        String urlString = BASE_URL + &quot;/getChatForAdmin.php?admin_id=&quot; + adminId + &quot;&amp;user_id=&quot; + userId + &quot;&amp;limit=&quot; + limit;&#10;        return getJson(urlString);&#10;    }&#10;&#10;    // Obtener contador de mensajes no leídos&#10;    public static JSONObject getUnreadCount(int userId) throws IOException, JSONException {&#10;        String urlString = BASE_URL + &quot;/getUnreadCount.php?user_id=&quot; + userId;&#10;        return getJson(urlString);&#10;    }&#10;&#10;    // Métodos auxiliares HTTP&#10;    private static JSONObject postJson(String urlString, JSONObject payload) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;POST&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;&#10;    private static JSONObject getJson(String urlString) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;GET&quot;);&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/MessagesApiService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/MessagesApiService.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.api;&#10;&#10;import android.content.Context;&#10;&#10;import com.android.volley.Request;&#10;import com.android.volley.RequestQueue;&#10;import com.android.volley.Response;&#10;import com.android.volley.VolleyError;&#10;import com.android.volley.toolbox.JsonObjectRequest;&#10;import com.android.volley.toolbox.Volley;&#10;&#10;import org.json.JSONObject;&#10;&#10;public class MessagesApiService {&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api/messages&quot;;&#10;    private RequestQueue requestQueue;&#10;&#10;    public MessagesApiService(Context context) {&#10;        requestQueue = Volley.newRequestQueue(context.getApplicationContext());&#10;    }&#10;&#10;    // Interfaz para callbacks&#10;    public interface ApiCallback {&#10;        void onSuccess(JSONObject response);&#10;        void onError(String error);&#10;    }&#10;&#10;    /**&#10;     * Enviar mensaje&#10;     * Para USER: solo enviar sender_id y message (va a todos los admins)&#10;     * Para ADMIN: enviar sender_id, receiver_id y message&#10;     */&#10;    public void sendMessage(JSONObject messageData, ApiCallback callback) {&#10;        String url = BASE_URL + &quot;/sendMessage.php&quot;;&#10;&#10;        JsonObjectRequest request = new JsonObjectRequest(&#10;                Request.Method.POST,&#10;                url,&#10;                messageData,&#10;                new Response.Listener&lt;JSONObject&gt;() {&#10;                    @Override&#10;                    public void onResponse(JSONObject response) {&#10;                        callback.onSuccess(response);&#10;                    }&#10;                },&#10;                new Response.ErrorListener() {&#10;                    @Override&#10;                    public void onErrorResponse(VolleyError error) {&#10;                        String errorMsg = error.getMessage() != null ? error.getMessage() : &quot;Error al enviar mensaje&quot;;&#10;                        callback.onError(errorMsg);&#10;                    }&#10;                }&#10;        );&#10;&#10;        requestQueue.add(request);&#10;    }&#10;&#10;    /**&#10;     * Obtener chat para usuario (chat grupal con admins)&#10;     */&#10;    public void getChatForUser(int userId, int limit, ApiCallback callback) {&#10;        String url = BASE_URL + &quot;/getChatForUser.php?user_id=&quot; + userId + &quot;&amp;limit=&quot; + limit;&#10;&#10;        JsonObjectRequest request = new JsonObjectRequest(&#10;                Request.Method.GET,&#10;                url,&#10;                null,&#10;                new Response.Listener&lt;JSONObject&gt;() {&#10;                    @Override&#10;                    public void onResponse(JSONObject response) {&#10;                        callback.onSuccess(response);&#10;                    }&#10;                },&#10;                new Response.ErrorListener() {&#10;                    @Override&#10;                    public void onErrorResponse(VolleyError error) {&#10;                        String errorMsg = error.getMessage() != null ? error.getMessage() : &quot;Error al cargar mensajes&quot;;&#10;                        callback.onError(errorMsg);&#10;                    }&#10;                }&#10;        );&#10;&#10;        requestQueue.add(request);&#10;    }&#10;&#10;    /**&#10;     * Obtener lista de usuarios para admin&#10;     */&#10;    public void getUsersListForAdmin(int adminId, ApiCallback callback) {&#10;        String url = BASE_URL + &quot;/getUsersListForAdmin.php?admin_id=&quot; + adminId;&#10;&#10;        JsonObjectRequest request = new JsonObjectRequest(&#10;                Request.Method.GET,&#10;                url,&#10;                null,&#10;                new Response.Listener&lt;JSONObject&gt;() {&#10;                    @Override&#10;                    public void onResponse(JSONObject response) {&#10;                        callback.onSuccess(response);&#10;                    }&#10;                },&#10;                new Response.ErrorListener() {&#10;                    @Override&#10;                    public void onErrorResponse(VolleyError error) {&#10;                        String errorMsg = error.getMessage() != null ? error.getMessage() : &quot;Error al cargar usuarios&quot;;&#10;                        callback.onError(errorMsg);&#10;                    }&#10;                }&#10;        );&#10;&#10;        requestQueue.add(request);&#10;    }&#10;&#10;    /**&#10;     * Obtener chat para admin con un usuario específico&#10;     */&#10;    public void getChatForAdmin(int adminId, int userId, int limit, ApiCallback callback) {&#10;        String url = BASE_URL + &quot;/getChatForAdmin.php?admin_id=&quot; + adminId + &quot;&amp;user_id=&quot; + userId + &quot;&amp;limit=&quot; + limit;&#10;&#10;        JsonObjectRequest request = new JsonObjectRequest(&#10;                Request.Method.GET,&#10;                url,&#10;                null,&#10;                new Response.Listener&lt;JSONObject&gt;() {&#10;                    @Override&#10;                    public void onResponse(JSONObject response) {&#10;                        callback.onSuccess(response);&#10;                    }&#10;                },&#10;                new Response.ErrorListener() {&#10;                    @Override&#10;                    public void onErrorResponse(VolleyError error) {&#10;                        String errorMsg = error.getMessage() != null ? error.getMessage() : &quot;Error al cargar conversación&quot;;&#10;                        callback.onError(errorMsg);&#10;                    }&#10;                }&#10;        );&#10;&#10;        requestQueue.add(request);&#10;    }&#10;&#10;    /**&#10;     * Obtener contador de mensajes no leídos&#10;     */&#10;    public void getUnreadCount(int userId, ApiCallback callback) {&#10;        String url = BASE_URL + &quot;/getUnreadCount.php?user_id=&quot; + userId;&#10;&#10;        JsonObjectRequest request = new JsonObjectRequest(&#10;                Request.Method.GET,&#10;                url,&#10;                null,&#10;                new Response.Listener&lt;JSONObject&gt;() {&#10;                    @Override&#10;                    public void onResponse(JSONObject response) {&#10;                        callback.onSuccess(response);&#10;                    }&#10;                },&#10;                new Response.ErrorListener() {&#10;                    @Override&#10;                    public void onErrorResponse(VolleyError error) {&#10;                        String errorMsg = error.getMessage() != null ? error.getMessage() : &quot;Error al obtener contador&quot;;&#10;                        callback.onError(errorMsg);&#10;                    }&#10;                }&#10;        );&#10;&#10;        requestQueue.add(request);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/NotificationApiService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/api/NotificationApiService.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.api;&#10;&#10;import android.util.Log;&#10;&#10;import com.example.adoptmev5.models.Notification;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class NotificationApiService {&#10;    private static final String TAG = &quot;NotificationAPI&quot;;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    public interface NotificationsCallback {&#10;        void onSuccess(List&lt;Notification&gt; notifications);&#10;        void onError(String error);&#10;    }&#10;&#10;    /**&#10;     * Obtener notificaciones del usuario&#10;     */&#10;    public static void getNotifications(int userId, NotificationsCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/notifications/getNotifications.php?user_id=&quot; + userId;&#10;                Log.d(TAG, &quot;Obteniendo notificaciones: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                BufferedReader reader;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                } else {&#10;                    reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));&#10;                }&#10;&#10;                StringBuilder response = new StringBuilder();&#10;                String line;&#10;                while ((line = reader.readLine()) != null) {&#10;                    response.append(line);&#10;                }&#10;                reader.close();&#10;&#10;                Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                if (responseCode != HttpURLConnection.HTTP_OK) {&#10;                    callback.onError(&quot;Error HTTP &quot; + responseCode + &quot;: &quot; + response.toString());&#10;                    conn.disconnect();&#10;                    return;&#10;                }&#10;&#10;                // Parsear respuesta JSON&#10;                JSONArray jsonArray = new JSONArray(response.toString());&#10;                List&lt;Notification&gt; notifications = new ArrayList&lt;&gt;();&#10;&#10;                for (int i = 0; i &lt; jsonArray.length(); i++) {&#10;                    JSONObject json = jsonArray.getJSONObject(i);&#10;                    Notification notification = new Notification();&#10;                    &#10;                    notification.setId(json.optInt(&quot;id&quot;, 0));&#10;                    notification.setUserId(json.optInt(&quot;user_id&quot;, 0));&#10;                    notification.setType(json.optString(&quot;type&quot;, &quot;&quot;));&#10;                    notification.setTitle(json.optString(&quot;title&quot;, &quot;&quot;));&#10;                    notification.setMessage(json.optString(&quot;message&quot;, &quot;&quot;));&#10;                    notification.setIsRead(json.optInt(&quot;is_read&quot;, 0));&#10;                    notification.setRelatedId(json.optInt(&quot;related_id&quot;, 0));&#10;                    notification.setCreatedAt(json.optString(&quot;created_at&quot;, &quot;&quot;));&#10;&#10;                    notifications.add(notification);&#10;                }&#10;&#10;                callback.onSuccess(notifications);&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al obtener notificaciones: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    /**&#10;     * Marcar notificación como leída&#10;     */&#10;    public static void markAsRead(int notificationId, NotificationsCallback callback) {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                String urlString = BASE_URL + &quot;/notifications/markAsRead.php?id=&quot; + notificationId;&#10;                Log.d(TAG, &quot;Marcando como leída: &quot; + urlString);&#10;&#10;                URL url = new URL(urlString);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;POST&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                Log.d(TAG, &quot;Response code: &quot; + responseCode);&#10;&#10;                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                StringBuilder response = new StringBuilder();&#10;                String line;&#10;                while ((line = reader.readLine()) != null) {&#10;                    response.append(line);&#10;                }&#10;                reader.close();&#10;&#10;                Log.d(TAG, &quot;Response: &quot; + response.toString());&#10;&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    callback.onSuccess(new ArrayList&lt;&gt;());&#10;                } else {&#10;                    callback.onError(&quot;Error al marcar como leída&quot;);&#10;                }&#10;&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error al marcar como leída: &quot;, e);&#10;                callback.onError(&quot;Error: &quot; + e.getMessage());&#10;            }&#10;        }).start();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/AdoptionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/AdoptionRequest.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class AdoptionRequest {&#10;    private int userId;&#10;    private int petId;&#10;    private String nombresCompletos;&#10;    private String email;&#10;    private String telefono;&#10;    private String fechaNacimiento;&#10;    private String direccionCompleta;&#10;    private String ciudad;&#10;    private String distrito;&#10;    private String tipoVivienda;&#10;    private String propietarioAceptaMascotas;&#10;    private int miembrosFamilia;&#10;    private String hayNinos;&#10;    private String alergiasFamilia;&#10;    private String tieneOtrasMascotas;&#10;    private String descripcionOtrasMascotas;&#10;    private String experienciaPrevia;&#10;    private String tiempoSolaMascota;&#10;    private String tieneVeterinario;&#10;    private String presupuestoMensual;&#10;    private String motivacionAdopcion;&#10;    private String conocimientoRaza;&#10;    private String dispuestoEntrenar;&#10;    private String compromisoLargoPlazo;&#10;&#10;    // Constructor vacío&#10;    public AdoptionRequest() {}&#10;&#10;    // Getters y Setters&#10;    public int getUserId() { return userId; }&#10;    public void setUserId(int userId) { this.userId = userId; }&#10;&#10;    public int getPetId() { return petId; }&#10;    public void setPetId(int petId) { this.petId = petId; }&#10;&#10;    public String getNombresCompletos() { return nombresCompletos; }&#10;    public void setNombresCompletos(String nombresCompletos) { this.nombresCompletos = nombresCompletos; }&#10;&#10;    public String getEmail() { return email; }&#10;    public void setEmail(String email) { this.email = email; }&#10;&#10;    public String getTelefono() { return telefono; }&#10;    public void setTelefono(String telefono) { this.telefono = telefono; }&#10;&#10;    public String getFechaNacimiento() { return fechaNacimiento; }&#10;    public void setFechaNacimiento(String fechaNacimiento) { this.fechaNacimiento = fechaNacimiento; }&#10;&#10;    public String getDireccionCompleta() { return direccionCompleta; }&#10;    public void setDireccionCompleta(String direccionCompleta) { this.direccionCompleta = direccionCompleta; }&#10;&#10;    public String getCiudad() { return ciudad; }&#10;    public void setCiudad(String ciudad) { this.ciudad = ciudad; }&#10;&#10;    public String getDistrito() { return distrito; }&#10;    public void setDistrito(String distrito) { this.distrito = distrito; }&#10;&#10;    public String getTipoVivienda() { return tipoVivienda; }&#10;    public void setTipoVivienda(String tipoVivienda) { this.tipoVivienda = tipoVivienda; }&#10;&#10;    public String getPropietarioAceptaMascotas() { return propietarioAceptaMascotas; }&#10;    public void setPropietarioAceptaMascotas(String propietarioAceptaMascotas) { this.propietarioAceptaMascotas = propietarioAceptaMascotas; }&#10;&#10;    public int getMiembrosFamilia() { return miembrosFamilia; }&#10;    public void setMiembrosFamilia(int miembrosFamilia) { this.miembrosFamilia = miembrosFamilia; }&#10;&#10;    public String getHayNinos() { return hayNinos; }&#10;    public void setHayNinos(String hayNinos) { this.hayNinos = hayNinos; }&#10;&#10;    public String getAlergiasFamilia() { return alergiasFamilia; }&#10;    public void setAlergiasFamilia(String alergiasFamilia) { this.alergiasFamilia = alergiasFamilia; }&#10;&#10;    public String getTieneOtrasMascotas() { return tieneOtrasMascotas; }&#10;    public void setTieneOtrasMascotas(String tieneOtrasMascotas) { this.tieneOtrasMascotas = tieneOtrasMascotas; }&#10;&#10;    public String getDescripcionOtrasMascotas() { return descripcionOtrasMascotas; }&#10;    public void setDescripcionOtrasMascotas(String descripcionOtrasMascotas) { this.descripcionOtrasMascotas = descripcionOtrasMascotas; }&#10;&#10;    public String getExperienciaPrevia() { return experienciaPrevia; }&#10;    public void setExperienciaPrevia(String experienciaPrevia) { this.experienciaPrevia = experienciaPrevia; }&#10;&#10;    public String getTiempoSolaMascota() { return tiempoSolaMascota; }&#10;    public void setTiempoSolaMascota(String tiempoSolaMascota) { this.tiempoSolaMascota = tiempoSolaMascota; }&#10;&#10;    public String getTieneVeterinario() { return tieneVeterinario; }&#10;    public void setTieneVeterinario(String tieneVeterinario) { this.tieneVeterinario = tieneVeterinario; }&#10;&#10;    public String getPresupuestoMensual() { return presupuestoMensual; }&#10;    public void setPresupuestoMensual(String presupuestoMensual) { this.presupuestoMensual = presupuestoMensual; }&#10;&#10;    public String getMotivacionAdopcion() { return motivacionAdopcion; }&#10;    public void setMotivacionAdopcion(String motivacionAdopcion) { this.motivacionAdopcion = motivacionAdopcion; }&#10;&#10;    public String getConocimientoRaza() { return conocimientoRaza; }&#10;    public void setConocimientoRaza(String conocimientoRaza) { this.conocimientoRaza = conocimientoRaza; }&#10;&#10;    public String getDispuestoEntrenar() { return dispuestoEntrenar; }&#10;    public void setDispuestoEntrenar(String dispuestoEntrenar) { this.dispuestoEntrenar = dispuestoEntrenar; }&#10;&#10;    public String getCompromisoLargoPlazo() { return compromisoLargoPlazo; }&#10;    public void setCompromisoLargoPlazo(String compromisoLargoPlazo) { this.compromisoLargoPlazo = compromisoLargoPlazo; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/AdoptionRequestResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/AdoptionRequestResponse.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class AdoptionRequestResponse {&#10;    private int id;&#10;    private int petId;&#10;    private String status;&#10;    private String createdAt;&#10;    private String petName;&#10;    private String especie;&#10;    private String raza;&#10;    private int edad;&#10;    private String sexo;&#10;    private String imageUrl;&#10;    private String urgencia;&#10;    private String statusText;&#10;    private String statusColor;&#10;    private String createdAtFormatted;&#10;    private String notasAdmin;&#10;&#10;    // Constructor vacío&#10;    public AdoptionRequestResponse() {}&#10;&#10;    // Getters&#10;    public int getId() { return id; }&#10;    public int getPetId() { return petId; }&#10;    public String getStatus() { return status; }&#10;    public String getCreatedAt() { return createdAt; }&#10;    public String getPetName() { return petName; }&#10;    public String getEspecie() { return especie; }&#10;    public String getRaza() { return raza; }&#10;    public int getEdad() { return edad; }&#10;    public String getSexo() { return sexo; }&#10;    public String getImageUrl() { return imageUrl; }&#10;    public String getUrgencia() { return urgencia; }&#10;    public String getStatusText() { return statusText; }&#10;    public String getStatusColor() { return statusColor; }&#10;    public String getCreatedAtFormatted() { return createdAtFormatted; }&#10;    public String getNotasAdmin() { return notasAdmin; }&#10;&#10;    // Setters&#10;    public void setId(int id) { this.id = id; }&#10;    public void setPetId(int petId) { this.petId = petId; }&#10;    public void setStatus(String status) { this.status = status; }&#10;    public void setCreatedAt(String createdAt) { this.createdAt = createdAt; }&#10;    public void setPetName(String petName) { this.petName = petName; }&#10;    public void setEspecie(String especie) { this.especie = especie; }&#10;    public void setRaza(String raza) { this.raza = raza; }&#10;    public void setEdad(int edad) { this.edad = edad; }&#10;    public void setSexo(String sexo) { this.sexo = sexo; }&#10;    public void setImageUrl(String imageUrl) { this.imageUrl = imageUrl; }&#10;    public void setUrgencia(String urgencia) { this.urgencia = urgencia; }&#10;    public void setStatusText(String statusText) { this.statusText = statusText; }&#10;    public void setStatusColor(String statusColor) { this.statusColor = statusColor; }&#10;    public void setCreatedAtFormatted(String createdAtFormatted) { this.createdAtFormatted = createdAtFormatted; }&#10;    public void setNotasAdmin(String notasAdmin) { this.notasAdmin = notasAdmin; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/ChatUser.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/ChatUser.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class ChatUser {&#10;    private int userId;&#10;    private String email;&#10;    private String name;&#10;    private String role;&#10;    private String lastMessage;&#10;    private String lastMessageTime;&#10;    private boolean isLastMessageFromUser;&#10;    private int unreadCount;&#10;&#10;    public ChatUser() {&#10;    }&#10;&#10;    // Getters y Setters&#10;    public int getUserId() {&#10;        return userId;&#10;    }&#10;&#10;    public void setUserId(int userId) {&#10;        this.userId = userId;&#10;    }&#10;&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getRole() {&#10;        return role;&#10;    }&#10;&#10;    public void setRole(String role) {&#10;        this.role = role;&#10;    }&#10;&#10;    public String getLastMessage() {&#10;        return lastMessage;&#10;    }&#10;&#10;    public void setLastMessage(String lastMessage) {&#10;        this.lastMessage = lastMessage;&#10;    }&#10;&#10;    public String getLastMessageTime() {&#10;        return lastMessageTime;&#10;    }&#10;&#10;    public void setLastMessageTime(String lastMessageTime) {&#10;        this.lastMessageTime = lastMessageTime;&#10;    }&#10;&#10;    public boolean isLastMessageFromUser() {&#10;        return isLastMessageFromUser;&#10;    }&#10;&#10;    public void setLastMessageFromUser(boolean lastMessageFromUser) {&#10;        isLastMessageFromUser = lastMessageFromUser;&#10;    }&#10;&#10;    public int getUnreadCount() {&#10;        return unreadCount;&#10;    }&#10;&#10;    public void setUnreadCount(int unreadCount) {&#10;        this.unreadCount = unreadCount;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Message.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Message.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class Message {&#10;    private int id;&#10;    private int senderId;&#10;    private int receiverId;&#10;    private String message;&#10;    private int isRead;&#10;    private String createdAt;&#10;    &#10;    // Información del remitente&#10;    private String senderEmail;&#10;    private String senderName;&#10;    private String senderRole;&#10;    &#10;    // Información del receptor&#10;    private String receiverEmail;&#10;    private String receiverName;&#10;    private String receiverRole;&#10;    &#10;    // Flags para UI&#10;    private boolean isMine;&#10;    private boolean isFromAdmin;&#10;    private boolean isFromUser;&#10;&#10;    public Message() {&#10;    }&#10;&#10;    // Getters y Setters&#10;    public int getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(int id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public int getSenderId() {&#10;        return senderId;&#10;    }&#10;&#10;    public void setSenderId(int senderId) {&#10;        this.senderId = senderId;&#10;    }&#10;&#10;    public int getReceiverId() {&#10;        return receiverId;&#10;    }&#10;&#10;    public void setReceiverId(int receiverId) {&#10;        this.receiverId = receiverId;&#10;    }&#10;&#10;    public String getMessage() {&#10;        return message;&#10;    }&#10;&#10;    public void setMessage(String message) {&#10;        this.message = message;&#10;    }&#10;&#10;    public int getIsRead() {&#10;        return isRead;&#10;    }&#10;&#10;    public void setIsRead(int isRead) {&#10;        this.isRead = isRead;&#10;    }&#10;&#10;    public String getCreatedAt() {&#10;        return createdAt;&#10;    }&#10;&#10;    public void setCreatedAt(String createdAt) {&#10;        this.createdAt = createdAt;&#10;    }&#10;&#10;    public String getSenderEmail() {&#10;        return senderEmail;&#10;    }&#10;&#10;    public void setSenderEmail(String senderEmail) {&#10;        this.senderEmail = senderEmail;&#10;    }&#10;&#10;    public String getSenderName() {&#10;        return senderName;&#10;    }&#10;&#10;    public void setSenderName(String senderName) {&#10;        this.senderName = senderName;&#10;    }&#10;&#10;    public String getSenderRole() {&#10;        return senderRole;&#10;    }&#10;&#10;    public void setSenderRole(String senderRole) {&#10;        this.senderRole = senderRole;&#10;    }&#10;&#10;    public String getReceiverEmail() {&#10;        return receiverEmail;&#10;    }&#10;&#10;    public void setReceiverEmail(String receiverEmail) {&#10;        this.receiverEmail = receiverEmail;&#10;    }&#10;&#10;    public String getReceiverName() {&#10;        return receiverName;&#10;    }&#10;&#10;    public void setReceiverName(String receiverName) {&#10;        this.receiverName = receiverName;&#10;    }&#10;&#10;    public String getReceiverRole() {&#10;        return receiverRole;&#10;    }&#10;&#10;    public void setReceiverRole(String receiverRole) {&#10;        this.receiverRole = receiverRole;&#10;    }&#10;&#10;    public boolean isMine() {&#10;        return isMine;&#10;    }&#10;&#10;    public void setMine(boolean mine) {&#10;        isMine = mine;&#10;    }&#10;&#10;    public boolean isFromAdmin() {&#10;        return isFromAdmin;&#10;    }&#10;&#10;    public void setFromAdmin(boolean fromAdmin) {&#10;        isFromAdmin = fromAdmin;&#10;    }&#10;&#10;    public boolean isFromUser() {&#10;        return isFromUser;&#10;    }&#10;&#10;    public void setFromUser(boolean fromUser) {&#10;        isFromUser = fromUser;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Notification.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Notification.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class Notification {&#10;    private int id;&#10;    private int userId;&#10;    private String type;&#10;    private String title;&#10;    private String message;&#10;    private int isRead;&#10;    private int relatedId;&#10;    private String createdAt;&#10;&#10;    // Constructor vacío&#10;    public Notification() {&#10;    }&#10;&#10;    // Constructor completo&#10;    public Notification(int id, int userId, String type, String title, String message, &#10;                       int isRead, int relatedId, String createdAt) {&#10;        this.id = id;&#10;        this.userId = userId;&#10;        this.type = type;&#10;        this.title = title;&#10;        this.message = message;&#10;        this.isRead = isRead;&#10;        this.relatedId = relatedId;&#10;        this.createdAt = createdAt;&#10;    }&#10;&#10;    // Getters y Setters&#10;    public int getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(int id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public int getUserId() {&#10;        return userId;&#10;    }&#10;&#10;    public void setUserId(int userId) {&#10;        this.userId = userId;&#10;    }&#10;&#10;    public String getType() {&#10;        return type;&#10;    }&#10;&#10;    public void setType(String type) {&#10;        this.type = type;&#10;    }&#10;&#10;    public String getTitle() {&#10;        return title;&#10;    }&#10;&#10;    public void setTitle(String title) {&#10;        this.title = title;&#10;    }&#10;&#10;    public String getMessage() {&#10;        return message;&#10;    }&#10;&#10;    public void setMessage(String message) {&#10;        this.message = message;&#10;    }&#10;&#10;    public int getIsRead() {&#10;        return isRead;&#10;    }&#10;&#10;    public void setIsRead(int isRead) {&#10;        this.isRead = isRead;&#10;    }&#10;&#10;    public int getRelatedId() {&#10;        return relatedId;&#10;    }&#10;&#10;    public void setRelatedId(int relatedId) {&#10;        this.relatedId = relatedId;&#10;    }&#10;&#10;    public String getCreatedAt() {&#10;        return createdAt;&#10;    }&#10;&#10;    public void setCreatedAt(String createdAt) {&#10;        this.createdAt = createdAt;&#10;    }&#10;&#10;    public boolean isRead() {&#10;        return isRead == 1;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Pet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/Pet.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class Pet {&#10;    private String id;&#10;    private String name;&#10;    private String especie;&#10;    private String raza;&#10;    private int edad;&#10;    private String tamano;&#10;    private String sexo;&#10;    private String descripcion;&#10;    private String foto_url;&#10;    private String distrito;&#10;    private boolean is_urgent;&#10;    private int priority;&#10;    private String estado;&#10;    private String created_at;&#10;    private String etiqueta_urgencia;&#10;    private String categoria_edad;&#10;&#10;    // Constructor vacío&#10;    public Pet() {&#10;    }&#10;&#10;    // Getters&#10;    public String getId() { return id; }&#10;    public String getName() { return name; }&#10;    public String getEspecie() { return especie; }&#10;    public String getRaza() { return raza; }&#10;    public int getEdad() { return edad; }&#10;    public String getTamano() { return tamano; }&#10;    public String getSexo() { return sexo; }&#10;    public String getDescripcion() { return descripcion; }&#10;    public String getFotoUrl() { return foto_url; }&#10;    public String getDistrito() { return distrito; }&#10;    public boolean isUrgent() { return is_urgent; }&#10;    public int getPriority() { return priority; }&#10;    public String getEstado() { return estado; }&#10;    public String getCreatedAt() { return created_at; }&#10;    public String getEtiquetaUrgencia() { return etiqueta_urgencia; }&#10;    public String getCategoriaEdad() { return categoria_edad; }&#10;&#10;    // Setters&#10;    public void setId(String id) { this.id = id; }&#10;    public void setName(String name) { this.name = name; }&#10;    public void setEspecie(String especie) { this.especie = especie; }&#10;    public void setRaza(String raza) { this.raza = raza; }&#10;    public void setEdad(int edad) { this.edad = edad; }&#10;    public void setTamano(String tamano) { this.tamano = tamano; }&#10;    public void setSexo(String sexo) { this.sexo = sexo; }&#10;    public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;    public void setFotoUrl(String foto_url) { this.foto_url = foto_url; }&#10;    public void setDistrito(String distrito) { this.distrito = distrito; }&#10;    public void setUrgent(boolean is_urgent) { this.is_urgent = is_urgent; }&#10;    public void setPriority(int priority) { this.priority = priority; }&#10;    public void setEstado(String estado) { this.estado = estado; }&#10;    public void setCreatedAt(String created_at) { this.created_at = created_at; }&#10;    public void setEtiquetaUrgencia(String etiqueta_urgencia) { this.etiqueta_urgencia = etiqueta_urgencia; }&#10;    public void setCategoriaEdad(String categoria_edad) { this.categoria_edad = categoria_edad; }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/UserChat.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/models/UserChat.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.models;&#10;&#10;public class UserChat {&#10;    private int user_id;&#10;    private String email;&#10;    private String name;&#10;    private String role;&#10;    private String last_message;&#10;    private String last_message_time;&#10;    private boolean is_last_message_from_user;&#10;    private int unread_count;&#10;&#10;    // Constructor vacío&#10;    public UserChat() {&#10;    }&#10;&#10;    // Getters y Setters&#10;    public int getUser_id() {&#10;        return user_id;&#10;    }&#10;&#10;    public void setUser_id(int user_id) {&#10;        this.user_id = user_id;&#10;    }&#10;&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getRole() {&#10;        return role;&#10;    }&#10;&#10;    public void setRole(String role) {&#10;        this.role = role;&#10;    }&#10;&#10;    public String getLast_message() {&#10;        return last_message;&#10;    }&#10;&#10;    public void setLast_message(String last_message) {&#10;        this.last_message = last_message;&#10;    }&#10;&#10;    public String getLast_message_time() {&#10;        return last_message_time;&#10;    }&#10;&#10;    public void setLast_message_time(String last_message_time) {&#10;        this.last_message_time = last_message_time;&#10;    }&#10;&#10;    public boolean is_last_message_from_user() {&#10;        return is_last_message_from_user;&#10;    }&#10;&#10;    public void setIs_last_message_from_user(boolean is_last_message_from_user) {&#10;        this.is_last_message_from_user = is_last_message_from_user;&#10;    }&#10;&#10;    public int getUnread_count() {&#10;        return unread_count;&#10;    }&#10;&#10;    public void setUnread_count(int unread_count) {&#10;        this.unread_count = unread_count;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/adoption/AdoptionFormActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/adoption/AdoptionFormActivity.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.adoption;&#10;&#10;import android.app.DatePickerDialog;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.LinearLayout;&#10;import android.widget.ProgressBar;&#10;import android.widget.RadioButton;&#10;import android.widget.RadioGroup;&#10;import android.widget.Spinner;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.api.AdoptionApiService;&#10;import com.example.adoptmev5.models.AdoptionRequest;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Calendar;&#10;import java.util.Locale;&#10;&#10;public class AdoptionFormActivity extends AppCompatActivity {&#10;&#10;    private int currentStep = 1;&#10;    private int userId;&#10;    private int petId;&#10;    private String petName;&#10;    private AdoptionRequest adoptionRequest;&#10;&#10;    // UI Components&#10;    private TextView tvTitle, tvStepIndicator;&#10;    private ProgressBar progressBar;&#10;    private LinearLayout step1Layout, step2Layout, step3Layout, step4Layout;&#10;    private Button btnNext, btnPrevious, btnSubmit;&#10;&#10;    // Step 1: Información Personal&#10;    private EditText etNombresCompletos, etEmail, etTelefono, etFechaNacimiento;&#10;    private EditText etDireccionCompleta, etCiudad, etDistrito;&#10;&#10;    // Step 2: Información del Hogar&#10;    private Spinner spinnerTipoVivienda, spinnerPropietarioAcepta;&#10;    private EditText etMiembrosFamilia;&#10;    private RadioGroup rgHayNinos, rgAlergiasFamilia;&#10;&#10;    // Step 3: Experiencia con Mascotas&#10;    private RadioGroup rgTieneOtrasMascotas;&#10;    private EditText etDescripcionOtrasMascotas, etExperienciaPrevia, etTiempoSolaMascota;&#10;    private RadioGroup rgTieneVeterinario;&#10;    private EditText etPresupuestoMensual;&#10;&#10;    // Step 4: Motivación y Compromiso&#10;    private EditText etMotivacionAdopcion, etConocimientoRaza, etCompromisoLargoPlazo;&#10;    private RadioGroup rgDispuestoEntrenar;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_adoption_form);&#10;&#10;        // Obtener datos del intent&#10;        userId = getIntent().getIntExtra(&quot;user_id&quot;, 0);&#10;        petId = getIntent().getIntExtra(&quot;pet_id&quot;, 0);&#10;        petName = getIntent().getStringExtra(&quot;pet_name&quot;);&#10;&#10;        adoptionRequest = new AdoptionRequest();&#10;        adoptionRequest.setUserId(userId);&#10;        adoptionRequest.setPetId(petId);&#10;&#10;        // Prellenar datos del usuario desde SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        String userNombres = prefs.getString(&quot;nombres&quot;, &quot;&quot;);&#10;        String userApellidos = prefs.getString(&quot;apellidos&quot;, &quot;&quot;);&#10;        String userEmail = prefs.getString(&quot;email&quot;, &quot;&quot;);&#10;        String userTelefono = prefs.getString(&quot;telefono&quot;, &quot;&quot;);&#10;&#10;        initializeViews();&#10;        setupSpinners();&#10;        setupStepNavigation();&#10;&#10;        // Prellenar campos&#10;        etNombresCompletos.setText(userNombres + &quot; &quot; + userApellidos);&#10;        etEmail.setText(userEmail);&#10;        etTelefono.setText(userTelefono);&#10;&#10;        // Configurar selector de fecha&#10;        etFechaNacimiento.setOnClickListener(v -&gt; showDatePicker());&#10;&#10;        showStep(1);&#10;    }&#10;&#10;    private void initializeViews() {&#10;        tvTitle = findViewById(R.id.tv_form_title);&#10;        tvStepIndicator = findViewById(R.id.tv_step_indicator);&#10;        progressBar = findViewById(R.id.progress_bar);&#10;&#10;        step1Layout = findViewById(R.id.step1_layout);&#10;        step2Layout = findViewById(R.id.step2_layout);&#10;        step3Layout = findViewById(R.id.step3_layout);&#10;        step4Layout = findViewById(R.id.step4_layout);&#10;&#10;        btnNext = findViewById(R.id.btn_next);&#10;        btnPrevious = findViewById(R.id.btn_previous);&#10;        btnSubmit = findViewById(R.id.btn_submit);&#10;&#10;        // Step 1&#10;        etNombresCompletos = findViewById(R.id.et_nombres_completos);&#10;        etEmail = findViewById(R.id.et_email);&#10;        etTelefono = findViewById(R.id.et_telefono);&#10;        etFechaNacimiento = findViewById(R.id.et_fecha_nacimiento);&#10;        etDireccionCompleta = findViewById(R.id.et_direccion_completa);&#10;        etCiudad = findViewById(R.id.et_ciudad);&#10;        etDistrito = findViewById(R.id.et_distrito);&#10;&#10;        // Step 2&#10;        spinnerTipoVivienda = findViewById(R.id.spinner_tipo_vivienda);&#10;        spinnerPropietarioAcepta = findViewById(R.id.spinner_propietario_acepta);&#10;        etMiembrosFamilia = findViewById(R.id.et_miembros_familia);&#10;        rgHayNinos = findViewById(R.id.rg_hay_ninos);&#10;        rgAlergiasFamilia = findViewById(R.id.rg_alergias_familia);&#10;&#10;        // Step 3&#10;        rgTieneOtrasMascotas = findViewById(R.id.rg_tiene_otras_mascotas);&#10;        etDescripcionOtrasMascotas = findViewById(R.id.et_descripcion_otras_mascotas);&#10;        etExperienciaPrevia = findViewById(R.id.et_experiencia_previa);&#10;        etTiempoSolaMascota = findViewById(R.id.et_tiempo_sola_mascota);&#10;        rgTieneVeterinario = findViewById(R.id.rg_tiene_veterinario);&#10;        etPresupuestoMensual = findViewById(R.id.et_presupuesto_mensual);&#10;&#10;        // Step 4&#10;        etMotivacionAdopcion = findViewById(R.id.et_motivacion_adopcion);&#10;        etConocimientoRaza = findViewById(R.id.et_conocimiento_raza);&#10;        etCompromisoLargoPlazo = findViewById(R.id.et_compromiso_largo_plazo);&#10;        rgDispuestoEntrenar = findViewById(R.id.rg_dispuesto_entrenar);&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        // Spinner Tipo de Vivienda&#10;        String[] tiposVivienda = {&quot;Casa&quot;, &quot;Departamento&quot;, &quot;Casa con jardín&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterVivienda = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, tiposVivienda);&#10;        adapterVivienda.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerTipoVivienda.setAdapter(adapterVivienda);&#10;&#10;        // Spinner Propietario Acepta&#10;        String[] propietarioAcepta = {&quot;Sí&quot;, &quot;No&quot;, &quot;Soy propietario&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterPropietario = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, propietarioAcepta);&#10;        adapterPropietario.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerPropietarioAcepta.setAdapter(adapterPropietario);&#10;    }&#10;&#10;    private void setupStepNavigation() {&#10;        btnNext.setOnClickListener(v -&gt; {&#10;            if (validateCurrentStep()) {&#10;                saveCurrentStep();&#10;                if (currentStep &lt; 4) {&#10;                    showStep(currentStep + 1);&#10;                }&#10;            }&#10;        });&#10;&#10;        btnPrevious.setOnClickListener(v -&gt; {&#10;            if (currentStep &gt; 1) {&#10;                saveCurrentStep();&#10;                showStep(currentStep - 1);&#10;            }&#10;        });&#10;&#10;        btnSubmit.setOnClickListener(v -&gt; {&#10;            if (validateCurrentStep()) {&#10;                saveCurrentStep();&#10;                submitForm();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void showStep(int step) {&#10;        currentStep = step;&#10;&#10;        // Ocultar todos los pasos&#10;        step1Layout.setVisibility(View.GONE);&#10;        step2Layout.setVisibility(View.GONE);&#10;        step3Layout.setVisibility(View.GONE);&#10;        step4Layout.setVisibility(View.GONE);&#10;&#10;        // Mostrar paso actual&#10;        switch (step) {&#10;            case 1:&#10;                step1Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Información Personal&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 1 de 4&quot;);&#10;                progressBar.setProgress(25);&#10;                btnPrevious.setVisibility(View.GONE);&#10;                btnNext.setVisibility(View.VISIBLE);&#10;                btnSubmit.setVisibility(View.GONE);&#10;                break;&#10;            case 2:&#10;                step2Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Información del Hogar&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 2 de 4&quot;);&#10;                progressBar.setProgress(50);&#10;                btnPrevious.setVisibility(View.VISIBLE);&#10;                btnNext.setVisibility(View.VISIBLE);&#10;                btnSubmit.setVisibility(View.GONE);&#10;                break;&#10;            case 3:&#10;                step3Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Experiencia con Mascotas&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 3 de 4&quot;);&#10;                progressBar.setProgress(75);&#10;                btnPrevious.setVisibility(View.VISIBLE);&#10;                btnNext.setVisibility(View.VISIBLE);&#10;                btnSubmit.setVisibility(View.GONE);&#10;                break;&#10;            case 4:&#10;                step4Layout.setVisibility(View.VISIBLE);&#10;                tvTitle.setText(&quot;Motivación y Compromiso&quot;);&#10;                tvStepIndicator.setText(&quot;Paso 4 de 4&quot;);&#10;                progressBar.setProgress(100);&#10;                btnPrevious.setVisibility(View.VISIBLE);&#10;                btnNext.setVisibility(View.GONE);&#10;                btnSubmit.setVisibility(View.VISIBLE);&#10;                break;&#10;        }&#10;    }&#10;&#10;    private boolean validateCurrentStep() {&#10;        switch (currentStep) {&#10;            case 1:&#10;                if (etNombresCompletos.getText().toString().trim().isEmpty()) {&#10;                    etNombresCompletos.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etEmail.getText().toString().trim().isEmpty()) {&#10;                    etEmail.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etTelefono.getText().toString().trim().isEmpty()) {&#10;                    etTelefono.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etFechaNacimiento.getText().toString().trim().isEmpty()) {&#10;                    etFechaNacimiento.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etDireccionCompleta.getText().toString().trim().isEmpty()) {&#10;                    etDireccionCompleta.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etCiudad.getText().toString().trim().isEmpty()) {&#10;                    etCiudad.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etDistrito.getText().toString().trim().isEmpty()) {&#10;                    etDistrito.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                break;&#10;            case 2:&#10;                if (etMiembrosFamilia.getText().toString().trim().isEmpty()) {&#10;                    etMiembrosFamilia.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (rgHayNinos.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si hay niños en la familia&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (rgAlergiasFamilia.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si hay alergias en la familia&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                break;&#10;            case 3:&#10;                if (rgTieneOtrasMascotas.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si tienes otras mascotas&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (etExperienciaPrevia.getText().toString().trim().isEmpty()) {&#10;                    etExperienciaPrevia.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etTiempoSolaMascota.getText().toString().trim().isEmpty()) {&#10;                    etTiempoSolaMascota.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (rgTieneVeterinario.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si tienes veterinario&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (etPresupuestoMensual.getText().toString().trim().isEmpty()) {&#10;                    etPresupuestoMensual.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                break;&#10;            case 4:&#10;                if (etMotivacionAdopcion.getText().toString().trim().isEmpty()) {&#10;                    etMotivacionAdopcion.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (etConocimientoRaza.getText().toString().trim().isEmpty()) {&#10;                    etConocimientoRaza.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                if (rgDispuestoEntrenar.getCheckedRadioButtonId() == -1) {&#10;                    Toast.makeText(this, &quot;Por favor indica si estás dispuesto a entrenar&quot;, Toast.LENGTH_SHORT).show();&#10;                    return false;&#10;                }&#10;                if (etCompromisoLargoPlazo.getText().toString().trim().isEmpty()) {&#10;                    etCompromisoLargoPlazo.setError(&quot;Campo requerido&quot;);&#10;                    return false;&#10;                }&#10;                break;&#10;        }&#10;        return true;&#10;    }&#10;&#10;    private void saveCurrentStep() {&#10;        switch (currentStep) {&#10;            case 1:&#10;                adoptionRequest.setNombresCompletos(etNombresCompletos.getText().toString().trim());&#10;                adoptionRequest.setEmail(etEmail.getText().toString().trim());&#10;                adoptionRequest.setTelefono(etTelefono.getText().toString().trim());&#10;                adoptionRequest.setFechaNacimiento(etFechaNacimiento.getText().toString().trim());&#10;                adoptionRequest.setDireccionCompleta(etDireccionCompleta.getText().toString().trim());&#10;                adoptionRequest.setCiudad(etCiudad.getText().toString().trim());&#10;                adoptionRequest.setDistrito(etDistrito.getText().toString().trim());&#10;                break;&#10;            case 2:&#10;                adoptionRequest.setTipoVivienda(spinnerTipoVivienda.getSelectedItem().toString());&#10;                adoptionRequest.setPropietarioAceptaMascotas(spinnerPropietarioAcepta.getSelectedItem().toString());&#10;                adoptionRequest.setMiembrosFamilia(Integer.parseInt(etMiembrosFamilia.getText().toString().trim()));&#10;                adoptionRequest.setHayNinos(getRadioButtonText(rgHayNinos));&#10;                adoptionRequest.setAlergiasFamilia(getRadioButtonText(rgAlergiasFamilia));&#10;                break;&#10;            case 3:&#10;                adoptionRequest.setTieneOtrasMascotas(getRadioButtonText(rgTieneOtrasMascotas));&#10;                String descripcionOtras = etDescripcionOtrasMascotas.getText().toString().trim();&#10;                adoptionRequest.setDescripcionOtrasMascotas(descripcionOtras.isEmpty() ? null : descripcionOtras);&#10;                adoptionRequest.setExperienciaPrevia(etExperienciaPrevia.getText().toString().trim());&#10;                adoptionRequest.setTiempoSolaMascota(etTiempoSolaMascota.getText().toString().trim());&#10;                adoptionRequest.setTieneVeterinario(getRadioButtonText(rgTieneVeterinario));&#10;                adoptionRequest.setPresupuestoMensual(etPresupuestoMensual.getText().toString().trim());&#10;                break;&#10;            case 4:&#10;                adoptionRequest.setMotivacionAdopcion(etMotivacionAdopcion.getText().toString().trim());&#10;                adoptionRequest.setConocimientoRaza(etConocimientoRaza.getText().toString().trim());&#10;                adoptionRequest.setDispuestoEntrenar(getRadioButtonText(rgDispuestoEntrenar));&#10;                adoptionRequest.setCompromisoLargoPlazo(etCompromisoLargoPlazo.getText().toString().trim());&#10;                break;&#10;        }&#10;    }&#10;&#10;    private String getRadioButtonText(RadioGroup radioGroup) {&#10;        int selectedId = radioGroup.getCheckedRadioButtonId();&#10;        if (selectedId != -1) {&#10;            RadioButton radioButton = findViewById(selectedId);&#10;            return radioButton.getText().toString();&#10;        }&#10;        return &quot;&quot;;&#10;    }&#10;&#10;    private void showDatePicker() {&#10;        Calendar calendar = Calendar.getInstance();&#10;        int year = calendar.get(Calendar.YEAR);&#10;        int month = calendar.get(Calendar.MONTH);&#10;        int day = calendar.get(Calendar.DAY_OF_MONTH);&#10;&#10;        DatePickerDialog datePickerDialog = new DatePickerDialog(this,&#10;                (view, selectedYear, selectedMonth, selectedDay) -&gt; {&#10;                    Calendar selectedDate = Calendar.getInstance();&#10;                    selectedDate.set(selectedYear, selectedMonth, selectedDay);&#10;                    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.getDefault());&#10;                    etFechaNacimiento.setText(sdf.format(selectedDate.getTime()));&#10;                }, year, month, day);&#10;&#10;        // Establecer fecha máxima (hoy - 18 años)&#10;        calendar.add(Calendar.YEAR, -18);&#10;        datePickerDialog.getDatePicker().setMaxDate(calendar.getTimeInMillis());&#10;&#10;        datePickerDialog.show();&#10;    }&#10;&#10;    private void submitForm() {&#10;        try {&#10;            JSONObject requestData = new JSONObject();&#10;            requestData.put(&quot;user_id&quot;, adoptionRequest.getUserId());&#10;            requestData.put(&quot;pet_id&quot;, adoptionRequest.getPetId());&#10;            requestData.put(&quot;nombres_completos&quot;, adoptionRequest.getNombresCompletos());&#10;            requestData.put(&quot;email&quot;, adoptionRequest.getEmail());&#10;            requestData.put(&quot;telefono&quot;, adoptionRequest.getTelefono());&#10;            requestData.put(&quot;fecha_nacimiento&quot;, adoptionRequest.getFechaNacimiento());&#10;            requestData.put(&quot;direccion_completa&quot;, adoptionRequest.getDireccionCompleta());&#10;            requestData.put(&quot;ciudad&quot;, adoptionRequest.getCiudad());&#10;            requestData.put(&quot;distrito&quot;, adoptionRequest.getDistrito());&#10;            requestData.put(&quot;tipo_vivienda&quot;, adoptionRequest.getTipoVivienda());&#10;            requestData.put(&quot;propietario_acepta_mascotas&quot;, adoptionRequest.getPropietarioAceptaMascotas());&#10;            requestData.put(&quot;miembros_familia&quot;, adoptionRequest.getMiembrosFamilia());&#10;            requestData.put(&quot;hay_ninos&quot;, adoptionRequest.getHayNinos());&#10;            requestData.put(&quot;alergias_familia&quot;, adoptionRequest.getAlergiasFamilia());&#10;            requestData.put(&quot;tiene_otras_mascotas&quot;, adoptionRequest.getTieneOtrasMascotas());&#10;            requestData.put(&quot;descripcion_otras_mascotas&quot;, adoptionRequest.getDescripcionOtrasMascotas());&#10;            requestData.put(&quot;experiencia_previa&quot;, adoptionRequest.getExperienciaPrevia());&#10;            requestData.put(&quot;tiempo_sola_mascota&quot;, adoptionRequest.getTiempoSolaMascota());&#10;            requestData.put(&quot;tiene_veterinario&quot;, adoptionRequest.getTieneVeterinario());&#10;            requestData.put(&quot;presupuesto_mensual&quot;, adoptionRequest.getPresupuestoMensual());&#10;            requestData.put(&quot;motivacion_adopcion&quot;, adoptionRequest.getMotivacionAdopcion());&#10;            requestData.put(&quot;conocimiento_raza&quot;, adoptionRequest.getConocimientoRaza());&#10;            requestData.put(&quot;dispuesto_entrenar&quot;, adoptionRequest.getDispuestoEntrenar());&#10;            requestData.put(&quot;compromiso_largo_plazo&quot;, adoptionRequest.getCompromisoLargoPlazo());&#10;&#10;            // Log del JSON para debug&#10;            android.util.Log.d(&quot;AdoptionForm&quot;, &quot;Enviando solicitud: &quot; + requestData.toString());&#10;&#10;            // Deshabilitar botón mientras se envía&#10;            btnSubmit.setEnabled(false);&#10;            btnSubmit.setText(&quot;Enviando...&quot;);&#10;&#10;            AdoptionApiService.createRequest(requestData, new AdoptionApiService.CreateRequestCallback() {&#10;                @Override&#10;                public void onSuccess(int requestId, String message) {&#10;                    android.util.Log.d(&quot;AdoptionForm&quot;, &quot;Solicitud creada: ID=&quot; + requestId);&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(AdoptionFormActivity.this, message, Toast.LENGTH_LONG).show();&#10;                        // Volver a la pantalla principal&#10;                        finish();&#10;                    });&#10;                }&#10;&#10;                @Override&#10;                public void onError(String error) {&#10;                    android.util.Log.e(&quot;AdoptionForm&quot;, &quot;Error al crear solicitud: &quot; + error);&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(AdoptionFormActivity.this, &quot;Error: &quot; + error, Toast.LENGTH_LONG).show();&#10;                        btnSubmit.setEnabled(true);&#10;                        btnSubmit.setText(&quot;Enviar Solicitud&quot;);&#10;                    });&#10;                }&#10;            });&#10;&#10;        } catch (Exception e) {&#10;            android.util.Log.e(&quot;AdoptionForm&quot;, &quot;Exception al preparar solicitud&quot;, e);&#10;            Toast.makeText(this, &quot;Error al preparar la solicitud: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;            btnSubmit.setEnabled(true);&#10;            btnSubmit.setText(&quot;Enviar Solicitud&quot;);&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/favorites/AdoptionRequestsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/favorites/AdoptionRequestsAdapter.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.favorites;&#10;&#10;import android.graphics.Color;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.AdoptionRequestResponse;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class AdoptionRequestsAdapter extends RecyclerView.Adapter&lt;AdoptionRequestsAdapter.ViewHolder&gt; {&#10;&#10;    private List&lt;AdoptionRequestResponse&gt; requests = new ArrayList&lt;&gt;();&#10;    private OnRequestClickListener listener;&#10;&#10;    public interface OnRequestClickListener {&#10;        void onRequestClick(AdoptionRequestResponse request);&#10;    }&#10;&#10;    public AdoptionRequestsAdapter(OnRequestClickListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void setRequests(List&lt;AdoptionRequestResponse&gt; requests) {&#10;        this.requests = requests != null ? requests : new ArrayList&lt;&gt;();&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_adoption_request, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        AdoptionRequestResponse request = requests.get(position);&#10;        holder.bind(request, listener);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return requests.size();&#10;    }&#10;&#10;    static class ViewHolder extends RecyclerView.ViewHolder {&#10;        private ImageView ivPetImage;&#10;        private TextView tvPetName;&#10;        private TextView tvPetInfo;&#10;        private TextView tvStatus;&#10;        private TextView tvDate;&#10;        private TextView tvRequestId;&#10;        private View statusIndicator;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            ivPetImage = itemView.findViewById(R.id.iv_pet_image);&#10;            tvPetName = itemView.findViewById(R.id.tv_pet_name);&#10;            tvPetInfo = itemView.findViewById(R.id.tv_pet_info);&#10;            tvStatus = itemView.findViewById(R.id.tv_status);&#10;            tvDate = itemView.findViewById(R.id.tv_date);&#10;            tvRequestId = itemView.findViewById(R.id.tv_request_id);&#10;            statusIndicator = itemView.findViewById(R.id.status_indicator);&#10;        }&#10;&#10;        public void bind(AdoptionRequestResponse request, OnRequestClickListener listener) {&#10;            // Nombre de la mascota&#10;            tvPetName.setText(request.getPetName());&#10;&#10;            // Info de la mascota&#10;            String info = request.getEspecie() + &quot; • &quot; + request.getRaza() + &quot; • &quot; + request.getEdad() + &quot; años&quot;;&#10;            tvPetInfo.setText(info);&#10;&#10;            // Estado&#10;            tvStatus.setText(request.getStatusText());&#10;            try {&#10;                int color = Color.parseColor(request.getStatusColor());&#10;                tvStatus.setTextColor(color);&#10;                statusIndicator.setBackgroundColor(color);&#10;            } catch (Exception e) {&#10;                tvStatus.setTextColor(Color.parseColor(&quot;#999999&quot;));&#10;                statusIndicator.setBackgroundColor(Color.parseColor(&quot;#999999&quot;));&#10;            }&#10;&#10;            // Fecha&#10;            tvDate.setText(request.getCreatedAtFormatted());&#10;&#10;            // ID de solicitud&#10;            tvRequestId.setText(&quot;Solicitud #&quot; + request.getId());&#10;&#10;            // Imagen de la mascota&#10;            if (request.getImageUrl() != null &amp;&amp; !request.getImageUrl().isEmpty()) {&#10;                Glide.with(itemView.getContext())&#10;                        .load(request.getImageUrl())&#10;                        .placeholder(R.drawable.search1)&#10;                        .error(R.drawable.search1)&#10;                        .centerCrop()&#10;                        .into(ivPetImage);&#10;            } else {&#10;                ivPetImage.setImageResource(R.drawable.search1);&#10;            }&#10;&#10;            // Click listener&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onRequestClick(request);&#10;                }&#10;            });&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/favorites/FavoritesFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/favorites/FavoritesFragment.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.favorites;&#10;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.lifecycle.ViewModelProvider;&#10;&#10;import com.example.adoptmev5.databinding.FragmentFavoritesBinding;&#10;&#10;public class FavoritesFragment extends Fragment {&#10;&#10;    private FragmentFavoritesBinding binding;&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;        FavoritesViewModel notificationsViewModel =&#10;                new ViewModelProvider(this).get(FavoritesViewModel.class);&#10;&#10;        binding = FragmentFavoritesBinding.inflate(inflater, container, false);&#10;        View root = binding.getRoot();&#10;&#10;        return root;&#10;    }&#10;&#10;    @Override&#10;    public void onDestroyView() {&#10;        super.onDestroyView();&#10;        binding = null;&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.favorites;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.api.AdoptionApiService;&#10;import com.example.adoptmev5.models.AdoptionRequestResponse;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.util.List;&#10;&#10;public class FavoritesFragment extends Fragment {&#10;&#10;    private static final String TAG = &quot;FavoritesFragment&quot;;&#10;    private RecyclerView recyclerRequests;&#10;    private AdoptionRequestsAdapter adapter;&#10;    private ProgressBar progressLoading;&#10;    private View emptyState;&#10;&#10;    // Estadísticas&#10;    private TextView tvTotal, tvPendiente, tvAprobada, tvRechazada;&#10;&#10;    // Botones de filtro&#10;    private Button btnFilterAll, btnFilterPendiente, btnFilterEnRevision, btnFilterAprobada, btnFilterRechazada;&#10;&#10;    private int userId;&#10;    private String currentFilter = null; // null = todas&#10;&#10;    public View onCreateView(@NonNull LayoutInflater inflater,&#10;                             ViewGroup container, Bundle savedInstanceState) {&#10;&#10;        View root = inflater.inflate(R.layout.fragment_favorites, container, false);&#10;&#10;        // Obtener userId de SharedPreferences&#10;        SharedPreferences prefs = requireContext().getSharedPreferences(&quot;adoptme_prefs&quot;, requireContext().MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, 0);&#10;&#10;        // Inicializar vistas&#10;        recyclerRequests = root.findViewById(R.id.recycler_requests);&#10;        progressLoading = root.findViewById(R.id.progress_loading);&#10;        emptyState = root.findViewById(R.id.empty_state);&#10;&#10;        // Estadísticas&#10;        tvTotal = root.findViewById(R.id.tv_total);&#10;        tvPendiente = root.findViewById(R.id.tv_pendiente);&#10;        tvAprobada = root.findViewById(R.id.tv_aprobada);&#10;        tvRechazada = root.findViewById(R.id.tv_rechazada);&#10;&#10;        // Botones de filtro&#10;        btnFilterAll = root.findViewById(R.id.btn_filter_all);&#10;        btnFilterPendiente = root.findViewById(R.id.btn_filter_pendiente);&#10;        btnFilterEnRevision = root.findViewById(R.id.btn_filter_en_revision);&#10;        btnFilterAprobada = root.findViewById(R.id.btn_filter_aprobada);&#10;        btnFilterRechazada = root.findViewById(R.id.btn_filter_rechazada);&#10;&#10;        // Configurar RecyclerView&#10;        recyclerRequests.setLayoutManager(new LinearLayoutManager(getContext()));&#10;        adapter = new AdoptionRequestsAdapter(this::onRequestClick);&#10;        recyclerRequests.setAdapter(adapter);&#10;&#10;        // Configurar filtros&#10;        setupFilterButtons();&#10;&#10;        // Cargar solicitudes&#10;        if (userId != 0) {&#10;            loadRequests();&#10;        } else {&#10;            Toast.makeText(getContext(), &quot;Debes iniciar sesión&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;&#10;        return root;&#10;    }&#10;&#10;    private void setupFilterButtons() {&#10;        btnFilterAll.setOnClickListener(v -&gt; {&#10;            currentFilter = null;&#10;            updateFilterButtonsUI(btnFilterAll);&#10;            loadRequests();&#10;        });&#10;&#10;        btnFilterPendiente.setOnClickListener(v -&gt; {&#10;            currentFilter = &quot;pendiente&quot;;&#10;            updateFilterButtonsUI(btnFilterPendiente);&#10;            loadRequests();&#10;        });&#10;&#10;        btnFilterEnRevision.setOnClickListener(v -&gt; {&#10;            currentFilter = &quot;en_revision&quot;;&#10;            updateFilterButtonsUI(btnFilterEnRevision);&#10;            loadRequests();&#10;        });&#10;&#10;        btnFilterAprobada.setOnClickListener(v -&gt; {&#10;            currentFilter = &quot;aprobada&quot;;&#10;            updateFilterButtonsUI(btnFilterAprobada);&#10;            loadRequests();&#10;        });&#10;&#10;        btnFilterRechazada.setOnClickListener(v -&gt; {&#10;            currentFilter = &quot;rechazada&quot;;&#10;            updateFilterButtonsUI(btnFilterRechazada);&#10;            loadRequests();&#10;        });&#10;    }&#10;&#10;    private void updateFilterButtonsUI(Button activeButton) {&#10;        // Resetear todos los botones&#10;        resetButtonStyle(btnFilterAll);&#10;        resetButtonStyle(btnFilterPendiente);&#10;        resetButtonStyle(btnFilterEnRevision);&#10;        resetButtonStyle(btnFilterAprobada);&#10;        resetButtonStyle(btnFilterRechazada);&#10;&#10;        // Activar el botón seleccionado&#10;        activeButton.setBackgroundTintList(getResources().getColorStateList(android.R.color.holo_orange_dark));&#10;        activeButton.setTextColor(getResources().getColor(android.R.color.white));&#10;    }&#10;&#10;    private void resetButtonStyle(Button button) {&#10;        button.setBackgroundTintList(getResources().getColorStateList(android.R.color.darker_gray));&#10;        button.setTextColor(getResources().getColor(android.R.color.black));&#10;    }&#10;&#10;    private void loadRequests() {&#10;        Log.d(TAG, &quot;loadRequests() - userId: &quot; + userId + &quot;, currentFilter: &quot; + currentFilter);&#10;        &#10;        progressLoading.setVisibility(View.VISIBLE);&#10;        recyclerRequests.setVisibility(View.GONE);&#10;        emptyState.setVisibility(View.GONE);&#10;        &#10;        AdoptionApiService.getMyRequests(userId, currentFilter, new AdoptionApiService.GetMyRequestsCallback() {&#10;            @Override&#10;            public void onSuccess(List&lt;AdoptionRequestResponse&gt; requests, JSONObject stats) {&#10;                Log.d(TAG, &quot;onSuccess - requests: &quot; + (requests != null ? requests.size() : &quot;null&quot;));&#10;                Log.d(TAG, &quot;onSuccess - stats: &quot; + (stats != null ? stats.toString() : &quot;null&quot;));&#10;                &#10;                if (getActivity() == null) return;&#10;                &#10;                getActivity().runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;                    &#10;                    // Actualizar estadísticas (aunque esté vacío, muestra 0)&#10;                    if (stats != null) {&#10;                        tvTotal.setText(String.valueOf(stats.optInt(&quot;total&quot;, 0)));&#10;                        tvPendiente.setText(String.valueOf(stats.optInt(&quot;pendiente&quot;, 0)));&#10;                        tvAprobada.setText(String.valueOf(stats.optInt(&quot;aprobada&quot;, 0)));&#10;                        tvRechazada.setText(String.valueOf(stats.optInt(&quot;rechazada&quot;, 0)));&#10;                    } else {&#10;                        // Si no hay stats, poner todos en 0&#10;                        tvTotal.setText(&quot;0&quot;);&#10;                        tvPendiente.setText(&quot;0&quot;);&#10;                        tvAprobada.setText(&quot;0&quot;);&#10;                        tvRechazada.setText(&quot;0&quot;);&#10;                    }&#10;                    &#10;                    if (requests == null || requests.isEmpty()) {&#10;                        recyclerRequests.setVisibility(View.GONE);&#10;                        emptyState.setVisibility(View.VISIBLE);&#10;                        Log.d(TAG, &quot;Mostrando estado vacío - No hay solicitudes&quot;);&#10;                    } else {&#10;                        recyclerRequests.setVisibility(View.VISIBLE);&#10;                        emptyState.setVisibility(View.GONE);&#10;                        adapter.setRequests(requests);&#10;                        Log.d(TAG, &quot;Mostrando &quot; + requests.size() + &quot; solicitudes&quot;);&#10;                    }&#10;                });&#10;            }&#10;            &#10;            @Override&#10;            public void onError(String error) {&#10;                Log.e(TAG, &quot;onError: &quot; + error);&#10;                &#10;                if (getActivity() == null) return;&#10;                &#10;                getActivity().runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;                    recyclerRequests.setVisibility(View.GONE);&#10;                    emptyState.setVisibility(View.VISIBLE);&#10;                    &#10;                    // Resetear estadísticas a 0 en caso de error&#10;                    tvTotal.setText(&quot;0&quot;);&#10;                    tvPendiente.setText(&quot;0&quot;);&#10;                    tvAprobada.setText(&quot;0&quot;);&#10;                    tvRechazada.setText(&quot;0&quot;);&#10;                    &#10;                    // Mostrar error detallado&#10;                    if (error.contains(&quot;500&quot;)) {&#10;                        Toast.makeText(getContext(), &#10;                            &quot;Error del servidor. Por favor verifica tu backend PHP.\n&quot; + error, &#10;                            Toast.LENGTH_LONG).show();&#10;                    } else {&#10;                        Toast.makeText(getContext(), &quot;Error: &quot; + error, Toast.LENGTH_LONG).show();&#10;                    }&#10;                });&#10;            }&#10;        });&#10;    }&#10;&#10;    private void onRequestClick(AdoptionRequestResponse request) {&#10;        // TODO: Abrir detalles de la solicitud&#10;        Toast.makeText(getContext(), &quot;Solicitud #&quot; + request.getId() + &quot; - &quot; + request.getStatusText(), Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    @Override&#10;    public void onResume() {&#10;        super.onResume();&#10;        // Recargar solicitudes al volver&#10;        if (userId != 0) {&#10;            loadRequests();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/EditProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/EditProfileActivity.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Spinner;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.io.OutputStream;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class EditProfileActivity extends AppCompatActivity {&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private EditText editTextNombres, editTextApellidos, editTextTelefono, editTextDistrito;&#10;    private Spinner spinnerEspecie, spinnerTamano, spinnerEdad;&#10;    private Button buttonSave, buttonCancel;&#10;&#10;    private int userId = -1;&#10;    &#10;    // Variables para almacenar datos originales&#10;    private String originalNombres = &quot;&quot;;&#10;    private String originalApellidos = &quot;&quot;;&#10;    private String originalTelefono = &quot;&quot;;&#10;    private String originalDistrito = &quot;&quot;;&#10;    private String originalEspecie = &quot;&quot;;&#10;    private String originalTamano = &quot;&quot;;&#10;    private String originalEdad = &quot;&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_profile);&#10;&#10;        // Obtener user_id de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;Error: No hay sesión activa&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Inicializar vistas&#10;        editTextNombres = findViewById(R.id.editText_nombres);&#10;        editTextApellidos = findViewById(R.id.editText_apellidos);&#10;        editTextTelefono = findViewById(R.id.editText_telefono);&#10;        editTextDistrito = findViewById(R.id.editText_distrito);&#10;&#10;        spinnerEspecie = findViewById(R.id.spinner_especie);&#10;        spinnerTamano = findViewById(R.id.spinner_tamano);&#10;        spinnerEdad = findViewById(R.id.spinner_edad);&#10;&#10;        buttonSave = findViewById(R.id.button_save);&#10;        buttonCancel = findViewById(R.id.button_cancel);&#10;&#10;        // Configurar spinners&#10;        setupSpinners();&#10;&#10;        // Cargar datos del usuario&#10;        loadUserData();&#10;&#10;        // Listeners&#10;        buttonSave.setOnClickListener(v -&gt; saveProfile());&#10;        buttonCancel.setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        // Especie&#10;        String[] especies = {&quot;Seleccionar&quot;, &quot;Perro&quot;, &quot;Gato&quot;, &quot;Ambos&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterEspecie = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, especies);&#10;        adapterEspecie.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerEspecie.setAdapter(adapterEspecie);&#10;&#10;        // Tamaño&#10;        String[] tamanos = {&quot;Seleccionar&quot;, &quot;Pequeño&quot;, &quot;Mediano&quot;, &quot;Grande&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterTamano = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, tamanos);&#10;        adapterTamano.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerTamano.setAdapter(adapterTamano);&#10;&#10;        // Edad&#10;        String[] edades = {&quot;Seleccionar&quot;, &quot;Cachorro&quot;, &quot;Adulto&quot;, &quot;Senior&quot;};&#10;        ArrayAdapter&lt;String&gt; adapterEdad = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_spinner_item, edades);&#10;        adapterEdad.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerEdad.setAdapter(adapterEdad);&#10;    }&#10;&#10;    private void loadUserData() {&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/users/getUser.php?user_id=&quot; + userId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(10000);&#10;                conn.setReadTimeout(10000);&#10;&#10;                int code = conn.getResponseCode();&#10;                if (code == 200) {&#10;                    BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), &quot;UTF-8&quot;));&#10;                    StringBuilder sb = new StringBuilder();&#10;                    String line;&#10;                    while ((line = br.readLine()) != null) {&#10;                        sb.append(line);&#10;                    }&#10;                    br.close();&#10;&#10;                    JSONObject response = new JSONObject(sb.toString());&#10;&#10;                    // Actualizar UI en el hilo principal&#10;                    runOnUiThread(() -&gt; populateFields(response));&#10;                } else {&#10;                    runOnUiThread(() -&gt; Toast.makeText(EditProfileActivity.this,&#10;                            &quot;Error al cargar datos&quot;, Toast.LENGTH_SHORT).show());&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; Toast.makeText(EditProfileActivity.this,&#10;                        &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show());&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void populateFields(JSONObject data) {&#10;        try {&#10;            // Datos básicos&#10;            String nombres = data.optString(&quot;nombres&quot;, &quot;&quot;);&#10;            String apellidos = data.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;            String telefono = data.optString(&quot;telefono&quot;, &quot;&quot;);&#10;            String distrito = data.optString(&quot;distrito&quot;, &quot;&quot;);&#10;&#10;            // Guardar valores originales&#10;            originalNombres = nombres;&#10;            originalApellidos = apellidos;&#10;            originalTelefono = telefono;&#10;            originalDistrito = distrito;&#10;&#10;            editTextNombres.setText(nombres);&#10;            editTextApellidos.setText(apellidos);&#10;            editTextTelefono.setText(telefono);&#10;            editTextDistrito.setText(distrito);&#10;&#10;            // Preferencias (pueden estar en un objeto anidado &quot;preferencias&quot; o directamente)&#10;            JSONObject prefs = data.optJSONObject(&quot;preferencias&quot;);&#10;            String especie = &quot;&quot;;&#10;            String tamano = &quot;&quot;;&#10;            String edad = &quot;&quot;;&#10;&#10;            if (prefs != null) {&#10;                especie = prefs.optString(&quot;especie&quot;, &quot;&quot;);&#10;                tamano = prefs.optString(&quot;tamano&quot;, &quot;&quot;);&#10;                edad = prefs.optString(&quot;edad&quot;, &quot;&quot;);&#10;            } else {&#10;                especie = data.optString(&quot;especie_preferida&quot;, &quot;&quot;);&#10;                tamano = data.optString(&quot;tamano_preferido&quot;, &quot;&quot;);&#10;                edad = data.optString(&quot;edad_preferida&quot;, &quot;&quot;);&#10;            }&#10;&#10;            // Guardar preferencias originales&#10;            originalEspecie = especie;&#10;            originalTamano = tamano;&#10;            originalEdad = edad;&#10;&#10;            // Seleccionar en spinners&#10;            setSpinnerSelection(spinnerEspecie, especie);&#10;            setSpinnerSelection(spinnerTamano, tamano);&#10;            setSpinnerSelection(spinnerEdad, edad);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            Toast.makeText(this, &quot;Error al cargar datos&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void setSpinnerSelection(Spinner spinner, String value) {&#10;        if (value == null || value.isEmpty()) return;&#10;&#10;        ArrayAdapter adapter = (ArrayAdapter) spinner.getAdapter();&#10;        for (int i = 0; i &lt; adapter.getCount(); i++) {&#10;            if (adapter.getItem(i).toString().equalsIgnoreCase(value)) {&#10;                spinner.setSelection(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    private void saveProfile() {&#10;        final String nombres = editTextNombres.getText().toString().trim();&#10;        final String apellidos = editTextApellidos.getText().toString().trim();&#10;        final String telefono = editTextTelefono.getText().toString().trim();&#10;        final String distrito = editTextDistrito.getText().toString().trim();&#10;&#10;        final String especie = spinnerEspecie.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerEspecie.getSelectedItem().toString() : &quot;&quot;;&#10;        final String tamano = spinnerTamano.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerTamano.getSelectedItem().toString() : &quot;&quot;;&#10;        final String edad = spinnerEdad.getSelectedItemPosition() &gt; 0 ?&#10;                spinnerEdad.getSelectedItem().toString() : &quot;&quot;;&#10;&#10;        // Verificar si hubo cambios&#10;        boolean hayCambios = false;&#10;        &#10;        if (!nombres.equals(originalNombres)) hayCambios = true;&#10;        if (!apellidos.equals(originalApellidos)) hayCambios = true;&#10;        if (!telefono.equals(originalTelefono)) hayCambios = true;&#10;        if (!distrito.equals(originalDistrito)) hayCambios = true;&#10;        if (!especie.equals(originalEspecie)) hayCambios = true;&#10;        if (!tamano.equals(originalTamano)) hayCambios = true;&#10;        if (!edad.equals(originalEdad)) hayCambios = true;&#10;&#10;        if (!hayCambios) {&#10;            Toast.makeText(this, &quot;No hay cambios para guardar&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Validar solo los campos que fueron modificados&#10;        if (!nombres.equals(originalNombres) &amp;&amp; nombres.isEmpty()) {&#10;            Toast.makeText(this, &quot;Los nombres no pueden estar vacíos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (!apellidos.equals(originalApellidos) &amp;&amp; apellidos.isEmpty()) {&#10;            Toast.makeText(this, &quot;Los apellidos no pueden estar vacíos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (!telefono.equals(originalTelefono) &amp;&amp; !telefono.isEmpty() &amp;&amp; telefono.length() != 9) {&#10;            Toast.makeText(this, &quot;El teléfono debe tener 9 dígitos&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Mostrar progress&#10;        buttonSave.setEnabled(false);&#10;        buttonSave.setText(&quot;GUARDANDO...&quot;);&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                JSONObject body = new JSONObject();&#10;                body.put(&quot;user_id&quot;, userId);&#10;                &#10;                // Solo enviar los campos que fueron modificados&#10;                if (!nombres.equals(originalNombres)) {&#10;                    body.put(&quot;nombres&quot;, nombres);&#10;                }&#10;                if (!apellidos.equals(originalApellidos)) {&#10;                    body.put(&quot;apellidos&quot;, apellidos);&#10;                }&#10;                if (!telefono.equals(originalTelefono)) {&#10;                    body.put(&quot;telefono&quot;, telefono);&#10;                }&#10;                if (!distrito.equals(originalDistrito)) {&#10;                    body.put(&quot;distrito&quot;, distrito);&#10;                }&#10;                if (!especie.equals(originalEspecie)) {&#10;                    body.put(&quot;especie_preferida&quot;, especie);&#10;                }&#10;                if (!tamano.equals(originalTamano)) {&#10;                    body.put(&quot;tamano_preferido&quot;, tamano);&#10;                }&#10;                if (!edad.equals(originalEdad)) {&#10;                    body.put(&quot;edad_preferida&quot;, edad);&#10;                }&#10;&#10;                JSONObject response = putJson(BASE_URL + &quot;/users/updateUser.php&quot;, body);&#10;&#10;                runOnUiThread(() -&gt; {&#10;                    buttonSave.setEnabled(true);&#10;                    buttonSave.setText(&quot;GUARDAR CAMBIOS&quot;);&#10;&#10;                    if (response != null &amp;&amp; response.optBoolean(&quot;success&quot;, false)) {&#10;                        String message = response.optString(&quot;message&quot;, &quot;Perfil actualizado&quot;);&#10;                        Toast.makeText(EditProfileActivity.this, message, Toast.LENGTH_LONG).show();&#10;                        finish(); // Volver a ProfileActivity&#10;                    } else {&#10;                        String errorMsg = response != null ?&#10;                                response.optString(&quot;error&quot;, response.optString(&quot;message&quot;, &quot;Error al actualizar&quot;)) :&#10;                                &quot;Error de conexión&quot;;&#10;                        Toast.makeText(EditProfileActivity.this, errorMsg, Toast.LENGTH_LONG).show();&#10;                    }&#10;                });&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    buttonSave.setEnabled(true);&#10;                    buttonSave.setText(&quot;GUARDAR CAMBIOS&quot;);&#10;                    Toast.makeText(EditProfileActivity.this,&#10;                            &quot;Error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private JSONObject putJson(String urlString, JSONObject payload) throws IOException, JSONException {&#10;        URL url = new URL(urlString);&#10;        HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;        try {&#10;            conn.setConnectTimeout(10000);&#10;            conn.setReadTimeout(10000);&#10;            conn.setRequestMethod(&quot;PUT&quot;);&#10;            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json; charset=UTF-8&quot;);&#10;            conn.setDoOutput(true);&#10;&#10;            try (OutputStream os = conn.getOutputStream()) {&#10;                os.write(payload.toString().getBytes(&quot;UTF-8&quot;));&#10;                os.flush();&#10;            }&#10;&#10;            int code = conn.getResponseCode();&#10;            InputStreamReader isr = new InputStreamReader(&#10;                    code &gt;= 400 ? conn.getErrorStream() : conn.getInputStream(), &quot;UTF-8&quot;);&#10;            BufferedReader br = new BufferedReader(isr);&#10;            StringBuilder sb = new StringBuilder();&#10;            String line;&#10;            while ((line = br.readLine()) != null) {&#10;                sb.append(line);&#10;            }&#10;            br.close();&#10;            String respStr = sb.toString();&#10;            if (respStr.isEmpty()) return null;&#10;            return new JSONObject(respStr);&#10;        } finally {&#10;            conn.disconnect();&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/HelpActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/HelpActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.os.Bundle;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.adoptmev5.R;&#10;&#10;public class HelpActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_help);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.AdminUsersListActivity;&#10;import com.example.adoptmev5.ChatActivity;&#10;&#10;public class HelpActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        // Obtener el rol del usuario&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        int userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;        String userRole = prefs.getString(&quot;role&quot;, &quot;user&quot;);&#10;&#10;        if (userId == -1) {&#10;            Toast.makeText(this, &quot;Usuario no identificado&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Redirigir según el rol&#10;        Intent intent;&#10;        if (&quot;admin&quot;.equals(userRole)) {&#10;            // Admin ve lista de usuarios&#10;            intent = new Intent(this, AdminUsersListActivity.class);&#10;        } else {&#10;            // Usuario ve chat grupal con admins&#10;            intent = new Intent(this, ChatActivity.class);&#10;        }&#10;&#10;        startActivity(intent);&#10;        finish(); // Cerrar esta actividad&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/MenuFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/MenuFragment.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.adoptmev5.AdminUsersListActivity;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.UserChatActivity;&#10;&#10;public class MenuFragment extends Fragment {&#10;&#10;    private LinearLayout menuHelp;&#10;    private TextView userName;&#10;    private SharedPreferences prefs;&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {&#10;        View view = inflater.inflate(R.layout.fragment_menu, container, false);&#10;&#10;        prefs = requireActivity().getSharedPreferences(&quot;adoptme_prefs&quot;, requireContext().MODE_PRIVATE);&#10;&#10;        initViews(view);&#10;        setupUserInfo();&#10;        setupListeners();&#10;&#10;        return view;&#10;    }&#10;&#10;    private void initViews(View view) {&#10;        menuHelp = view.findViewById(R.id.menu_help);&#10;        userName = view.findViewById(R.id.user_name);&#10;    }&#10;&#10;    private void setupUserInfo() {&#10;        String nombres = prefs.getString(&quot;nombres&quot;, &quot;&quot;);&#10;        String apellidos = prefs.getString(&quot;apellidos&quot;, &quot;&quot;);&#10;        String fullName = nombres + &quot; &quot; + apellidos;&#10;&#10;        if (userName != null) {&#10;            userName.setText(fullName.trim().isEmpty() ? &quot;Usuario AdoptMe&quot; : fullName);&#10;        }&#10;    }&#10;&#10;    private void setupListeners() {&#10;        if (menuHelp != null) {&#10;            menuHelp.setOnClickListener(v -&gt; openChatBasedOnRole());&#10;        }&#10;    }&#10;&#10;    private void openChatBasedOnRole() {&#10;        String role = prefs.getString(&quot;role&quot;, &quot;user&quot;);&#10;        Intent intent;&#10;&#10;        if (role.equals(&quot;admin&quot;)) {&#10;            // Si es admin, abrir lista de usuarios&#10;            intent = new Intent(requireContext(), AdminUsersListActivity.class);&#10;        } else {&#10;            // Si es user, abrir chat grupal con admins&#10;            intent = new Intent(requireContext(), UserChatActivity.class);&#10;        }&#10;&#10;        startActivity(intent);&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.adoptmev5.AdminUsersListActivity;&#10;import com.example.adoptmev5.LoginActivity;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.UserChatActivity;&#10;&#10;public class MenuFragment extends Fragment {&#10;&#10;    private LinearLayout menuCompatibilityTest, menuProfile, menuSettings, menuHelp, menuAbout, menuLogout;&#10;    private TextView userName;&#10;    private SharedPreferences prefs;&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {&#10;        View view = inflater.inflate(R.layout.fragment_menu, container, false);&#10;&#10;        prefs = requireActivity().getSharedPreferences(&quot;adoptme_prefs&quot;, requireContext().MODE_PRIVATE);&#10;&#10;        initViews(view);&#10;        setupUserInfo();&#10;        setupListeners();&#10;&#10;        return view;&#10;    }&#10;&#10;    private void initViews(View view) {&#10;        userName = view.findViewById(R.id.user_name);&#10;        menuCompatibilityTest = view.findViewById(R.id.menu_compatibility_test);&#10;        menuProfile = view.findViewById(R.id.menu_profile);&#10;        menuSettings = view.findViewById(R.id.menu_settings);&#10;        menuHelp = view.findViewById(R.id.menu_help);&#10;        menuAbout = view.findViewById(R.id.menu_about);&#10;        menuLogout = view.findViewById(R.id.menu_logout);&#10;    }&#10;&#10;    private void setupUserInfo() {&#10;        String nombres = prefs.getString(&quot;nombres&quot;, &quot;&quot;);&#10;        String apellidos = prefs.getString(&quot;apellidos&quot;, &quot;&quot;);&#10;        String fullName = nombres + &quot; &quot; + apellidos;&#10;&#10;        if (userName != null) {&#10;            userName.setText(fullName.trim().isEmpty() ? &quot;Usuario AdoptMe&quot; : fullName);&#10;        }&#10;    }&#10;&#10;    private void setupListeners() {&#10;        if (menuCompatibilityTest != null) {&#10;            menuCompatibilityTest.setOnClickListener(v -&gt;&#10;                Toast.makeText(requireContext(), &quot;Test de Compatibilidad&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        }&#10;&#10;        if (menuProfile != null) {&#10;            menuProfile.setOnClickListener(v -&gt; {&#10;                Intent intent = new Intent(requireContext(), EditProfileActivity.class);&#10;                startActivity(intent);&#10;            });&#10;        }&#10;&#10;        if (menuSettings != null) {&#10;            menuSettings.setOnClickListener(v -&gt;&#10;                Toast.makeText(requireContext(), &quot;Configuración&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        }&#10;&#10;        if (menuHelp != null) {&#10;            menuHelp.setOnClickListener(v -&gt; openChatBasedOnRole());&#10;        }&#10;&#10;        if (menuAbout != null) {&#10;            menuAbout.setOnClickListener(v -&gt;&#10;                Toast.makeText(requireContext(), &quot;Acerca de AdoptMe&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        }&#10;&#10;        if (menuLogout != null) {&#10;            menuLogout.setOnClickListener(v -&gt; logout());&#10;        }&#10;    }&#10;&#10;    private void openChatBasedOnRole() {&#10;        String role = prefs.getString(&quot;role&quot;, &quot;user&quot;);&#10;        Intent intent;&#10;&#10;        if (role.equals(&quot;admin&quot;)) {&#10;            // Si es admin, abrir lista de usuarios&#10;            intent = new Intent(requireContext(), AdminUsersListActivity.class);&#10;        } else {&#10;            // Si es user, abrir chat grupal con admins&#10;            intent = new Intent(requireContext(), UserChatActivity.class);&#10;        }&#10;&#10;        startActivity(intent);&#10;    }&#10;&#10;    private void logout() {&#10;        // Limpiar SharedPreferences&#10;        prefs.edit().clear().apply();&#10;&#10;        // Ir a LoginActivity&#10;        Intent intent = new Intent(requireContext(), LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        requireActivity().finish();&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/ProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/menu/ProfileActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.adoptmev5.LoginActivity;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;    private ImageView imageViewEditProfile;&#10;    private LinearLayout optionCompatibility, optionPreferences, optionMyProfile,&#10;            optionSettings, optionHelp, optionAbout, optionLogout;&#10;&#10;    private int userId = -1;&#10;                        String apellidos = response.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String fullName = (nombres + &quot; &quot; + apellidos).trim();&#10;&#10;                        if (fullName.isEmpty()) {&#10;                            fullName = response.optString(&quot;email&quot;, &quot;Usuario AdoptMe&quot;);&#10;                        }&#10;&#10;                        textViewUserName.setText(fullName);&#10;                        textViewProfileStatus.setText(&quot;Ver perfil completo&quot;);&#10;                    });&#10;                } else {&#10;                    runOnUiThread(() -&gt; {&#10;                        textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                        textViewProfileStatus.setText(&quot;Error al cargar perfil&quot;);&#10;                    });&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                    textViewProfileStatus.setText(&quot;Error de conexión&quot;);&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void logout() {&#10;        // Limpiar SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        prefs.edit().clear().apply();&#10;&#10;        // Ir a LoginActivity&#10;        Intent intent = new Intent(ProfileActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.menu;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.adoptmev5.LoginActivity;&#10;import com.example.adoptmev5.R;&#10;&#10;import org.json.JSONObject;&#10;&#10;import java.io.BufferedReader;&#10;import java.io.InputStreamReader;&#10;import java.net.HttpURLConnection;&#10;import java.net.URL;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;    private static final String BASE_URL = &quot;http://10.0.2.2/adopciones_api&quot;;&#10;&#10;    private ImageView imageViewEditProfile;&#10;    private TextView textViewUserName, textViewProfileStatus;&#10;    private LinearLayout optionCompatibility, optionPreferences, optionMyProfile,&#10;            optionSettings, optionHelp, optionAbout, optionLogout;&#10;&#10;    private int userId = -1;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_profile);&#10;&#10;        // Obtener userId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, -1);&#10;&#10;        // Inicializar vistas&#10;        textViewUserName = findViewById(R.id.textView_user_name);&#10;        textViewProfileStatus = findViewById(R.id.textView_profile_status);&#10;        imageViewEditProfile = findViewById(R.id.imageView_edit_profile);&#10;&#10;        optionCompatibility = findViewById(R.id.option_compatibility);&#10;        optionPreferences = findViewById(R.id.option_preferences);&#10;        optionMyProfile = findViewById(R.id.option_my_profile);&#10;        optionSettings = findViewById(R.id.option_settings);&#10;        optionHelp = findViewById(R.id.option_help);&#10;        optionAbout = findViewById(R.id.option_about);&#10;        optionLogout = findViewById(R.id.option_logout);&#10;&#10;        // Cargar datos del usuario&#10;        loadUserProfile();&#10;&#10;        // Configurar listeners&#10;        optionLogout.setOnClickListener(v -&gt; logout());&#10;        &#10;        // Otras opciones (implementar según necesites)&#10;        optionMyProfile.setOnClickListener(v -&gt; &#10;            Toast.makeText(this, &quot;Perfil&quot;, Toast.LENGTH_SHORT).show()&#10;        );&#10;&#10;        optionSettings.setOnClickListener(v -&gt; &#10;            Toast.makeText(this, &quot;Configuración&quot;, Toast.LENGTH_SHORT).show()&#10;        );&#10;&#10;        optionHelp.setOnClickListener(v -&gt; &#10;            Toast.makeText(this, &quot;Ayuda&quot;, Toast.LENGTH_SHORT).show()&#10;        );&#10;&#10;        optionAbout.setOnClickListener(v -&gt; &#10;            Toast.makeText(this, &quot;Acerca de&quot;, Toast.LENGTH_SHORT).show()&#10;        );&#10;    }&#10;&#10;    private void loadUserProfile() {&#10;        if (userId == -1) {&#10;            textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;            textViewProfileStatus.setText(&quot;Error: Sesión no válida&quot;);&#10;            return;&#10;        }&#10;&#10;        new Thread(() -&gt; {&#10;            try {&#10;                URL url = new URL(BASE_URL + &quot;/users/getUser.php?id=&quot; + userId);&#10;                HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#10;                conn.setRequestMethod(&quot;GET&quot;);&#10;                conn.setConnectTimeout(5000);&#10;&#10;                int responseCode = conn.getResponseCode();&#10;                if (responseCode == HttpURLConnection.HTTP_OK) {&#10;                    BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#10;                    StringBuilder response = new StringBuilder();&#10;                    String line;&#10;                    while ((line = reader.readLine()) != null) {&#10;                        response.append(line);&#10;                    }&#10;                    reader.close();&#10;&#10;                    JSONObject jsonResponse = new JSONObject(response.toString());&#10;                    &#10;                    runOnUiThread(() -&gt; {&#10;                        String nombres = jsonResponse.optString(&quot;nombres&quot;, &quot;&quot;);&#10;                        String apellidos = jsonResponse.optString(&quot;apellidos&quot;, &quot;&quot;);&#10;                        String fullName = (nombres + &quot; &quot; + apellidos).trim();&#10;&#10;                        if (fullName.isEmpty()) {&#10;                            fullName = jsonResponse.optString(&quot;email&quot;, &quot;Usuario AdoptMe&quot;);&#10;                        }&#10;&#10;                        textViewUserName.setText(fullName);&#10;                        textViewProfileStatus.setText(&quot;Ver perfil completo&quot;);&#10;                    });&#10;                } else {&#10;                    runOnUiThread(() -&gt; {&#10;                        textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                        textViewProfileStatus.setText(&quot;Error al cargar perfil&quot;);&#10;                    });&#10;                }&#10;                conn.disconnect();&#10;&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;                runOnUiThread(() -&gt; {&#10;                    textViewUserName.setText(&quot;Usuario AdoptMe&quot;);&#10;                    textViewProfileStatus.setText(&quot;Error de conexión&quot;);&#10;                });&#10;            }&#10;        }).start();&#10;    }&#10;&#10;    private void logout() {&#10;        // Limpiar SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        prefs.edit().clear().apply();&#10;&#10;        // Ir a LoginActivity&#10;        Intent intent = new Intent(ProfileActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/notifications/NotificationsActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/notifications/NotificationsActivity.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.notifications;&#10;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.LinearLayout;&#10;import android.widget.ProgressBar;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.api.NotificationApiService;&#10;import com.example.adoptmev5.models.Notification;&#10;&#10;import java.util.List;&#10;&#10;public class NotificationsActivity extends AppCompatActivity {&#10;&#10;    private static final String TAG = &quot;NotificationsActivity&quot;;&#10;    &#10;    private RecyclerView recyclerNotifications;&#10;    private ProgressBar progressLoading;&#10;    private LinearLayout emptyState;&#10;    private NotificationsAdapter adapter;&#10;    private int userId;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_notifications);&#10;&#10;        // Configurar toolbar&#10;        Toolbar toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;        toolbar.setNavigationOnClickListener(v -&gt; finish());&#10;&#10;        // Obtener userId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, 0);&#10;&#10;        // Inicializar vistas&#10;        recyclerNotifications = findViewById(R.id.recycler_notifications);&#10;        progressLoading = findViewById(R.id.progress_loading);&#10;        emptyState = findViewById(R.id.empty_state);&#10;&#10;        // Configurar RecyclerView&#10;        recyclerNotifications.setLayoutManager(new LinearLayoutManager(this));&#10;        adapter = new NotificationsAdapter(this::onNotificationClick);&#10;        recyclerNotifications.setAdapter(adapter);&#10;&#10;        // Cargar notificaciones&#10;        if (userId != 0) {&#10;            loadNotifications();&#10;        } else {&#10;            Toast.makeText(this, &quot;Error: Usuario no encontrado&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;        }&#10;    }&#10;&#10;    private void loadNotifications() {&#10;        Log.d(TAG, &quot;Cargando notificaciones para userId: &quot; + userId);&#10;        &#10;        progressLoading.setVisibility(View.VISIBLE);&#10;        recyclerNotifications.setVisibility(View.GONE);&#10;        emptyState.setVisibility(View.GONE);&#10;&#10;        NotificationApiService.getNotifications(userId, new NotificationApiService.NotificationsCallback() {&#10;            @Override&#10;            public void onSuccess(List&lt;Notification&gt; notifications) {&#10;                Log.d(TAG, &quot;Notificaciones recibidas: &quot; + notifications.size());&#10;                &#10;                runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;                    &#10;                    if (notifications.isEmpty()) {&#10;                        recyclerNotifications.setVisibility(View.GONE);&#10;                        emptyState.setVisibility(View.VISIBLE);&#10;                    } else {&#10;                        recyclerNotifications.setVisibility(View.VISIBLE);&#10;                        emptyState.setVisibility(View.GONE);&#10;                        adapter.setNotifications(notifications);&#10;                    }&#10;                });&#10;            }&#10;&#10;            @Override&#10;            public void onError(String error) {&#10;                Log.e(TAG, &quot;Error al cargar notificaciones: &quot; + error);&#10;                &#10;                runOnUiThread(() -&gt; {&#10;                    progressLoading.setVisibility(View.GONE);&#10;                    recyclerNotifications.setVisibility(View.GONE);&#10;                    emptyState.setVisibility(View.VISIBLE);&#10;                    Toast.makeText(NotificationsActivity.this, &#10;                        &quot;Error al cargar notificaciones: &quot; + error, &#10;                        Toast.LENGTH_LONG).show();&#10;                });&#10;            }&#10;        });&#10;    }&#10;&#10;    private void onNotificationClick(Notification notification) {&#10;        Log.d(TAG, &quot;Notificación clickeada: &quot; + notification.getId());&#10;        &#10;        // Marcar como leída si no está leída&#10;        if (!notification.isRead()) {&#10;            NotificationApiService.markAsRead(notification.getId(), &#10;                new NotificationApiService.NotificationsCallback() {&#10;                    @Override&#10;                    public void onSuccess(List&lt;Notification&gt; notifications) {&#10;                        Log.d(TAG, &quot;Notificación marcada como leída&quot;);&#10;                        // Recargar notificaciones&#10;                        loadNotifications();&#10;                    }&#10;&#10;                    @Override&#10;                    public void onError(String error) {&#10;                        Log.e(TAG, &quot;Error al marcar como leída: &quot; + error);&#10;                    }&#10;                });&#10;        }&#10;&#10;        // Aquí puedes abrir la pantalla de detalles según el tipo&#10;        if (&quot;nueva_solicitud&quot;.equals(notification.getType())) {&#10;            // TODO: Abrir detalles de la solicitud con notification.getRelatedId()&#10;            Toast.makeText(this, &quot;Abrir solicitud #&quot; + notification.getRelatedId(), &#10;                Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Recargar notificaciones al volver a la pantalla&#10;        if (userId != 0) {&#10;            loadNotifications();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/notifications/NotificationsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/notifications/NotificationsAdapter.java" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.notifications;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.Notification;&#10;&#10;import java.text.ParseException;&#10;import java.text.SimpleDateFormat;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class NotificationsAdapter extends RecyclerView.Adapter&lt;NotificationsAdapter.NotificationViewHolder&gt; {&#10;&#10;    private List&lt;Notification&gt; notifications = new ArrayList&lt;&gt;();&#10;    private OnNotificationClickListener listener;&#10;&#10;    public interface OnNotificationClickListener {&#10;        void onNotificationClick(Notification notification);&#10;    }&#10;&#10;    public NotificationsAdapter(OnNotificationClickListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void setNotifications(List&lt;Notification&gt; notifications) {&#10;        this.notifications = notifications;&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public NotificationViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_notification, parent, false);&#10;        return new NotificationViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull NotificationViewHolder holder, int position) {&#10;        Notification notification = notifications.get(position);&#10;        holder.bind(notification, listener);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return notifications.size();&#10;    }&#10;&#10;    static class NotificationViewHolder extends RecyclerView.ViewHolder {&#10;        TextView title, message, date;&#10;        View unreadIndicator;&#10;        ImageView icon;&#10;&#10;        public NotificationViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            title = itemView.findViewById(R.id.notification_title);&#10;            message = itemView.findViewById(R.id.notification_message);&#10;            date = itemView.findViewById(R.id.notification_date);&#10;            unreadIndicator = itemView.findViewById(R.id.unread_indicator);&#10;            icon = itemView.findViewById(R.id.notification_icon);&#10;        }&#10;&#10;        public void bind(Notification notification, OnNotificationClickListener listener) {&#10;            title.setText(notification.getTitle());&#10;            message.setText(notification.getMessage());&#10;            date.setText(getTimeAgo(notification.getCreatedAt()));&#10;&#10;            // Mostrar indicador de no leído&#10;            if (notification.isRead()) {&#10;                unreadIndicator.setVisibility(View.GONE);&#10;                // Hacer el texto menos prominente&#10;                title.setAlpha(0.7f);&#10;                message.setAlpha(0.7f);&#10;            } else {&#10;                unreadIndicator.setVisibility(View.VISIBLE);&#10;                title.setAlpha(1.0f);&#10;                message.setAlpha(1.0f);&#10;            }&#10;&#10;            // Configurar icono según tipo&#10;            if (&quot;nueva_solicitud&quot;.equals(notification.getType())) {&#10;                icon.setImageResource(android.R.drawable.ic_dialog_email);&#10;            } else {&#10;                icon.setImageResource(android.R.drawable.ic_dialog_info);&#10;            }&#10;&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onNotificationClick(notification);&#10;                }&#10;            });&#10;        }&#10;&#10;        private String getTimeAgo(String createdAt) {&#10;            try {&#10;                SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;, Locale.getDefault());&#10;                Date date = sdf.parse(createdAt);&#10;                if (date == null) return createdAt;&#10;&#10;                long diff = System.currentTimeMillis() - date.getTime();&#10;                long seconds = diff / 1000;&#10;                long minutes = seconds / 60;&#10;                long hours = minutes / 60;&#10;                long days = hours / 24;&#10;&#10;                if (seconds &lt; 60) {&#10;                    return &quot;Ahora&quot;;&#10;                } else if (minutes &lt; 60) {&#10;                    return &quot;Hace &quot; + minutes + (minutes == 1 ? &quot; minuto&quot; : &quot; minutos&quot;);&#10;                } else if (hours &lt; 24) {&#10;                    return &quot;Hace &quot; + hours + (hours == 1 ? &quot; hora&quot; : &quot; horas&quot;);&#10;                } else if (days &lt; 7) {&#10;                    return &quot;Hace &quot; + days + (days == 1 ? &quot; día&quot; : &quot; días&quot;);&#10;                } else {&#10;                    SimpleDateFormat displayFormat = new SimpleDateFormat(&quot;dd/MM/yyyy HH:mm&quot;, Locale.getDefault());&#10;                    return displayFormat.format(date);&#10;                }&#10;            } catch (ParseException e) {&#10;                return createdAt;&#10;            }&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetDetailActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetDetailActivity.java" />
              <option name="originalContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.os.Bundle;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;&#10;public class PetDetailActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_pet_detail);&#10;&#10;        ImageView petImage = findViewById(R.id.pet_image);&#10;        TextView petName = findViewById(R.id.pet_name);&#10;        TextView petDescription = findViewById(R.id.pet_description);&#10;&#10;        // Nuevos campos&#10;        TextView petAge = findViewById(R.id.pet_age);&#10;        TextView petWeight = findViewById(R.id.pet_weight);&#10;        TextView petHeight = findViewById(R.id.pet_height);&#10;&#10;        // Recibimos datos desde el intent&#10;        String name = getIntent().getStringExtra(&quot;pet_name&quot;);&#10;        String description = getIntent().getStringExtra(&quot;pet_description&quot;);&#10;        String fotoUrl = getIntent().getStringExtra(&quot;pet_foto_url&quot;);&#10;        String especie = getIntent().getStringExtra(&quot;pet_especie&quot;);&#10;        int imageRes = getIntent().getIntExtra(&quot;pet_image&quot;, R.drawable.search1);&#10;&#10;        // Extras nuevos&#10;        String age = getIntent().getStringExtra(&quot;pet_age&quot;);&#10;        String weight = getIntent().getStringExtra(&quot;pet_weight&quot;);&#10;        String height = getIntent().getStringExtra(&quot;pet_height&quot;);&#10;&#10;        // Setear valores&#10;        petName.setText(name);&#10;        petDescription.setText(description);&#10;&#10;        // Cargar imagen desde URL usando Glide&#10;        if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;            Glide.with(this)&#10;                    .load(fotoUrl)&#10;                    .placeholder(getPlaceholderByEspecie(especie))&#10;                    .error(getPlaceholderByEspecie(especie))&#10;                    .centerCrop()&#10;                    .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                    .into(petImage);&#10;        } else {&#10;            // Fallback a imagen estática si no hay URL&#10;            petImage.setImageResource(imageRes);&#10;        }&#10;&#10;        if (age != null) petAge.setText(age);&#10;        if (weight != null) petWeight.setText(weight);&#10;        if (height != null) petHeight.setText(height);&#10;    }&#10;&#10;    /**&#10;     * Obtener placeholder según la especie&#10;     */&#10;    private int getPlaceholderByEspecie(String especie) {&#10;        if (especie == null) return R.drawable.search1;&#10;&#10;        if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;            return R.drawable.search1;&#10;        } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;            return R.drawable.search2;&#10;        } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;            return R.drawable.search5;&#10;        } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;            return R.drawable.search3;&#10;        } else {&#10;            return R.drawable.search1;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.api.AdoptionApiService;&#10;import com.example.adoptmev5.ui.adoption.AdoptionFormActivity;&#10;&#10;public class PetDetailActivity extends AppCompatActivity {&#10;&#10;    private static final String TAG = &quot;PetDetailActivity&quot;;&#10;    private String petId;&#10;    private int userId;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_pet_detail);&#10;&#10;        ImageView petImage = findViewById(R.id.pet_image);&#10;        TextView petName = findViewById(R.id.pet_name);&#10;        TextView petDescription = findViewById(R.id.pet_description);&#10;        Button btnAdoptNow = findViewById(R.id.btn_adopt_now);&#10;&#10;        // Nuevos campos&#10;        TextView petAge = findViewById(R.id.pet_age);&#10;        TextView petWeight = findViewById(R.id.pet_weight);&#10;        TextView petHeight = findViewById(R.id.pet_height);&#10;&#10;        // Obtener userId de SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(&quot;adoptme_prefs&quot;, MODE_PRIVATE);&#10;        userId = prefs.getInt(&quot;user_id&quot;, 0);&#10;&#10;        // Recibimos datos desde el intent&#10;        petId = getIntent().getStringExtra(&quot;pet_id&quot;);&#10;        &#10;        // Log de depuración&#10;        Log.d(TAG, &quot;userId: &quot; + userId);&#10;        Log.d(TAG, &quot;petId recibido: &quot; + petId);&#10;        &#10;        String name = getIntent().getStringExtra(&quot;pet_name&quot;);&#10;        String description = getIntent().getStringExtra(&quot;pet_description&quot;);&#10;        String fotoUrl = getIntent().getStringExtra(&quot;pet_foto_url&quot;);&#10;        String especie = getIntent().getStringExtra(&quot;pet_especie&quot;);&#10;        int imageRes = getIntent().getIntExtra(&quot;pet_image&quot;, R.drawable.search1);&#10;&#10;        // Extras nuevos&#10;        String age = getIntent().getStringExtra(&quot;pet_age&quot;);&#10;        String weight = getIntent().getStringExtra(&quot;pet_weight&quot;);&#10;        String height = getIntent().getStringExtra(&quot;pet_height&quot;);&#10;&#10;        // Setear valores&#10;        petName.setText(name);&#10;        petDescription.setText(description);&#10;&#10;        // Cargar imagen desde URL usando Glide&#10;        if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;            Glide.with(this)&#10;                    .load(fotoUrl)&#10;                    .placeholder(getPlaceholderByEspecie(especie))&#10;                    .error(getPlaceholderByEspecie(especie))&#10;                    .centerCrop()&#10;                    .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                    .into(petImage);&#10;        } else {&#10;            // Fallback a imagen estática si no hay URL&#10;            petImage.setImageResource(imageRes);&#10;        }&#10;&#10;        if (age != null) petAge.setText(age);&#10;        if (weight != null) petWeight.setText(weight);&#10;        if (height != null) petHeight.setText(height);&#10;&#10;        // Configurar botón de adoptar&#10;        btnAdoptNow.setOnClickListener(v -&gt; {&#10;            Log.d(TAG, &quot;Botón Adoptar presionado&quot;);&#10;            Log.d(TAG, &quot;userId actual: &quot; + userId);&#10;            Log.d(TAG, &quot;petId actual: &quot; + petId);&#10;            &#10;            if (userId == 0) {&#10;                Toast.makeText(this, &quot;Debes iniciar sesión para adoptar&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;&#10;            if (petId == null || petId.isEmpty()) {&#10;                Log.e(TAG, &quot;ERROR: petId es null o vacío&quot;);&#10;                Toast.makeText(this, &quot;Error: ID de mascota no válido (petId: &quot; + petId + &quot;)&quot;, Toast.LENGTH_LONG).show();&#10;                return;&#10;            }&#10;&#10;            // Verificar si puede aplicar&#10;            checkCanApply();&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Verificar si el usuario puede aplicar a esta mascota&#10;     */&#10;    private void checkCanApply() {&#10;        // Convertir petId a int para la API&#10;        int petIdInt;&#10;        try {&#10;            petIdInt = Integer.parseInt(petId);&#10;        } catch (NumberFormatException e) {&#10;            Toast.makeText(this, &quot;Error: ID de mascota inválido&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        AdoptionApiService.checkActiveRequest(userId, petIdInt, new AdoptionApiService.CheckRequestCallback() {&#10;            @Override&#10;            public void onSuccess(boolean canApply, String message, boolean hasActiveRequest) {&#10;                runOnUiThread(() -&gt; {&#10;                    if (canApply) {&#10;                        // Abrir formulario de adopción&#10;                        Intent intent = new Intent(PetDetailActivity.this, AdoptionFormActivity.class);&#10;                        intent.putExtra(&quot;user_id&quot;, userId);&#10;                        intent.putExtra(&quot;pet_id&quot;, petIdInt);&#10;                        intent.putExtra(&quot;pet_name&quot;, getIntent().getStringExtra(&quot;pet_name&quot;));&#10;                        startActivity(intent);&#10;                    } else {&#10;                        Toast.makeText(PetDetailActivity.this, message, Toast.LENGTH_LONG).show();&#10;                    }&#10;                });&#10;            }&#10;&#10;            @Override&#10;            public void onError(String error) {&#10;                runOnUiThread(() -&gt; {&#10;                    Toast.makeText(PetDetailActivity.this, &quot;Error: &quot; + error, Toast.LENGTH_SHORT).show();&#10;                });&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Obtener placeholder según la especie&#10;     */&#10;    private int getPlaceholderByEspecie(String especie) {&#10;        if (especie == null) return R.drawable.search1;&#10;&#10;        if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;            return R.drawable.search1;&#10;        } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;            return R.drawable.search2;&#10;        } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;            return R.drawable.search5;&#10;        } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;            return R.drawable.search3;&#10;        } else {&#10;            return R.drawable.search1;&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetsAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/adoptmev5/ui/search/PetsAdapter.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.adoptmev5.ui.search;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.adoptmev5.R;&#10;import com.example.adoptmev5.models.Pet;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class PetsAdapter extends RecyclerView.Adapter&lt;PetsAdapter.PetViewHolder&gt; {&#10;&#10;    private List&lt;Pet&gt; pets = new ArrayList&lt;&gt;();&#10;    private OnPetClickListener listener;&#10;&#10;    public interface OnPetClickListener {&#10;        void onPetClick(Pet pet);&#10;    }&#10;&#10;    public PetsAdapter(OnPetClickListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void setPets(List&lt;Pet&gt; pets) {&#10;        this.pets = pets != null ? pets : new ArrayList&lt;&gt;();&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public PetViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_pet_card, parent, false);&#10;        return new PetViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull PetViewHolder holder, int position) {&#10;        Pet pet = pets.get(position);&#10;        holder.bind(pet, listener);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return pets.size();&#10;    }&#10;&#10;    static class PetViewHolder extends RecyclerView.ViewHolder {&#10;        private ImageView petImage;&#10;        private TextView petName;&#10;        private TextView petInfo;&#10;        private TextView petAge;&#10;        private TextView petDistrito;&#10;        private Button btnAdopt;&#10;        private View urgentBadge;&#10;&#10;        public PetViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            petImage = itemView.findViewById(R.id.pet_image);&#10;            petName = itemView.findViewById(R.id.pet_name);&#10;            petInfo = itemView.findViewById(R.id.pet_info);&#10;            petAge = itemView.findViewById(R.id.pet_age);&#10;            petDistrito = itemView.findViewById(R.id.pet_distrito);&#10;            btnAdopt = itemView.findViewById(R.id.btn_adopt);&#10;            urgentBadge = itemView.findViewById(R.id.urgent_badge);&#10;        }&#10;&#10;        public void bind(Pet pet, OnPetClickListener listener) {&#10;            petName.setText(pet.getName());&#10;            petInfo.setText(pet.getEspecie() + &quot; • &quot; + pet.getRaza());&#10;            petAge.setText(pet.getEdad() + &quot; años&quot;);&#10;            petDistrito.setText(pet.getDistrito());&#10;&#10;            // Mostrar badge urgente&#10;            urgentBadge.setVisibility(pet.isUrgent() ? View.VISIBLE : View.GONE);&#10;&#10;            // Cargar imagen desde URL usando Glide&#10;            String fotoUrl = pet.getFotoUrl();&#10;            if (fotoUrl != null &amp;&amp; !fotoUrl.isEmpty()) {&#10;                Glide.with(itemView.getContext())&#10;                        .load(fotoUrl)&#10;                        .placeholder(getPlaceholderByEspecie(pet.getEspecie()))&#10;                        .error(getPlaceholderByEspecie(pet.getEspecie()))&#10;                        .centerCrop()&#10;                        .diskCacheStrategy(DiskCacheStrategy.ALL)&#10;                        .into(petImage);&#10;            } else {&#10;                // Usar placeholder si no hay URL&#10;                petImage.setImageResource(getPlaceholderByEspecie(pet.getEspecie()));&#10;            }&#10;&#10;            // Click listeners&#10;            btnAdopt.setOnClickListener(v -&gt; {&#10;                if (listener != null) listener.onPetClick(pet);&#10;            });&#10;&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) listener.onPetClick(pet);&#10;            });&#10;        }&#10;&#10;        /**&#10;         * Obtener placeholder según la especie&#10;         */&#10;        private int getPlaceholderByEspecie(String especie) {&#10;            if (especie == null) return R.drawable.search1;&#10;            &#10;            if (especie.equalsIgnoreCase(&quot;Perro&quot;)) {&#10;                return R.drawable.search1;&#10;            } else if (especie.equalsIgnoreCase(&quot;Gato&quot;)) {&#10;                return R.drawable.search2;&#10;            } else if (especie.equalsIgnoreCase(&quot;Ave&quot;)) {&#10;                return R.drawable.search5;&#10;            } else if (especie.equalsIgnoreCase(&quot;Conejo&quot;)) {&#10;                return R.drawable.search3;&#10;            } else {&#10;                return R.drawable.search1;&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/badge_circle.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/badge_circle.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;#F44336&quot; /&gt;&#10;&lt;/shape&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_arrow_back.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_arrow_back.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#FFFFFF&quot;&#10;        android:pathData=&quot;M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/notification_badge_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/notification_badge_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;#F44336&quot; /&gt;&#10;    &lt;size&#10;        android:width=&quot;20dp&quot;&#10;        android:height=&quot;20dp&quot; /&gt;&#10;&lt;/shape&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/rounded_edittext_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/rounded_edittext_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#F5F5F5&quot; /&gt;&#10;    &lt;corners android:radius=&quot;20dp&quot; /&gt;&#10;    &lt;stroke&#10;        android:width=&quot;1dp&quot;&#10;        android:color=&quot;#E0E0E0&quot; /&gt;&#10;&lt;/shape&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_admin_users_list.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_admin_users_list.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/header&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:background=&quot;#6200EE&quot;&#10;        android:elevation=&quot;4dp&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/btn_back&quot;&#10;            android:layout_width=&quot;40dp&quot;&#10;            android:layout_height=&quot;40dp&quot;&#10;            android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;            android:padding=&quot;8dp&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_revert&quot;&#10;            app:tint=&quot;#FFFFFF&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Mensajes de Usuarios&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- RecyclerView para lista de usuarios --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/users_recycler_view&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:clipToPadding=&quot;false&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/header&quot; /&gt;&#10;&#10;    &lt;!-- Loading indicator --&gt;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/loading_progress&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- Empty state --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/empty_state&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:layout_width=&quot;80dp&quot;&#10;            android:layout_height=&quot;80dp&quot;&#10;            android:alpha=&quot;0.3&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_myplaces&quot;&#10;            app:tint=&quot;#666666&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:text=&quot;No hay mensajes aún&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_adoption_form.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_adoption_form.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;!-- Header --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_form_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Formulario de Adopción&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_step_indicator&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Paso 1 de 4&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progress_bar&quot;&#10;            style=&quot;?android:attr/progressBarStyleHorizontal&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:progress=&quot;25&quot;&#10;            android:max=&quot;100&quot;&#10;            android:progressTint=&quot;#FF6F61&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Step 1: Información Personal --&gt;&#10;        &lt;include layout=&quot;@layout/step1_personal_info&quot; /&gt;&#10;&#10;        &lt;!-- Step 2: Información del Hogar --&gt;&#10;        &lt;include layout=&quot;@layout/step2_home_info&quot; /&gt;&#10;&#10;        &lt;!-- Step 3: Experiencia con Mascotas --&gt;&#10;        &lt;include layout=&quot;@layout/step3_pet_experience&quot; /&gt;&#10;&#10;        &lt;!-- Step 4: Motivación y Compromiso --&gt;&#10;        &lt;include layout=&quot;@layout/step4_motivation&quot; /&gt;&#10;&#10;        &lt;!-- Botones de Navegación --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&#10;            android:weightSum=&quot;2&quot;&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_previous&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Anterior&quot;&#10;                android:backgroundTint=&quot;#999999&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:visibility=&quot;gone&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_next&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Siguiente&quot;&#10;                android:backgroundTint=&quot;#FF6F61&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_submit&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Enviar Solicitud&quot;&#10;                android:backgroundTint=&quot;#4CAF50&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:visibility=&quot;gone&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_chat.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_chat.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;!-- Toolbar --&gt;&#10;    &lt;com.google.android.material.appbar.MaterialToolbar&#10;        android:id=&quot;@+id/toolbar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;?attr/actionBarSize&quot;&#10;        android:background=&quot;?attr/colorPrimary&quot;&#10;        android:elevation=&quot;4dp&quot;&#10;        app:title=&quot;Chat de Soporte&quot;&#10;        app:titleTextColor=&quot;@android:color/white&quot;&#10;        app:navigationIcon=&quot;@drawable/ic_arrow_back&quot; /&gt;&#10;&#10;    &lt;!-- Recycler de mensajes --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/messages_recycler&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_weight=&quot;1&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        android:clipToPadding=&quot;false&quot; /&gt;&#10;&#10;    &lt;!-- Loading indicator --&gt;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/loading_progress&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;center&quot;&#10;        android:visibility=&quot;gone&quot; /&gt;&#10;&#10;    &lt;!-- Input area --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@android:color/white&quot;&#10;        android:elevation=&quot;8dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;8dp&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/message_input&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:background=&quot;@drawable/rounded_edittext_background&quot;&#10;            android:hint=&quot;Escribe tu mensaje...&quot;&#10;            android:maxLines=&quot;4&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:textSize=&quot;15sp&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.button.MaterialButton&#10;            android:id=&quot;@+id/send_button&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:text=&quot;Enviar&quot;&#10;            app:cornerRadius=&quot;20dp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;!-- Título --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Editar Perfil&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textColor=&quot;#3A538D&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_gravity=&quot;center_horizontal&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Sección: Datos Personales --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;DATOS PERSONALES&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Nombres --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Nombres&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_nombres&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;textPersonName&quot;&#10;                android:hint=&quot;Ingresa tus nombres&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Apellidos --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Apellidos&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_apellidos&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;textPersonName&quot;&#10;                android:hint=&quot;Ingresa tus apellidos&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Teléfono --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Teléfono&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_telefono&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;phone&quot;&#10;                android:hint=&quot;987654321&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot;&#10;                android:maxLength=&quot;9&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Distrito --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;20dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Distrito&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editText_distrito&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:inputType=&quot;text&quot;&#10;                android:hint=&quot;Ej: San Isidro, Miraflores&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textColorHint=&quot;#999999&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Sección: Preferencias --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;PREFERENCIAS DE MASCOTAS&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Especie Preferida --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Especie Preferida&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_especie&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Tamaño Preferido --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;10dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tamaño Preferido&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_tamano&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Edad Preferida --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;&#10;            android:elevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Edad Preferida&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#3A538D&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;6dp&quot; /&gt;&#10;&#10;            &lt;Spinner&#10;                android:id=&quot;@+id/spinner_edad&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;42dp&quot;&#10;                android:background=&quot;#F8F9FA&quot;&#10;                android:padding=&quot;10dp&quot;&#10;                android:spinnerMode=&quot;dropdown&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Botón Guardar --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/button_save&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;52dp&quot;&#10;            android:text=&quot;GUARDAR CAMBIOS&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:backgroundTint=&quot;#3A538D&quot;&#10;            android:elevation=&quot;6dp&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Cancelar --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/button_cancel&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;CANCELAR&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:backgroundTint=&quot;#EEEEEE&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_navbar.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_navbar.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/container&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:paddingTop=&quot;?attr/actionBarSize&quot;&gt;&#10;&#10;&#10;    &lt;com.google.android.material.bottomnavigation.BottomNavigationView&#10;        android:id=&quot;@+id/nav_view&quot;&#10;        android:layout_width=&quot;390dp&quot;&#10;        android:layout_height=&quot;90dp&quot;&#10;        android:layout_marginBottom=&quot;0dp&quot;&#10;        android:background=&quot;@drawable/bg_bottom_nav&quot;&#10;        app:itemBackground=&quot;@drawable/bg_nav_item_selected&quot;&#10;        app:itemIconTint=&quot;@color/nav_item_colors&quot;&#10;        app:itemTextColor=&quot;@color/nav_item_colors&quot;&#10;        app:labelVisibilityMode=&quot;unlabeled&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.473&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:menu=&quot;@menu/bottom_nav_menu&quot; /&gt;&#10;&#10;    &lt;fragment&#10;        android:id=&quot;@+id/nav_host_fragment_activity_navbar&quot;&#10;        android:name=&quot;androidx.navigation.fragment.NavHostFragment&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        app:defaultNavHost=&quot;true&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@id/nav_view&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:navGraph=&quot;@navigation/mobile_navigation&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/container&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fitsSystemWindows=&quot;true&quot;&gt;&#10;&#10;    &lt;!-- AppBar con notificaciones --&gt;&#10;    &lt;include&#10;        android:id=&quot;@+id/app_bar&quot;&#10;        layout=&quot;@layout/app_bar_main&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- Fragment Container --&gt;&#10;    &lt;fragment&#10;        android:id=&quot;@+id/nav_host_fragment_activity_navbar&quot;&#10;        android:name=&quot;androidx.navigation.fragment.NavHostFragment&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:defaultNavHost=&quot;true&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/app_bar&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@id/nav_view&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:navGraph=&quot;@navigation/mobile_navigation&quot; /&gt;&#10;&#10;    &lt;!-- Bottom Navigation --&gt;&#10;    &lt;com.google.android.material.bottomnavigation.BottomNavigationView&#10;        android:id=&quot;@+id/nav_view&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;90dp&quot;&#10;        android:background=&quot;@drawable/bg_bottom_nav&quot;&#10;        app:itemBackground=&quot;@drawable/bg_nav_item_selected&quot;&#10;        app:itemIconTint=&quot;@color/nav_item_colors&quot;&#10;        app:itemTextColor=&quot;@color/nav_item_colors&quot;&#10;        app:labelVisibilityMode=&quot;unlabeled&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;&#10;        app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;        app:menu=&quot;@menu/bottom_nav_menu&quot; /&gt;&#10;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_notifications.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_notifications.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;!-- Toolbar --&gt;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;@color/primary&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot;&#10;            app:navigationIcon=&quot;@android:drawable/ic_menu_close_clear_cancel&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Notificaciones&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;20sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;/androidx.appcompat.widget.Toolbar&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;!-- Contenido Principal --&gt;&#10;    &lt;FrameLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;!-- RecyclerView de notificaciones --&gt;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/recycler_notifications&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:padding=&quot;8dp&quot;&#10;            android:clipToPadding=&quot;false&quot;&#10;            android:visibility=&quot;visible&quot; /&gt;&#10;&#10;        &lt;!-- ProgressBar --&gt;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progress_loading&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;!-- Estado vacío --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/empty_state&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:padding=&quot;32dp&quot;&#10;            android:visibility=&quot;gone&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;120dp&quot;&#10;                android:layout_height=&quot;120dp&quot;&#10;                android:src=&quot;@android:drawable/ic_dialog_email&quot;&#10;                android:tint=&quot;@android:color/darker_gray&quot;&#10;                android:alpha=&quot;0.3&quot;&#10;                android:contentDescription=&quot;Sin notificaciones&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;No tienes notificaciones&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textColor=&quot;@android:color/darker_gray&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Aquí aparecerán las notificaciones importantes&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textColor=&quot;@android:color/darker_gray&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:alpha=&quot;0.7&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_profile.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.ui.menu.ProfileActivity&quot;&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;#F5F7FA&quot;&#10;    tools:context=&quot;.ui.menu.ProfileActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Header con foto de perfil --&gt;&#10;        &lt;RelativeLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;@android:color/white&quot;&#10;            android:padding=&quot;20dp&quot;&#10;            android:elevation=&quot;4dp&quot;&gt;&#10;&#10;            &lt;!-- Foto de perfil circular --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageView_profile_photo&quot;&#10;                android:layout_width=&quot;60dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:layout_alignParentStart=&quot;true&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:src=&quot;@drawable/user1&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:contentDescription=&quot;Foto de perfil&quot; /&gt;&#10;&#10;            &lt;!-- Información del usuario --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/layout_user_info&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_toEndOf=&quot;@id/imageView_profile_photo&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textView_user_name&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Usuario AdoptMe&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textColor=&quot;#333333&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textView_profile_status&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Ver perfil completo&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;#999999&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Botón de editar (lápiz) --&gt;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageView_edit_profile&quot;&#10;                android:layout_width=&quot;40dp&quot;&#10;                android:layout_height=&quot;40dp&quot;&#10;                android:layout_alignParentEnd=&quot;true&quot;&#10;                android:layout_centerVertical=&quot;true&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_edit&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Editar perfil&quot;&#10;                android:tint=&quot;#3A538D&quot; /&gt;&#10;&#10;        &lt;/RelativeLayout&gt;&#10;&#10;        &lt;!-- Lista de opciones del menú --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;!-- Test de Compatibilidad --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_compatibility&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_compass&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Test de compatibilidad&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Test de Compatibilidad&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Encuentra tu mascota ideal&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Preferencias --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_preferences&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_preferences&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Preferencias&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Preferencias&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Tipo de mascotas, ubicación y más&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Mi Perfil --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_my_profile&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_myplaces&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Mi perfil&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Mi Perfil&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Información personal y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:background=&quot;#F5F7FA&quot; /&gt;&#10;&#10;            &lt;!-- Configuración --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_settings&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_manage&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Configuración&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Configuración&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Notificaciones, privacidad y cuenta&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Ayuda y Soporte --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_help&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_help&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Ayuda&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Ayuda y Soporte&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Centro de ayuda y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;            &lt;!-- Acerca de AdoptMe --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_about&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_info_details&quot;&#10;                    android:tint=&quot;#666666&quot;&#10;                    android:contentDescription=&quot;Acerca de&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Acerca de AdoptMe&quot;&#10;                        android:textSize=&quot;15sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Versión 1.0 • Términos y privacidad&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#999999&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_more&quot;&#10;                    android:tint=&quot;#CCCCCC&quot;&#10;                    android:rotation=&quot;270&quot;&#10;                    android:contentDescription=&quot;Ir&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:background=&quot;#F5F7FA&quot; /&gt;&#10;&#10;            &lt;!-- Cerrar Sesión --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/option_logout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:background=&quot;@android:color/white&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:foreground=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_lock_power_off&quot;&#10;                    android:tint=&quot;#FF5252&quot;&#10;                    android:contentDescription=&quot;Cerrar sesión&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Cerrar Sesión&quot;&#10;                    android:textSize=&quot;15sp&quot;&#10;                    android:textColor=&quot;#FF5252&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:layout_marginStart=&quot;16dp&quot;&#10;                    android:layout_gravity=&quot;center_vertical&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_user_chat.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_user_chat.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/header&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:background=&quot;#6200EE&quot;&#10;        android:elevation=&quot;4dp&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/btn_back&quot;&#10;            android:layout_width=&quot;40dp&quot;&#10;            android:layout_height=&quot;40dp&quot;&#10;            android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;            android:padding=&quot;8dp&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_revert&quot;&#10;            app:tint=&quot;#FFFFFF&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/chat_title&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Soporte AdoptMe&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/chat_subtitle&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Respuesta en línea&quot;&#10;                android:textColor=&quot;#E0E0E0&quot;&#10;                android:textSize=&quot;12sp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- RecyclerView para mensajes --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/messages_recycler_view&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:clipToPadding=&quot;false&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/message_input_container&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/header&quot; /&gt;&#10;&#10;    &lt;!-- Loading indicator --&gt;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/loading_progress&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- Contenedor de entrada de mensaje --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/message_input_container&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;#FFFFFF&quot;&#10;        android:elevation=&quot;4dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/message_input&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:background=&quot;@android:drawable/edit_text&quot;&#10;            android:hint=&quot;Escribe un mensaje...&quot;&#10;            android:maxLines=&quot;4&quot;&#10;            android:minHeight=&quot;40dp&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btn_send&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;            app:tint=&quot;#6200EE&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_verify.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;28dp&quot;&#10;    android:background=&quot;#F5F7FA&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Verificar cuenta&quot;&#10;        android:textSize=&quot;22sp&quot;&#10;        android:textColor=&quot;#3A538D&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_gravity=&quot;center_horizontal&quot;&#10;        android:layout_marginTop=&quot;20dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Ingresa el código de verificación enviado a tu correo&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textColor=&quot;#666666&quot;&#10;        android:layout_marginTop=&quot;12dp&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/editText_code&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:inputType=&quot;number&quot;&#10;        android:hint=&quot;Código (6 dígitos)&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;#FFFFFF&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_verify&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VERIFICAR&quot;&#10;        android:textColor=&quot;@android:color/white&quot;&#10;        android:backgroundTint=&quot;#3A538D&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/button_skip&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;48dp&quot;&#10;        android:text=&quot;VOLVER AL LOGIN&quot;&#10;        android:layout_marginTop=&quot;12dp&quot;&#10;        android:backgroundTint=&quot;#CCCCCC&quot;&#10;        android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/app_bar_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/app_bar_main.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;com.google.android.material.appbar.AppBarLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/app_bar_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;    android:elevation=&quot;4dp&quot;&#10;    android:fitsSystemWindows=&quot;false&quot;&gt;&#10;&#10;    &lt;androidx.appcompat.widget.Toolbar&#10;        android:id=&quot;@+id/toolbar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;?attr/actionBarSize&quot;&#10;        android:background=&quot;@color/primary&quot;&#10;        app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;            &lt;!-- Título --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/toolbar_title&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;AdoptMe&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;20sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginStart=&quot;16dp&quot; /&gt;&#10;&#10;            &lt;!-- Icono de notificaciones (extremo derecho) --&gt;&#10;            &lt;FrameLayout&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&gt;&#10;&#10;                &lt;ImageButton&#10;                    android:id=&quot;@+id/btn_notifications&quot;&#10;                    android:layout_width=&quot;48dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                    android:src=&quot;@android:drawable/ic_popup_reminder&quot;&#10;                    app:tint=&quot;@android:color/white&quot;&#10;                    android:contentDescription=&quot;@string/notifications&quot; /&gt;&#10;&#10;                &lt;!-- Badge de notificaciones --&gt;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/notification_badge&quot;&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:layout_gravity=&quot;top|end&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot;&#10;                    android:layout_marginEnd=&quot;4dp&quot;&#10;                    android:background=&quot;@drawable/notification_badge_background&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:text=&quot;3&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:textSize=&quot;11sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:visibility=&quot;gone&quot; /&gt;&#10;            &lt;/FrameLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/androidx.appcompat.widget.Toolbar&gt;&#10;&#10;&lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_menu.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F8F8F8&quot;&#10;    tools:context=&quot;.ui.menu.MenuFragment&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Header Profile Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;20dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/profile_image&quot;&#10;                android:layout_width=&quot;60dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:src=&quot;@drawable/user1&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:background=&quot;@drawable/circle_background&quot; /&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginLeft=&quot;16dp&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/user_name&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Usuario AdoptMe&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/user_status&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Ver perfil completo&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:textColor=&quot;#666666&quot;&#10;                    android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;24dp&quot;&#10;                android:layout_height=&quot;24dp&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_edit&quot;&#10;                android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Divider --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;        &lt;!-- Menu Items Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Test de Compatibilidad --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_compatibility_test&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_agenda&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Test de Compatibilidad&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Encuentra tu mascota ideal&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Preferencias con menú desplegable --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;!-- Header de Preferencias --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/menu_preferences_header&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:background=&quot;?attr/selectableItemBackground&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;40dp&quot;&#10;                        android:layout_height=&quot;40dp&quot;&#10;                        android:src=&quot;@android:drawable/ic_menu_preferences&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:layout_marginLeft=&quot;16dp&quot;&#10;                        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Preferencias&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:textColor=&quot;#333333&quot;&#10;                            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Tipo de mascotas, ubicación y más&quot;&#10;                            android:textSize=&quot;12sp&quot;&#10;                            android:textColor=&quot;#666666&quot;&#10;                            android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:id=&quot;@+id/preferences_arrow&quot;&#10;                        android:layout_width=&quot;20dp&quot;&#10;                        android:layout_height=&quot;20dp&quot;&#10;                        android:src=&quot;@android:drawable/arrow_down_float&quot;&#10;                        android:alpha=&quot;0.7&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;!-- Submenu de Preferencias (oculto por defecto) --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/preferences_submenu&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:background=&quot;#F8F8F8&quot;&#10;                    android:visibility=&quot;gone&quot;&#10;                    android:paddingLeft=&quot;16dp&quot;&#10;                    android:paddingRight=&quot;16dp&quot;&#10;                    android:paddingBottom=&quot;8dp&quot;&gt;&#10;&#10;                    &lt;!-- Tema de la Aplicación --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_tema&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_view&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Tema de la Aplicación&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Notificaciones --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_notificaciones&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/stat_notify_chat&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Notificaciones&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Filtros de Mascotas --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_filtros&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_search&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Filtros de Mascotas&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Ubicación --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_ubicacion&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_mapmode&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Ubicación&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Accesibilidad --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_accesibilidad&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_zoom&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Accesibilidad&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Mi Perfil --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_profile&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_myplaces&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Mi Perfil&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Información personal y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Divider --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;        &lt;!-- Settings Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Configuración --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_settings&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_manage&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Configuración&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Notificaciones, privacidad y cuenta&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Ayuda y Soporte --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_help&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_help&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Ayuda y Soporte&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Centro de ayuda y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Acerca de --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_about&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_info_details&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Acerca de AdoptMe&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Versión 1.0 • Términos y privacidad&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Divider --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;        &lt;!-- Logout Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_logout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_revert&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:text=&quot;Cerrar Sesión&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textColor=&quot;#333333&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Bottom Padding --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;20dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F8F8F8&quot;&#10;    tools:context=&quot;.ui.menu.MenuFragment&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Header Profile Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;20dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/profile_image&quot;&#10;                android:layout_width=&quot;60dp&quot;&#10;                android:layout_height=&quot;60dp&quot;&#10;                android:src=&quot;@drawable/user1&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:background=&quot;@drawable/circle_background&quot; /&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginLeft=&quot;16dp&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/user_name&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Usuario AdoptMe&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/user_status&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Ver perfil completo&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:textColor=&quot;#666666&quot;&#10;                    android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;24dp&quot;&#10;                android:layout_height=&quot;24dp&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_edit&quot;&#10;                android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Divider --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;        &lt;!-- Menu Items Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Test de Compatibilidad --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_compatibility_test&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_agenda&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Test de Compatibilidad&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Encuentra tu mascota ideal&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Preferencias con menú desplegable --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;!-- Header de Preferencias --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/menu_preferences_header&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:background=&quot;?attr/selectableItemBackground&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;40dp&quot;&#10;                        android:layout_height=&quot;40dp&quot;&#10;                        android:src=&quot;@android:drawable/ic_menu_preferences&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:layout_marginLeft=&quot;16dp&quot;&#10;                        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Preferencias&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:textColor=&quot;#333333&quot;&#10;                            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Tipo de mascotas, ubicación y más&quot;&#10;                            android:textSize=&quot;12sp&quot;&#10;                            android:textColor=&quot;#666666&quot;&#10;                            android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:id=&quot;@+id/preferences_arrow&quot;&#10;                        android:layout_width=&quot;20dp&quot;&#10;                        android:layout_height=&quot;20dp&quot;&#10;                        android:src=&quot;@android:drawable/arrow_down_float&quot;&#10;                        android:alpha=&quot;0.7&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;!-- Submenu de Preferencias (oculto por defecto) --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/preferences_submenu&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:background=&quot;#F8F8F8&quot;&#10;                    android:visibility=&quot;gone&quot;&#10;                    android:paddingLeft=&quot;16dp&quot;&#10;                    android:paddingRight=&quot;16dp&quot;&#10;                    android:paddingBottom=&quot;8dp&quot;&gt;&#10;&#10;                    &lt;!-- Tema de la Aplicación --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_tema&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_view&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Tema de la Aplicación&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Notificaciones --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_notificaciones&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/stat_notify_chat&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Notificaciones&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Filtros de Mascotas --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_filtros&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_search&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Filtros de Mascotas&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Ubicación --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_ubicacion&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_mapmode&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Ubicación&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Accesibilidad --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/submenu_accesibilidad&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackground&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&#10;                        android:clickable=&quot;true&quot;&#10;                        android:focusable=&quot;true&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;32dp&quot;&#10;                            android:layout_height=&quot;32dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_zoom&quot;&#10;                            android:alpha=&quot;0.6&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:layout_marginLeft=&quot;12dp&quot;&#10;                            android:text=&quot;Accesibilidad&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#444444&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;16dp&quot;&#10;                            android:layout_height=&quot;16dp&quot;&#10;                            android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                            android:alpha=&quot;0.4&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Mi Perfil --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_profile&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_myplaces&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Mi Perfil&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Información personal y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Divider --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;        &lt;!-- Settings Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Configuración --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_settings&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_manage&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Configuración&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Notificaciones, privacidad y cuenta&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Ayuda y Soporte --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_help&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_help&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Ayuda y Soporte&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Centro de ayuda y contacto&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Divider Line --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;0.5dp&quot;&#10;                android:background=&quot;#E0E0E0&quot;&#10;                android:layout_marginLeft=&quot;72dp&quot; /&gt;&#10;&#10;            &lt;!-- Acerca de --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_about&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_info_details&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Acerca de AdoptMe&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Versión 1.0 • Términos y privacidad&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Divider --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:background=&quot;#F0F0F0&quot; /&gt;&#10;&#10;        &lt;!-- Logout Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:background=&quot;#FFFFFF&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/menu_logout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackground&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;40dp&quot;&#10;                    android:layout_height=&quot;40dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_revert&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginLeft=&quot;16dp&quot;&#10;                    android:text=&quot;Cerrar Sesión&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textColor=&quot;#333333&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;20dp&quot;&#10;                    android:layout_height=&quot;20dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_send&quot;&#10;                    android:alpha=&quot;0.5&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Bottom Padding --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;20dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_adoption_request.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_adoption_request.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;12dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&gt;&#10;&#10;        &lt;!-- Indicador de estado (barra lateral) --&gt;&#10;        &lt;View&#10;            android:id=&quot;@+id/status_indicator&quot;&#10;            android:layout_width=&quot;4dp&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:layout_marginEnd=&quot;12dp&quot;&#10;            android:background=&quot;#FFA500&quot; /&gt;&#10;&#10;        &lt;!-- Imagen de la mascota --&gt;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/iv_pet_image&quot;&#10;            android:layout_width=&quot;80dp&quot;&#10;            android:layout_height=&quot;80dp&quot;&#10;            android:scaleType=&quot;centerCrop&quot;&#10;            android:background=&quot;@drawable/rounded_corners&quot;&#10;            android:src=&quot;@drawable/search1&quot; /&gt;&#10;&#10;        &lt;!-- Información de la solicitud --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:layout_marginStart=&quot;12dp&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Nombre de la mascota --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_pet_name&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Rocky&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;#333333&quot; /&gt;&#10;&#10;            &lt;!-- Info de la mascota --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_pet_info&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Perro • Labrador • 2 años&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textColor=&quot;#666666&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- Estado --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_status&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Pendiente de revisión&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;#FFA500&quot;&#10;                android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;!-- Fecha de solicitud --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_date&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;15/01/2025 14:30&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#999999&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- ID de solicitud --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_request_id&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Solicitud #1&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;#999999&quot;&#10;                android:layout_marginTop=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_chat_user.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_chat_user.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:background=&quot;?attr/selectableItemBackground&quot;&#10;    android:clickable=&quot;true&quot;&#10;    android:focusable=&quot;true&quot;&#10;    android:orientation=&quot;horizontal&quot;&#10;    android:padding=&quot;12dp&quot;&gt;&#10;&#10;    &lt;!-- Avatar --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/user_avatar&quot;&#10;        android:layout_width=&quot;50dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_gravity=&quot;center_vertical&quot;&#10;        android:background=&quot;@android:drawable/dialog_holo_light_frame&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        android:src=&quot;@android:drawable/ic_menu_myplaces&quot;&#10;        app:tint=&quot;#6200EE&quot; /&gt;&#10;&#10;    &lt;!-- Contenido --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;12dp&quot;&#10;        android:layout_weight=&quot;1&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/user_name&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:ellipsize=&quot;end&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:text=&quot;Usuario Nombre&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/message_time&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:text=&quot;12:30 PM&quot;&#10;                android:textColor=&quot;#999999&quot;&#10;                android:textSize=&quot;12sp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/last_message&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:ellipsize=&quot;end&quot;&#10;            android:maxLines=&quot;2&quot;&#10;            android:text=&quot;Este es el último mensaje enviado...&quot;&#10;            android:textColor=&quot;#666666&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Badge de mensajes no leídos --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/unread_badge&quot;&#10;        android:layout_width=&quot;24dp&quot;&#10;        android:layout_height=&quot;24dp&quot;&#10;        android:layout_gravity=&quot;center_vertical&quot;&#10;        android:layout_marginStart=&quot;8dp&quot;&#10;        android:background=&quot;@android:drawable/dialog_holo_light_frame&quot;&#10;        android:backgroundTint=&quot;#FF5722&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:text=&quot;5&quot;&#10;        android:textColor=&quot;#FFFFFF&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:visibility=&quot;gone&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_message.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_message.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;8dp&quot;&gt;&#10;&#10;    &lt;!-- Mensaje mío (derecha) --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/my_message_layout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:gravity=&quot;end&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:visibility=&quot;gone&quot;&gt;&#10;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;50dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            app:cardBackgroundColor=&quot;#DCF8C6&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;12dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/my_message_text&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:textColor=&quot;#000000&quot;&#10;                    android:textSize=&quot;15sp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/my_message_time&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot;&#10;                    android:gravity=&quot;end&quot;&#10;                    android:textColor=&quot;#757575&quot;&#10;                    android:textSize=&quot;11sp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Mensaje del otro (izquierda) --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/other_message_layout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:gravity=&quot;start&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:visibility=&quot;gone&quot;&gt;&#10;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginEnd=&quot;50dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            app:cardBackgroundColor=&quot;#FFFFFF&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;12dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/other_sender_name&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:textColor=&quot;#2196F3&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:visibility=&quot;gone&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/other_message_text&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;2dp&quot;&#10;                    android:textColor=&quot;#000000&quot;&#10;                    android:textSize=&quot;15sp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/other_message_time&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot;&#10;                    android:gravity=&quot;start&quot;&#10;                    android:textColor=&quot;#757575&quot;&#10;                    android:textSize=&quot;11sp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_message_received.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_message_received.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;!-- Mensaje recibido (izquierda) --&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:gravity=&quot;start&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;4dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginEnd=&quot;60dp&quot;&#10;        android:background=&quot;@android:drawable/dialog_holo_light_frame&quot;&#10;        android:backgroundTint=&quot;#EEEEEE&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;12dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/sender_name&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Admin&quot;&#10;            android:textColor=&quot;#6200EE&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:visibility=&quot;visible&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/message_text&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;2dp&quot;&#10;            android:text=&quot;Este es un mensaje recibido&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/message_time&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:text=&quot;12:30 PM&quot;&#10;            android:textColor=&quot;#999999&quot;&#10;            android:textSize=&quot;10sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_message_sent.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_message_sent.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;!-- Mensaje propio (derecha) --&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:gravity=&quot;end&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;4dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;60dp&quot;&#10;        android:background=&quot;@android:drawable/dialog_holo_light_frame&quot;&#10;        android:backgroundTint=&quot;#6200EE&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;12dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/message_text&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Este es mi mensaje&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/message_time&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:text=&quot;12:30 PM&quot;&#10;            android:textColor=&quot;#E0E0E0&quot;&#10;            android:textSize=&quot;10sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_notification.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_notification.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:background=&quot;?attr/selectableItemBackground&quot;&gt;&#10;&#10;        &lt;!-- Icono de notificación --&gt;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/notification_icon&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:src=&quot;@android:drawable/ic_dialog_info&quot;&#10;            app:tint=&quot;@color/primary&quot;&#10;            android:layout_gravity=&quot;center_vertical&quot;&#10;            android:contentDescription=&quot;@string/notifications&quot; /&gt;&#10;&#10;        &lt;!-- Contenido de la notificación --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Título --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/notification_title&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Nueva solicitud de adopción&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@color/black&quot; /&gt;&#10;&#10;            &lt;!-- Mensaje --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/notification_message&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Josmel Vilca quiere adoptar a Luna&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textColor=&quot;@android:color/darker_gray&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:maxLines=&quot;2&quot;&#10;                android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;            &lt;!-- Fecha --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/notification_date&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Hace 5 minutos&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textColor=&quot;@android:color/darker_gray&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Indicador de no leído --&gt;&#10;        &lt;View&#10;            android:id=&quot;@+id/unread_indicator&quot;&#10;            android:layout_width=&quot;12dp&quot;&#10;            android:layout_height=&quot;12dp&quot;&#10;            android:background=&quot;@drawable/notification_badge_background&quot;&#10;            android:layout_gravity=&quot;center_vertical&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:visibility=&quot;visible&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_user_chat.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_user_chat.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/user_name&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:textColor=&quot;#000000&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/unread_badge&quot;&#10;                android:layout_width=&quot;24dp&quot;&#10;                android:layout_height=&quot;24dp&quot;&#10;                android:background=&quot;@drawable/badge_circle&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:visibility=&quot;gone&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/user_email&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:textColor=&quot;#757575&quot;&#10;            android:textSize=&quot;12sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/last_message&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:ellipsize=&quot;end&quot;&#10;            android:maxLines=&quot;2&quot;&#10;            android:textColor=&quot;#424242&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/message_time&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:gravity=&quot;end&quot;&#10;            android:textColor=&quot;#9E9E9E&quot;&#10;            android:textSize=&quot;11sp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step1_personal_info.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step1_personal_info.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step1_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;visible&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Información Personal&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_nombres_completos&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Nombres Completos *&quot;&#10;            android:inputType=&quot;textPersonName&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_email&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Correo Electrónico *&quot;&#10;            android:inputType=&quot;textEmailAddress&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_telefono&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Teléfono *&quot;&#10;            android:inputType=&quot;phone&quot;&#10;            android:maxLength=&quot;9&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_fecha_nacimiento&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Fecha de Nacimiento (YYYY-MM-DD) *&quot;&#10;            android:focusable=&quot;false&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:inputType=&quot;none&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_direccion_completa&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Dirección Completa *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_ciudad&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Ciudad *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_distrito&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Distrito *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step2_home_info.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step2_home_info.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step2_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Información del Hogar&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Tipo de Vivienda *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/spinner_tipo_vivienda&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/rounded_box&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿El propietario acepta mascotas? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/spinner_propietario_acepta&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/rounded_box&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_miembros_familia&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Número de miembros en la familia *&quot;&#10;            android:inputType=&quot;number&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Hay niños en la familia? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_hay_ninos&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_ninos_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_ninos_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Hay alergias a mascotas en la familia? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_alergias_familia&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_alergias_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_alergias_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step3_pet_experience.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step3_pet_experience.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step3_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Experiencia con Mascotas&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Tienes otras mascotas actualmente? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_tiene_otras_mascotas&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_otras_mascotas_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_otras_mascotas_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_descripcion_otras_mascotas&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Si tienes otras mascotas, descríbelas (opcional)&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_experiencia_previa&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Experiencia previa con mascotas *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_tiempo_sola_mascota&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;¿Cuántas horas al día estará sola la mascota? *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Tienes veterinario de confianza? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_tiene_veterinario&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_veterinario_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_veterinario_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_presupuesto_mensual&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Presupuesto mensual para la mascota *&quot;&#10;            android:inputType=&quot;text&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/step4_motivation.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/step4_motivation.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/step4_layout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Motivación y Compromiso&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#333333&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_motivacion_adopcion&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;¿Por qué quieres adoptar esta mascota? *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_conocimiento_raza&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;¿Qué sabes sobre esta raza/especie? *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;¿Estás dispuesto a entrenar a la mascota? *&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_dispuesto_entrenar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_entrenar_si&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Sí&quot; /&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_entrenar_no&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;No&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_compromiso_largo_plazo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Compromiso a largo plazo con la mascota *&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:minLines=&quot;3&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;* Campos requeridos&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textColor=&quot;#FF6F61&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/network_security_config.xml" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;network-security-config&gt;&#10;    &lt;!-- Permitir todo el tráfico HTTP para desarrollo --&gt;&#10;    &lt;base-config cleartextTrafficPermitted=&quot;true&quot;&gt;&#10;        &lt;trust-anchors&gt;&#10;            &lt;certificates src=&quot;system&quot; /&gt;&#10;        &lt;/trust-anchors&gt;&#10;    &lt;/base-config&gt;&#10;&lt;/network-security-config&gt;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/rebuild_clean.bat">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/rebuild_clean.bat" />
              <option name="updatedContent" value="@echo off&#10;echo ========================================&#10;echo LIMPIEZA Y RECONSTRUCCION DE ADOPTME&#10;echo ========================================&#10;echo.&#10;&#10;echo [1/5] Eliminando carpetas build...&#10;if exist &quot;build&quot; rd /s /q &quot;build&quot;&#10;if exist &quot;app\build&quot; rd /s /q &quot;app\build&quot;&#10;if exist &quot;.gradle&quot; rd /s /q &quot;.gradle&quot;&#10;echo Carpetas build eliminadas.&#10;echo.&#10;&#10;echo [2/5] Ejecutando gradlew clean...&#10;call gradlew.bat clean&#10;echo.&#10;&#10;echo [3/5] Invalidando cache de Gradle...&#10;call gradlew.bat --stop&#10;echo.&#10;&#10;echo [4/5] Reconstruyendo proyecto...&#10;call gradlew.bat assembleDebug&#10;echo.&#10;&#10;echo [5/5] COMPLETADO!&#10;echo.&#10;echo ========================================&#10;echo Ahora ejecuta la app desde Android Studio&#10;echo o usa: gradlew.bat installDebug&#10;echo ========================================&#10;pause&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>